{"version":3,"sources":["./src/app/page/project-management/scene-management/area-standard-set/area-standard-set-routing.module.ts","./src/app/page/project-management/scene-management/area-standard-set/area-standard-set.module.ts","./src/app/page/project-management/scene-management/area-standard-set/area-standard-set.page.ts","./src/app/page/project-management/scene-management/area-standard-set/component/area.module.ts","./src/app/page/project-management/scene-management/area-standard-set/component/nfc-info/nfc-info.component.ts","./src/app/page/project-management/scene-management/area-standard-set/area-standard-set.page.scss","./src/app/page/project-management/scene-management/area-standard-set/component/nfc-info/nfc-info.component.scss","./src/app/page/project-management/scene-management/area-standard-set/area-standard-set.page.html","./src/app/page/project-management/scene-management/area-standard-set/component/nfc-info/nfc-info.component.html"],"names":[],"mappings":"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","file":"src_app_page_project-management_scene-management_area-standard-set_area-standard-set_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AreaStandardSetPage } from './area-standard-set.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AreaStandardSetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AreaStandardSetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AreaStandardSetPageRoutingModule } from './area-standard-set-routing.module';\n\nimport { AreaStandardSetPage } from './area-standard-set.page';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { BasicComponentModule } from 'src/app/basic/component/basic.component.module';\nimport { AreaAddPageModule } from '../area-add/area-add.module';\nimport { AreaModule } from './component/area.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    BasicComponentModule,\n    AreaStandardSetPageRoutingModule,\n    AreaAddPageModule,\n    AreaModule\n  ],\n  declarations: [AreaStandardSetPage]\n})\nexport class AreaStandardSetPageModule {}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { async } from '@angular/core/testing';\nimport { ModalController } from '@ionic/angular';\nimport { GpsCoordinateData } from 'src/app/basic/component/input/naver-map/naver-map.component';\nimport { ConnectResult, ConnectService } from 'src/app/basic/service/core/connect.service';\nimport { FileBlob, FileJson, FutItem } from 'src/app/basic/service/core/file.service';\nimport { UserService } from 'src/app/basic/service/core/user.service';\nimport { AlertService } from 'src/app/basic/service/ionic/alert.service';\nimport { ToastService } from 'src/app/basic/service/ionic/toast.service';\nimport { SearchAreaComponent } from 'src/app/component/modal/search-area/search-area.component';\nimport { AreaAddPage } from '../area-add/area-add.page';\nimport { NfcInfoComponent } from './component/nfc-info/nfc-info.component';\n\nexport class FileData {\n  file: (File | FileBlob)[] = [];\n  file_json: FileJson = new FileJson();\n  project_id: number\n  file_data: FutItem[] = [];\n  ctgo_business_field_id: string;\n  ctgo_business_field_name: string;\n}\n\nexport class GPS_COORDINATE_DATA {\n  gps_latitude: number[] = [];\n  gps_longitude: number[] = [];\n}\n\nexport class SelectItem {\n  area_bottom_id: number;\n  area_bottom_name: string;\n  area_middle_id: number;\n  area_middle_name: string;\n  area_risk_id: number;\n  area_risk_name: string;\n  area_top_id: number;\n  area_top_name: string;\n  ctgo_area_risk_name: string;\n  gps_id: number;\n  gps_state: number;\n  project_id: number;\n  gps_coordinate_data = new GPS_COORDINATE_DATA();\n}\n\n@Component({\n  selector: 'app-area-standard-set',\n  templateUrl: './area-standard-set.page.html',\n  styleUrls: ['./area-standard-set.page.scss'],\n})\nexport class AreaStandardSetPage implements OnInit {\n\n  menuCount: Number = 1;\n  //장소\n  resAreaOne: ConnectResult<{\n    area_top_name: string,\n    area_top_id: number\n  }>;\n\n  resAreaTwo: ConnectResult<{\n    area_middle_name: string, // 장소2\n    area_top_id: number, // 장소1 ID\n    area_middle_id: number // 장소2 ID\n  }>;\n\n  form: FileData = new FileData();\n  resAreaThree: ConnectResult<{\n    area_bottom_name: string, //장소 3\n    area_top_id: number, // 장소1 ID\n    area_middle_id: number, // 장소2 ID\n    area_bottom_id: number // 장소3 ID\n  }>\n\n  AreaOneForm = {\n    project_id: this.user.userData.belong_data.project_id\n  }\n  riskProjectForm = {\n    limit_no: 0,\n    project_id: this.user.userData.belong_data.project_id\n  }\n  selectDataArea1 = [];\n  selectDataArea2 = [];\n  selectDataArea3 = [];\n\n  area_top_id: number;\n  area_middle_id: number;\n  area_bottom_id: number;\n\n  testtttt = 0;\n  //장소 끝\n\n  resRiskArea: ConnectResult<{\n    second_user_id: number, // 관리 책임자 부\n    area_risk_id: number, // 위험지역 ID\n    area_middle_name: string, // 장소2\n    ctgo_area_risk_name: string, // 위험지역 유형\n    area_middle_id: number, // 장소2 ID\n    ctgo_area_risk_id: number, // 위험지역 ID\n    area_risk_name: string, // 위험지역 명\n    manager_user_id: number, // 관리 책임자 정\n    area_bottom_name: string, // 장소3\n    area_risk_type: string, // 실내/실외\n    nfc_state: number, // NFC 등록여부 개수\n    project_id: number, // 현장 ID\n    area_top_id: number, // 장소1 ID\n    area_bottom_id: number, // 장소3 ID\n    area_risk_use_state: number, // 사용여부\n    area_top_name: string, // 장소1\n    gps_state: number // GPS 등록여부 / 1 등록, 0 미등록\n    row_count: number\n  }>;\n\n  riskAreaName: string;\n  resCtgoRisk: ConnectResult<{\n    ctgo_area_risk_id: number,\n    ctgo_area_risk_name: string\n  }>\n  addRiskAreaArr = [];\n  addRiskData = {\n    area_middle_name: '', // 장소2\n    area_bottom_name: '', // 장소3\n    area_top_name: '', // 장소1\n  }\n  riskAreaData = [];\n\n  area_risk_use_state_data = [];\n  gps_coordinate_data = new GpsCoordinateData();\n\n  resGPS: ConnectResult<{\n    area_bottom_name: string,\n    area_risk_id: number,\n    gps_id: number,\n    project_id: number,\n    area_middle_name: string,\n    ctgo_area_risk_name: string,\n    area_top_id: number,\n    area_middle_id: number,\n    area_bottom_id: number,\n    area_top_name: string,\n    gps_state: number,\n    area_risk_name: string\n  }>\n\n  resGPScood: ConnectResult<{\n    order_no: number,\n    gps_id: number,\n    gps_latitude: number,\n    gps_longitude: number\n  }>\n  gpsSelected = null;\n\n  naverMapSetting: boolean = true;\n  areaRoleCheck: boolean = true;\n\n  updateEdit: boolean = false;\n\n  // active_items = {\n  //   area_1: 0,\n  //   area_2: 0,\n  //   area_3: 0\n  // }\n\n  constructor(\n    private modal: ModalController,\n    private connect: ConnectService,\n    private toast: ToastService,\n    private alert: AlertService,\n    public user: UserService,\n    private changeRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    if (this.user.userData.user_role === 'MASTER_HEAD' ||\n      this.user.userData.user_role === 'LH_ADMIN' ||\n      this.user.userData.user_role === 'LH_HEAD') {\n      this.areaRoleCheck = false;\n    }\n    this.getGuidemap();\n    this.AreaOne();\n    this.CtgoRisk();\n  }\n\n  async areaSearch() {\n    await this.getGuidemap();\n    await this.AreaOne();\n  }\n  async getGuidemap() {\n    const res = await this.connect.run('/project/area/guidemap/get', { project_id: this.AreaOneForm.project_id, }, {\n      parse: ['file_data']\n    });\n    if (res.rsCode === 0) {\n      this.form = {\n        ...this.form,\n        ...res.rsObj\n      };\n    } else {\n      this.form = null;\n      console.log(\"this.from\", this.form);\n    }\n  }\n\n  async updateGuidemap() {\n    this.alert.present({\n      message: '저장 하시겠습니까?',\n      buttons: [\n        { text: '아니요' },\n        {\n          text: '예',\n          handler: async () => {\n            this.form.project_id = this.AreaOneForm.project_id;\n            const res = await this.connect.run('/project/area/guidemap/update', this.form, {});\n            if (res.rsCode === 0) { }\n          }\n        }\n      ]\n    });\n  }\n\n  async AreaOne() {\n    this.resAreaOne = await this.connect.run('/project/area/top/get', this.AreaOneForm, {});\n    if (this.resAreaOne.rsCode === 0) {\n\n    }\n  }\n\n  async areaTow(area_top_id) {\n    this.area_top_id = area_top_id;\n    this.area_middle_id = 0;\n    this.area_bottom_id = 0;\n    this.resAreaThree = null;\n    this.resAreaTwo = await this.connect.run('/project/area/middle/get', { area_top_id: area_top_id }, {});\n    if (this.resAreaTwo.rsCode === 0) {\n\n    }\n  }\n\n  async areaThree(area_middle_id) {\n    this.area_middle_id = area_middle_id;\n    this.area_bottom_id = 0;\n    this.resAreaThree = await this.connect.run('/project/area/bottom/get', {\n      area_middle_id: area_middle_id,\n      area_top_id: this.area_top_id\n    }, {});\n    if (this.resAreaThree.rsCode === 0) {\n\n    }\n  }\n\n  async areaFour(area_bottom_id){\n    this.area_bottom_id = area_bottom_id;\n  }\n\n  async areaOneEdit(area, update?) {\n    if (update) {\n      if (!this.selectDataArea1.length) return await this.toast.present({ message: '장소를 선택해 주세요', color: 'danger' });\n    }\n    if (this.selectDataArea1.length > 1) return await this.toast.present({ message: '한 개만 선택해 주세요.', color: 'danger' });\n    if (!this.AreaOneForm.project_id) return await this.toast.present({ message: '현장을 선택해 주세요.', color: 'danger' });\n    const modal = await this.modal.create({\n      component: AreaAddPage,\n      componentProps: {\n        selectData: this.selectDataArea1[0],\n        project_id: this.AreaOneForm.project_id,\n        area\n      },\n      cssClass: 'lhOrganization'\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if (data) {\n      this.AreaOne();\n    }\n  }\n\n\n  async areaTwoEdit(area, update?) {\n    if (update) {\n      if (!this.selectDataArea2.length) return await this.toast.present({ message: '장소를 선택해 주세요', color: 'danger' });\n    }\n    if (!this.area_top_id) return this.toast.present({ message: 'area1을 선택해주세요.', color: 'warning' });\n    if (this.selectDataArea2.length > 1) return await this.toast.present({ message: '한 개만 선택해 주세요.', color: 'danger' });\n    if (!this.AreaOneForm.project_id) return await this.toast.present({ message: '현장을 선택해 주세요.', color: 'danger' });\n    const modal = await this.modal.create({\n      component: AreaAddPage,\n      componentProps: {\n        area_top_id: this.area_top_id,\n        selectData: this.selectDataArea2[0],\n        project_id: this.AreaOneForm.project_id,\n        area\n      },\n      cssClass: 'lhOrganization'\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if (data) {\n      this.areaTow(data);\n    }\n    // if(data) this.testarr.push({text:data.text});\n  }\n\n\n  async areaThreeEdit(area, update?) {\n    if (update) {\n      if (!this.selectDataArea3.length) return await this.toast.present({ message: '장소를 선택해 주세요' });\n    }\n    if (this.selectDataArea3.length > 1) return await this.toast.present({ message: '한 개만 선택해 주세요.' });\n    if (!this.AreaOneForm.project_id) return await this.toast.present({ message: '현장을 선택해 주세요.' });\n    if (!this.area_top_id) return this.toast.present({ message: 'area1을 선택해주세요.', color: 'warning' });\n    if (!this.area_middle_id) return this.toast.present({ message: 'area2를 선택해주세요', color: 'warning' });\n    const modal = await this.modal.create({\n      component: AreaAddPage,\n      componentProps: {\n        area_middle_id: this.area_middle_id,\n        selectData: this.selectDataArea3[0],\n        area_top_id: this.area_top_id,\n        area\n      },\n      cssClass: 'lhOrganization'\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if (data) {\n      this.areaThree(data);\n    }\n  }\n\n  async deleteArea(area) {\n    const alert = await this.alert.present({\n      message: '삭제 하시겠습니까?',\n      buttons: [\n        { text: '아니요' },\n        {\n          text: '예',\n          handler: async () => {\n            switch (area) {\n              case 1:\n                for (let i = 0; i < this.selectDataArea1.length; i++) {\n                  const res = await this.connect.run('/project/area/top/delete', {\n                    area_top_id: this.selectDataArea1[i].area_top_id,\n                    project_id: this.AreaOneForm.project_id\n                  });\n                  if (res.rsCode === 0) { this.AreaOne() };\n                }\n                break;\n              case 2:\n                for (let i = 0; i < this.selectDataArea2.length; i++) {\n                  const res = await this.connect.run('/project/area/middle/delete', {\n                    area_middle_id: this.selectDataArea2[i].area_middle_id,\n                    area_top_id: this.area_top_id,\n                  });\n                  if (res.rsCode === 0) { this.areaTow(this.area_top_id) };\n                }\n                break;\n              case 3:\n                for (let i = 0; i < this.selectDataArea3.length; i++) {\n                  const res = await this.connect.run('/project/area/bottom/delete', {\n                    area_top_id: this.area_top_id,\n                    area_middle_id: this.area_middle_id,\n                    area_bottom_id: this.selectDataArea3[i].area_bottom_id\n                  });\n                  if (res.rsCode === 0) { this.areaThree(this.area_middle_id) };\n                }\n                break;\n            }\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n\n  async getRiskArea(limit_no = this.riskProjectForm.limit_no) {\n    this.addRiskAreaArr = [];\n    this.riskProjectForm.limit_no = limit_no;\n    this.menuCount = 2;\n    this.updateEdit = true;\n\n    this.resRiskArea = await this.connect.run('/project/area/risk/get', this.riskProjectForm);\n    if (this.resRiskArea.rsCode === 0) {\n      setTimeout(() => {\n        this.updateEdit = false;\n      }, 1000);\n    } else {\n      if (!this.riskProjectForm.limit_no) this.toast.present({ message: this.resRiskArea.rsMsg, color: 'warning' });\n    }\n  }\n\n  addRiskArea() {\n    if (this.resRiskArea?.rsMap) {\n      this.resRiskArea.rsMap.unshift({\n        second_user_id: 0, // 관리 책임자 부\n        area_risk_id: 0, // 위험지역 ID\n        area_middle_name: '', // 장소2\n        ctgo_area_risk_name: '', // 위험지역 유형\n        area_middle_id: 0, // 장소2 ID\n        ctgo_area_risk_id: 0, // 위험지역 ID\n        area_risk_name: '', // 위험지역 명\n        manager_user_id: 0, // 관리 책임자 정\n        area_bottom_name: '', // 장소3\n        area_risk_type: '', // 실내/실외\n        nfc_state: 0, // NFC 등록여부 개수\n        project_id: 0, // 현장 ID\n        area_top_id: 0, // 장소1 ID\n        area_bottom_id: 0, // 장소3 ID\n        area_risk_use_state: 1, // 사용여부\n        area_top_name: '', // 장소1\n        gps_state: 0, // GPS 등록여부 / 1 등록, 0 미등록\n        row_count: 0\n      });\n    } else {\n      this.resRiskArea.rsMap = [];\n      this.resRiskArea.rsMap.push({\n        second_user_id: 0, // 관리 책임자 부\n        area_risk_id: 0, // 위험지역 ID\n        area_middle_name: '', // 장소2\n        ctgo_area_risk_name: '', // 위험지역 유형\n        area_middle_id: 0, // 장소2 ID\n        ctgo_area_risk_id: 0, // 위험지역 ID\n        area_risk_name: '', // 위험지역 명\n        manager_user_id: 0, // 관리 책임자 정\n        area_bottom_name: '', // 장소3\n        area_risk_type: '', // 실내/실외\n        nfc_state: 0, // NFC 등록여부 개수\n        project_id: 0, // 현장 ID\n        area_top_id: 0, // 장소1 ID\n        area_bottom_id: 0, // 장소3 ID\n        area_risk_use_state: 1, // 사용여부\n        area_top_name: '', // 장소1\n        gps_state: 0, // GPS 등록여부 / 1 등록, 0 미등록\n        row_count: 0\n      });\n    }\n  }\n\n  async CtgoRisk() {\n    this.resCtgoRisk = await this.connect.run('/category/risk/type/get', {}, {});\n    if (this.resCtgoRisk.rsCode === 0) { };\n  }\n\n  async riskSave() {\n    const riskArea = this.resRiskArea.rsMap;\n    riskArea.forEach(async (item, i) => {\n      // if (!item.area_top_id) return this.toast.present({ message: '첫번째 장소를 선택해주세요.', color: 'warning' })\n      item.area_middle_id = item.area_middle_id  || 0;\n      item.area_bottom_id = item.area_middle_id  || 0;\n      // if (!item.area_middle_id) return this.toast.present({ message: '두번째 장소를 선택해주세요.', color: 'warning' })\n      // if (!item.area_bottom_id) return this.toast.present({ message: '세번째 장소를 선택해주세요.', color: 'warning' })\n      \n      if (!item.ctgo_area_risk_id) return this.toast.present({ message: '위험지역유형을 선택해주세요.', color: 'warning' });\n      if (!item.area_risk_name) return this.toast.present({ message: '위험지역명을 작성해주세요.', color: 'warning' });\n      // if (!item.area_risk_type) return this.toast.present({ message: '실내/실외를 선택해주세요.', color: 'warning' });\n      // if (!item.manager_user_id) return this.toast.present({ message: '관리 책임자(정(을 선택해주세요.', color: 'warning' })\n      // if (!item.second_user_id) return this.toast.present({ message: '관리 책임자(부)를 선택해주세요.', color: 'warning' })\n      if (!item.area_risk_id) {\n        item.project_id = this.riskProjectForm.project_id;\n        const resInsert = await this.connect.run('/project/risk_area/insert', item);\n        if (resInsert.rsCode === 0) {\n          this.getRiskArea();\n          if (this.addRiskAreaArr.length === i) {\n            this.toast.present({ message: '저장되었습니다.', color: 'primary' });\n          }\n        } else {\n          this.toast.present({ message: resInsert.rsMsg, color: 'warning' });\n        }\n      }\n\n    });\n  }\n\n  async nfcView(area_risk_id) {\n    if (!area_risk_id) return;\n    const modal = await this.modal.create({\n      component: NfcInfoComponent,\n      componentProps: { area_risk_id },\n      cssClass: 'lhOrganization'\n    });\n    modal.present();\n  }\n\n  async riskAreaSearch(item) {\n    console.log(item);\n    if (item.area_risk_id) return;\n    const modal = await this.modal.create({\n      component: SearchAreaComponent,\n      componentProps: {\n        project_id: this.riskProjectForm.project_id\n      }\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if (data) {\n      const riskArea = this.resRiskArea.rsMap;\n      for (let i = 0; i < riskArea.length; i++) {\n        if (!riskArea[i].area_risk_id) {\n          item.area_top_id = data?.area1selectedItem.area_top_id;\n          item.area_middle_id = data?.area2selectedItem?.area_middle_id;\n          item.area_bottom_id = data?.area3selectedItem?.area_bottom_id;\n          item.area_top_name = data?.area1selectedItem.area_top_name;\n          item.area_middle_name = data?.area2selectedItem?.area_middle_name;\n          item.area_bottom_name = data?.area3selectedItem?.area_bottom_name;\n        }\n      }\n    }\n  }\n\n  async deleteRisk() {\n    if (!this.riskAreaData.length) return this.toast.present({ message: '최소 1개이상 선택해주세요.', color: 'warning' });\n    const alert = await this.alert.present({\n      message: '삭제 하시겠습니까?',\n      buttons: [\n        { text: '아니요' },\n        {\n          text: '예',\n          handler: async () => {\n            this.riskAreaData.forEach(async (item, i) => {\n              if (item.area_risk_id) {\n                const res = await this.connect.run('/project/risk_area/delete', {\n                  area_risk_id: item.area_risk_id,\n                  project_id: this.riskProjectForm.project_id\n                });\n                if (res.rsCode === 0) {\n                  if (this.riskAreaData.length === i) {\n                    this.toast.present({ message: '삭제 되었습니다.', color: 'primary' });\n                  }\n                  this.getRiskArea();\n                } else {\n                  this.toast.present({ message: res.rsMsg, color: 'warning' })\n                }\n              } else {\n                const list = this.resRiskArea.rsMap;\n                list.splice(list.findIndex(data => data === item), 1);\n              }\n            });\n          }\n        }\n      ]\n    })\n  }\n\n  allStatus(status) {\n    console.log(status);\n    this.resRiskArea.rsMap.forEach(item => {\n      item.area_risk_use_state = status ? 1 : 0;\n    })\n  }\n\n  async editState(item) {\n    this.area_risk_use_state_data.push({\n      area_risk_id: item.area_risk_id,\n      area_risk_use_state: item.area_risk_use_state\n    });\n    // const res = await this.connect.run('/project/area/risk/use/update',);\n  }\n\n  async areaGPS() {\n    this.menuCount = 3;\n    this.resGPS = await this.connect.run('/project/area/risk/gps/get', this.riskProjectForm);\n    if (this.resGPS.rsCode === 0) {\n      this.getGpsCoodrinate(this.resGPS.rsMap?.[0]);\n    };\n  }\n\n  initMap:boolean = false;\n  async getGpsCoodrinate(item) {\n    console.log(item);\n    if(!item) return;\n    this.gpsSelected = item;\n    this.naverMapSetting = false;\n    \n    \n    this.initMap = false;\n    if (item.gps_id){\n      this.resGPScood = await this.connect.run('/project/area/risk/gps_coodrinate/get', { gps_id: item.gps_id });\n      if (this.resGPScood.rsCode === 0) {\n        const gps_coordinate_data = new GpsCoordinateData();\n        this.resGPScood.rsMap.forEach(data => {\n          if(item.gps_id === data.gps_id) {\n            gps_coordinate_data.gps_latitude.push(data.gps_latitude);\n            gps_coordinate_data.gps_longitude.push(data.gps_longitude);\n          }\n        });\n        this.gps_coordinate_data = gps_coordinate_data;\n      }\n      else {\n        this.gps_coordinate_data = new GpsCoordinateData();\n      }\n    } else {\n      this.gps_coordinate_data = new GpsCoordinateData();\n    }\n\n    setTimeout(() => {\n      this.initMap = true;\n    }, 0);\n  }\n  async gpsSave() {\n    if (!this.gpsSelected.area_risk_id) return this.toast.present({ message: '위험지역을 선택해주세요.', color: 'warning' });\n\n    this.gpsSelected.gps_coordinate_data = this.gps_coordinate_data;\n    const res = await this.connect.run('/project/area/risk/gps/insert', this.gpsSelected, {});\n    if (res.rsCode === 0) {\n      this.toast.present({ message: '등록되었습니다.', color:'primary' });\n      this.areaGPS();\n    } else {\n      this.toast.present({ message: res.rsMsg, color:'warning' });\n    }\n  }\n\n  async updateState(item) {\n    if (this.updateEdit) return; // 업데이트 권한? 나중에 확인\n    if(!item.area_risk_id) return; // 신규 등록일 시, id가 없으면 업데이트를 하면 안됨.\n\n    let area_risk_use_state_data = [];\n    area_risk_use_state_data.push({\n      area_risk_id: item.area_risk_id,\n      area_risk_use_state: item.area_risk_use_state\n    });\n    \n    const resUpdate = await this.connect.run('/project/area/risk/use/update', { area_risk_use_state_data: area_risk_use_state_data });\n    \n    if (resUpdate.rsCode === 0) {\n      this.getRiskArea();\n      this.toast.present({ message: '저장되었습니다.', color: 'primary' });\n    } \n    else {\n      this.toast.present({ message: resUpdate.rsMsg, color: 'warning' });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { NfcInfoComponent } from './nfc-info/nfc-info.component';\n\n\n\n@NgModule({\n  declarations: [\n    NfcInfoComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule\n\n  ],\n  exports:[\n    NfcInfoComponent\n  ]\n})\nexport class AreaModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ConnectResult, ConnectService } from 'src/app/basic/service/core/connect.service';\n\n@Component({\n  selector: 'app-nfc-info',\n  templateUrl: './nfc-info.component.html',\n  styleUrls: ['./nfc-info.component.scss'],\n})\nexport class NfcInfoComponent implements OnInit {\n\n  @Input() area_risk_id;\n  \n  nfcData:ConnectResult <{\n    device_id: number, // 장비 ID\n    serial_no: string, // 등록넘버\n    serial_id: number // 등록 ID\n  }>\n  constructor(\n    private connect: ConnectService\n  ) { }\n\n  ngOnInit() {\n    this.getNfc();\n  }\n  async getNfc() {\n    this.nfcData = await this.connect.run('/project/area/risk/nfc/get',{area_risk_id:this.area_risk_id})\n    if(this.nfcData.rsCode === 0) {};\n  }\n}\n","export default \":host .map-container {\\n  height: 400px;\\n  background: var(--ion-color-step-50);\\n}\\n\\n:host .map-container app-naver-map {\\n  height: 100%;\\n}\\n\\n:host app-button {\\n  margin-bottom: 0;\\n}\\n\\n:host .edit {\\n  height: 230px;\\n  overflow: scroll;\\n}\\n\\n:host .edit th {\\n  position: sticky;\\n  top: 0;\\n  z-index: 2;\\n}\\n\\n:host .selected td {\\n  background: var(--ion-color-secondary);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyZWEtc3RhbmRhcmQtc2V0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGFBQWE7RUFDYixvQ0FBb0M7QUFBNUM7O0FBSEE7RUFLWSxZQUFZO0FBRXhCOztBQVBBO0VBU1EsZ0JBQWdCO0FBRXhCOztBQVhBO0VBWVEsYUFBYTtFQUNiLGdCQUFnQjtBQUd4Qjs7QUFoQkE7RUFlWSxnQkFBZ0I7RUFDaEIsTUFBTTtFQUNOLFVBQVU7QUFLdEI7O0FBdEJBO0VBc0JZLHNDQUFzQztBQUlsRCIsImZpbGUiOiJhcmVhLXN0YW5kYXJkLXNldC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcbiAgICAubWFwLWNvbnRhaW5lciB7XG4gICAgICAgIGhlaWdodDogNDAwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTUwKTtcbiAgICAgICAgYXBwLW5hdmVyLW1hcCB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXBwLWJ1dHRvbiB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuICAgIC5lZGl0IHtcbiAgICAgICAgaGVpZ2h0OiAyMzBweDtcbiAgICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgICAgICAgdGgge1xuICAgICAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIHotaW5kZXg6IDI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnNlbGVjdGVkIHtcbiAgICAgICAgdGQge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG4gICAgICAgIH1cbiAgICB9XG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZmMtaW5mby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<app-header-admin></app-header-admin>\\n\\n<ion-content>\\n  <ion-toolbar color=\\\"white\\\" *ngIf=\\\"!areaRoleCheck\\\" style=\\\"margin-bottom: 8px;\\\">\\n    <app-row>\\n      <app-col size=\\\"auto\\\">\\n        <ion-segment color=\\\"primary\\\" [value]=\\\"1\\\">\\n          <ion-segment-button (click)=\\\"this.menuCount = 1;\\\" [value]=\\\"1\\\">장소</ion-segment-button>\\n          <ion-segment-button (click)=\\\"getRiskArea()\\\">위험지역</ion-segment-button>\\n          <ion-segment-button (click)=\\\"areaGPS()\\\">위험지역<br>GPS 수집 범위</ion-segment-button>\\n        </ion-segment>\\n      </app-col>\\n    </app-row>\\n  </ion-toolbar>\\n  <ng-container *ngIf=\\\"!areaRoleCheck\\\">\\n    <app-row *ngIf=\\\"menuCount === 1\\\" style=\\\"align-items: flex-start;\\\">\\n      <app-col size=\\\"280px\\\">\\n        <app-table type=\\\"card\\\">\\n          <ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n            <app-row style=\\\"justify-content: space-between;\\\">\\n              <app-col size=\\\"auto\\\">\\n                <h5>필터</h5>\\n              </app-col>\\n              <app-col size=\\\"auto\\\">\\n                <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\" style=\\\"width: 100px;\\\" (click)=\\\"areaSearch()\\\">검색\\n                </app-button>\\n              </app-col>\\n            </app-row>\\n          </ion-toolbar>\\n          <tbody>\\n            <tr>\\n              <td>\\n                <app-select-scene [disabled]=\\\"areaRoleCheck\\\" [(ngModel)]=\\\"AreaOneForm.project_id\\\"></app-select-scene>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-select [disabled]=\\\"true\\\" label=\\\"사업분야\\\" [(ngModel)]=\\\"form.ctgo_business_field_id\\\">\\n                  <app-select-option [value]=\\\"1\\\">단지개발</app-select-option>\\n                  <app-select-option [value]=\\\"2\\\">아파트</app-select-option>\\n                  <app-select-option [value]=\\\"3\\\">교량 및 도록</app-select-option>\\n                  <app-select-option [value]=\\\"4\\\">터널</app-select-option>\\n                </app-select>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </app-table>\\n      </app-col>\\n\\n      <app-col>\\n        <div>\\n          <ion-toolbar color=\\\"white\\\">\\n            <h4>장소</h4>\\n            <ion-buttons slot=\\\"end\\\">\\n              <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"updateGuidemap()\\\" fill=\\\"translucent\\\">저장</app-button>\\n            </ion-buttons>\\n          </ion-toolbar>\\n        </div>\\n        <h4>\\n          <app-row>\\n            <app-col>\\n              현장안내도\\n            </app-col>\\n            <app-col size=\\\"auto\\\">\\n              <app-button [disabled]=\\\"areaRoleCheck\\\">\\n                <app-file view_type=\\\"GUIDE_MAP\\\" [(ngModel)]=\\\"form.file_data\\\" [file]=\\\"form.file\\\"\\n                  [file_json]=\\\"form.file_json\\\"></app-file>\\n                추가\\n              </app-button>\\n            </app-col>\\n          </app-row>\\n        </h4>\\n        <ng-container *ngIf=\\\"form.file_data\\\">\\n          <app-file-preview *ngFor=\\\"let futItem of form.file_data; let i = index\\\" (buttonClick)=\\\"form.file_data.splice(i,1)\\\" [futItem]=\\\"futItem\\\"></app-file-preview>\\n        </ng-container>\\n        <app-card>\\n          <ion-toolbar color=\\\"white\\\" slot=\\\"top\\\">\\n            <h5>장소등록</h5>\\n          </ion-toolbar>\\n          <app-row style=\\\"height: 300px;\\\">\\n            <app-col>\\n              <div style=\\\"text-align: right;\\\">\\n                <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"areaOneEdit('area1')\\\" fill=\\\"translucent\\\">추가</app-button>\\n                <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"deleteArea(1)\\\" color=\\\"danger\\\" fill=\\\"translucent\\\">삭제\\n                </app-button>\\n                <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"areaOneEdit('area1',1)\\\" fill=\\\"translucent\\\">수정\\n                </app-button>\\n              </div>\\n\\n              <app-check-group [(ngModel)]=\\\"selectDataArea1\\\">\\n                <app-table class=\\\"edit\\\">\\n                  <thead>\\n                    <tr>\\n                      <th style=\\\"width: 20px;\\\">\\n                        <app-check type=\\\"all\\\"></app-check>\\n                      </th>\\n                      <th>Area1</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr class=\\\"button\\\" *ngFor=\\\"let item of resAreaOne?.rsMap\\\" (click)=\\\"areaTow(item.area_top_id)\\\">\\n                      <td [style]=\\\"area_top_id === item.area_top_id ? 'background-color: var(--ion-color-secondary)' : ''\\\">\\n                        <app-check (click)=\\\"$event.stopPropagation()\\\" [on]=\\\"item\\\"></app-check>\\n                      </td>\\n                      <td [style]=\\\"area_top_id === item.area_top_id ? 'background-color: var(--ion-color-secondary)' : ''\\\">{{ item.area_top_name }}</td>\\n                    </tr>\\n                  </tbody>\\n                </app-table>\\n              </app-check-group>\\n            </app-col>\\n            <app-col>\\n              <div style=\\\"text-align: right;\\\">\\n                <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"areaTwoEdit('area2')\\\" fill=\\\"translucent\\\">추가</app-button>\\n                <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"deleteArea(2)\\\" color=\\\"danger\\\" fill=\\\"translucent\\\">삭제\\n                </app-button>\\n                <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"areaTwoEdit('area2',1)\\\" fill=\\\"translucent\\\">수정\\n                </app-button>\\n              </div>\\n\\n              <app-check-group [(ngModel)]=\\\"selectDataArea2\\\">\\n                <app-table class=\\\"edit\\\">\\n                  <tbody>\\n                    <th style=\\\"width: 20px;\\\">\\n                      <app-check type=\\\"all\\\"></app-check>\\n                    </th>\\n                    <th>Area2</th>\\n                  </tbody>\\n                  <tbody>\\n                    <tr class=\\\"button\\\" *ngFor=\\\"let areaTwo of resAreaTwo?.rsMap\\\"\\n                      (click)=\\\"areaThree(areaTwo.area_middle_id)\\\">\\n                      <td [style]=\\\"area_middle_id === areaTwo.area_middle_id ? 'background-color: var(--ion-color-secondary)' : ''\\\">\\n                        <app-check [on]=\\\"areaTwo\\\" (click)=\\\"$event.stopPropagation()\\\"></app-check>\\n                      </td>\\n                      <td [style]=\\\"area_middle_id === areaTwo.area_middle_id ? 'background-color: var(--ion-color-secondary)' : ''\\\">{{ areaTwo.area_middle_name}}</td>\\n                    </tr>\\n                  </tbody>\\n                </app-table>\\n              </app-check-group>\\n            </app-col>\\n            <app-col>\\n              <app-row>\\n                <app-col>\\n                  <div style=\\\"text-align: right;\\\">\\n                    <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"areaThreeEdit('area3')\\\" fill=\\\"translucent\\\">추가\\n                    </app-button>\\n                    <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"deleteArea(3)\\\" color=\\\"danger\\\" fill=\\\"translucent\\\">삭제\\n                    </app-button>\\n                    <app-button [disabled]=\\\"areaRoleCheck\\\" (click)=\\\"areaThreeEdit('area3',1)\\\" fill=\\\"translucent\\\">수정\\n                    </app-button>\\n                  </div>\\n\\n                  <app-check-group [(ngModel)]=\\\"selectDataArea3\\\">\\n                    <app-table class=\\\"edit\\\">\\n                      <thead>\\n                        <th style=\\\"width: 20px;\\\">\\n                          <app-check type=\\\"all\\\"></app-check>\\n                        </th>\\n                        <th>Area3</th>\\n                      </thead>\\n                      <tbody>\\n                        <tr (click)=\\\"areaFour(areathree.area_bottom_id)\\\" class=\\\"button\\\" *ngFor=\\\"let areathree of resAreaThree?.rsMap\\\">\\n                          <td [style]=\\\"area_bottom_id === areathree.area_bottom_id ? 'background-color: var(--ion-color-secondary)' : ''\\\">\\n                            <app-check [on]=\\\"areathree\\\"></app-check>\\n                          </td>\\n                          <td [style]=\\\"area_bottom_id === areathree.area_bottom_id ? 'background-color: var(--ion-color-secondary)' : ''\\\">{{ areathree.area_bottom_name }}</td>\\n                        </tr>\\n                      </tbody>\\n                    </app-table>\\n                  </app-check-group>\\n                </app-col>\\n              </app-row>\\n            </app-col>\\n          </app-row>\\n        </app-card>\\n      </app-col>\\n    </app-row>\\n  </ng-container>\\n\\n  <app-row *ngIf=\\\"menuCount === 2\\\" style=\\\"align-items: flex-start;\\\">\\n    <app-col size=\\\"280px\\\">\\n      <app-table type=\\\"card\\\">\\n        <ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n          <app-row style=\\\"justify-content: space-between;\\\">\\n            <app-col size=\\\"auto\\\">\\n              <h5>필터</h5>\\n            </app-col>\\n            <app-col size=\\\"auto\\\">\\n              <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\" style=\\\"width: 100px;\\\" (click)=\\\"getRiskArea()\\\">검색\\n              </app-button>\\n            </app-col>\\n          </app-row>\\n        </ion-toolbar>\\n        <tbody>\\n          <tr>\\n            <td>\\n              <app-select-scene [disabled]=\\\"areaRoleCheck\\\" [(ngModel)]=\\\"riskProjectForm.project_id\\\"></app-select-scene>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </app-table>\\n    </app-col>\\n    <app-col>\\n      <ion-toolbar color=\\\"white\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n          <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\" (click)=\\\"addRiskArea()\\\">추가</app-button>\\n          <app-button [disabled]=\\\"areaRoleCheck\\\" color=\\\"danger\\\" fill=\\\"translucent\\\" (click)=\\\"deleteRisk()\\\">삭제\\n          </app-button>\\n          <!-- <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\">엑셀 다운로드</app-button> -->\\n          <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\" (click)=\\\"allStatus(true)\\\">전체 사용</app-button>\\n          <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\" (click)=\\\"allStatus(false)\\\">전체 미사용</app-button>\\n        </ion-buttons>\\n      </ion-toolbar>\\n      <ion-toolbar *ngIf=\\\"!areaRoleCheck\\\" color=\\\"white\\\">\\n        <h5>위험지역 목록 (총 {{resRiskArea?.rsObj.row_count || 0}}건)</h5>\\n        <ion-buttons slot=\\\"end\\\">\\n          <app-button (click)=\\\"riskSave()\\\" fill=\\\"translucent\\\">저장</app-button>\\n        </ion-buttons>\\n      </ion-toolbar>\\n      <ng-container *ngIf=\\\"!areaRoleCheck\\\">\\n        <app-check-group [(ngModel)]=\\\"riskAreaData\\\">\\n          <app-table>\\n            <thead>\\n              <tr>\\n                <th rowspan=\\\"2\\\" style=\\\"width: 40px;\\\">\\n                  <app-check type=\\\"all\\\"></app-check>\\n                </th>\\n                <!-- <th rowspan=\\\"2\\\" style=\\\"width: 150ㅔㅌ;\\\">장소</th>\\n                <th rowspan=\\\"2\\\">위험지역 유형</th>\\n                <th rowspan=\\\"2\\\">위험지역명</th>\\n                <th rowspan=\\\"2\\\">실내/실외</th>\\n                <th rowspan=\\\"2\\\" style=\\\"width: 100px;\\\">GPS 등록 여부</th>\\n                <th rowspan=\\\"2\\\" style=\\\"width: 100px;\\\">NFC 등록 여부</th>\\n                <th colspan=\\\"2\\\">관리 책임자(인가자)</th>\\n                <th rowspan=\\\"2\\\">사용여부</th> -->\\n\\n                <th width=\\\"200\\\">위험지역 유형</th>\\n                <th>위험지역명</th>\\n                <th width=\\\"100\\\">사용여부</th>\\n              </tr>\\n              <!-- <tr>\\n                <th style=\\\"width: 80px;\\\">정</th>\\n                <th style=\\\"width: 80px;\\\">부</th>\\n              </tr> -->\\n            </thead>\\n            <tbody>\\n              <!-- 추가 -->\\n              <tr *ngFor=\\\"let item of resRiskArea?.rsMap\\\">\\n                <td>\\n                  <app-check [on]=\\\"item\\\"></app-check>\\n                </td>\\n                <!-- <td *ngIf=\\\"!item.area_top_name\\\">\\n                  <app-input name=\\\"search-project\\\" (click)=\\\"riskAreaSearch(item)\\\">\\n                    <app-img name=\\\"search\\\"></app-img>\\n                  </app-input>\\n                </td> -->\\n                <!-- <td *ngIf=\\\"item.area_top_name\\\" (click)=\\\"riskAreaSearch(item)\\\">\\n                  {{ (item.area_top_name ? item.area_top_name : '') + ' '\\n                  + (item.area_middle_name ? item.area_middle_name : '') + ' '\\n                  + (item.area_bottom_name ? item.area_bottom_name : '')}}\\n                </td> -->\\n                <td>\\n                  <app-select [disabled]=\\\"item.area_risk_id ? true : false\\\" [(ngModel)]=\\\"item.ctgo_area_risk_id\\\">\\n                    <app-select-option *ngFor=\\\"let opt of resCtgoRisk.rsMap\\\" [value]=\\\"opt.ctgo_area_risk_id\\\">{{\\n                      opt.ctgo_area_risk_name }}</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td>\\n                  <app-input [disabled]=\\\"item.area_risk_id ? true : false\\\" [(ngModel)]=\\\"item.area_risk_name\\\"></app-input>\\n                </td>\\n                <!-- <td>\\n                  <app-select [disabled]=\\\"item.area_risk_id ? true : false\\\" [(ngModel)]=\\\"item.area_risk_type\\\">\\n                    <app-select-option value=\\\"실내\\\">실내</app-select-option>\\n                    <app-select-option value=\\\"실외\\\">실외</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td>{{ item.gps_state === 1 ? '등록' : '미등록'}}</td>\\n                <td (click)=\\\"nfcView(item.area_risk_id)\\\">\\n                  {{ item.nfc_state ? item.nfc_state +'개':'-'}}\\n                </td>\\n                <td>\\n                  <app-select-people [disabled]=\\\"item.area_risk_id ? true : false\\\" label=\\\"\\\" \\n                  [company_id]=\\\"user.userData.belong_data.company_id\\\" \\n                  [(ngModel)]=\\\"item.manager_user_id\\\" [user_type]=\\\"'COMPANY'\\\">\\n                  </app-select-people>\\n                </td>\\n                <td>\\n                  <app-select-people [disabled]=\\\"item.area_risk_id ? true : false\\\" label=\\\"\\\" \\n                  [company_id]=\\\"user.userData.belong_data.company_id\\\" \\n                  [(ngModel)]=\\\"item.second_user_id\\\" [user_type]=\\\"'COMPANY'\\\">\\n                  </app-select-people>\\n                </td> -->\\n                <td>\\n                  <app-select (change)=\\\"updateState(item)\\\" (click)=\\\"$event.stopPropagation()\\\" [(ngModel)]=\\\"item.area_risk_use_state\\\">\\n                    <app-select-option [value]=\\\"1\\\">Y</app-select-option>\\n                    <app-select-option [value]=\\\"0\\\">N</app-select-option>\\n                  </app-select>\\n                </td>\\n              </tr>\\n              <!-- 추가 끝 -->\\n<!--               \\n              <tr *ngFor=\\\"let item of resRiskArea?.rsMap\\\">\\n                <td>\\n                  <app-check [on]=\\\"item\\\"></app-check>\\n                </td>\\n                <td *ngIf=\\\"!item.area_top_name\\\">\\n                  <app-img style=\\\"width: 45%;\\\" name=\\\"search\\\" (click)=\\\"memberSearch(item)\\\"></app-img>\\n                </td>\\n                <td>\\n                  {{ (item.area_top_name ? item.area_top_name : '') + ' '\\n                  + (item.area_middle_name ? item.area_middle_name : '') + ' '\\n                  + (item.area_bottom_name ? item.area_bottom_name : '')}}\\n                </td>\\n                <td>\\n                  <app-select  [disabled]=\\\"true\\\"[(ngModel)]=\\\"item.ctgo_area_risk_id\\\">\\n                    <app-select-option *ngFor=\\\"let opt of resCtgoRisk.rsMap\\\" [value]=\\\"opt.ctgo_area_risk_id\\\">{{\\n                      opt.ctgo_area_risk_name }}</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td>\\n                  <app-input [disabled]=\\\"true\\\" [(ngModel)]=\\\"item.area_risk_name\\\"></app-input>\\n                </td>\\n                <td>\\n                  <app-select [disabled]=\\\"true\\\" [(ngModel)]=\\\"item.area_risk_type\\\">\\n                    <app-select-option value=\\\"실내\\\">실내</app-select-option>\\n                    <app-select-option value=\\\"실외\\\">실외</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td>{{ item.gps_state === 1 ? '등록' : '미등록'}}</td>\\n                <td (click)=\\\"nfcView(item.area_risk_id)\\\">\\n                  {{ item.nfc_state ? item.nfc_state +'개':'-'}}\\n                </td>\\n                <td>\\n                  <app-select-people label=\\\"\\\" [disabled]=\\\"true\\\" [company_id]=\\\"user.userData.belong_data.company_id\\\" [(ngModel)]=\\\"item.manager_user_id\\\" [user_type]=\\\"'COMPANY'\\\">\\n                  </app-select-people>\\n                </td>\\n                <td>\\n                  <app-select-people label=\\\"\\\" [disabled]=\\\"true\\\" [company_id]=\\\"user.userData.belong_data.company_id\\\" [(ngModel)]=\\\"item.second_user_id\\\" [user_type]=\\\"'COMPANY'\\\">\\n                  </app-select-people>\\n                </td>\\n                <td>\\n                  <app-select (change)=\\\"updateState(item)\\\"(click)=\\\"$event.stopPropagation()\\\" [(ngModel)]=\\\"item.area_risk_use_state\\\">\\n                    <app-select-option [value]=\\\"1\\\">Y</app-select-option>\\n                    <app-select-option [value]=\\\"0\\\">N</app-select-option>\\n                  </app-select>\\n                </td>\\n              </tr> -->\\n            </tbody>\\n          </app-table>\\n        </app-check-group>\\n        <app-pager [totalCount]=\\\"resRiskArea?.rsObj.row_count\\\" [limitNo]=\\\"riskProjectForm.limit_no\\\" (pagerChange)=\\\"getRiskArea($event)\\\"></app-pager>\\n      </ng-container>\\n      <ng-template #riskareaEmpty>\\n        <app-row>\\n          <app-col>\\n            <app-card>\\n              <h5>권한이 없습니다.</h5>\\n            </app-card>\\n          </app-col>\\n        </app-row>\\n      </ng-template>\\n    </app-col>\\n  </app-row>\\n\\n\\n\\n\\n  <app-row *ngIf=\\\"menuCount === 3\\\" style=\\\"align-items: flex-start;\\\">\\n    <app-col size=\\\"280px\\\">\\n      <app-table type=\\\"card\\\">\\n        <ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n          <app-row style=\\\"justify-content: space-between;\\\">\\n            <app-col size=\\\"auto\\\">\\n              <h5>필터</h5>\\n            </app-col>\\n            <app-col size=\\\"auto\\\">\\n              <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\" style=\\\"width: 100px;\\\" (click)=\\\"areaGPS()\\\">검색\\n              </app-button>\\n            </app-col>\\n          </app-row>\\n        </ion-toolbar>\\n        <tbody>\\n          <tr>\\n            <td>\\n              <app-select-scene [disabled]=\\\"areaRoleCheck\\\" [(ngModel)]=\\\"riskProjectForm.project_id\\\"></app-select-scene>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </app-table>\\n    </app-col>\\n    <app-col>\\n      <div>\\n        <ion-toolbar color=\\\"white\\\">\\n          <ion-buttons slot=\\\"end\\\">\\n            <app-button [disabled]=\\\"areaRoleCheck\\\" fill=\\\"translucent\\\" (click)=\\\"gpsSave()\\\">저장</app-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n      </div>\\n      <ng-container *ngIf=\\\"!areaRoleCheck\\\">\\n        <app-card>\\n          <h5 style=\\\"text-align: center;\\\">GPS를 통해 근로자 위치 정보를 수집할 실외 위험지역 영역을 설정하여 주세요</h5>\\n          <br>\\n          <h5 style=\\\"color: black;\\\">&#8251; 영역 설정 방법</h5>\\n          <h5 style=\\\"color: black;\\\">지도에서 현장 외각을 마우스 클릭을 통해 N개의 점을 선택하여 설정합니다.(점 3개 이상 클릭 필요)</h5>\\n          <h6 style=\\\"color: black;\\\">좌클릭: 추가 / 우클릭: 삭제 / 드래그: 이동</h6>\\n          <div class=\\\"map-container\\\">\\n            <app-naver-map *ngIf=\\\"initMap\\\" [disabled]=\\\"naverMapSetting\\\" [(ngModel)]=\\\"gps_coordinate_data\\\"></app-naver-map>\\n          </div>\\n        </app-card>\\n        <app-card>\\n          <ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n            <h5>실외 위험지역</h5>\\n          </ion-toolbar>\\n          <app-table>\\n            <thead>\\n              <tr>\\n                <!-- <th>장소</th> -->\\n                <th>위험지역 유형</th>\\n                <th>위험지역명</th>\\n                <th>GPS 좌표값</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr class=\\\"button\\\" *ngFor=\\\"let item of resGPS?.rsMap\\\" [class.selected]=\\\"gpsSelected === item\\\" (click)=\\\"getGpsCoodrinate(item)\\\">\\n                <!-- <td>\\n                  {{\\n                  (item.area_top_name ? item.area_top_name : '') + ' '\\n                  + (item.area_middle_name ? item.area_middle_name : '') + ' '\\n                  + (item.area_bottom_name ? item.area_bottom_name: '')}}\\n                </td> -->\\n                <td>{{item.ctgo_area_risk_name}}</td>\\n                <td>{{item.area_risk_name}}</td>\\n                <td>{{item.gps_state + '개'}}</td>\\n              </tr>\\n            </tbody>\\n          </app-table>\\n        </app-card>\\n      </ng-container>\\n    </app-col>\\n  </app-row>\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-title>NFC 등록 여부</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-dismiss-button></app-dismiss-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n <app-table type=\\\"card\\\">\\n   <thead>\\n     <tr>\\n      <th>NO</th>\\n      <th>등록 NO</th>\\n     </tr>\\n   </thead>\\n   <tbody>\\n     <tr *ngFor=\\\"let item of nfcData?.rsMap let i = index\\\">\\n      <td>{{ i+1 }}</td>\\n      <td>{{ item.serial_no }}</td>\\n     </tr>\\n   </tbody>\\n </app-table>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}