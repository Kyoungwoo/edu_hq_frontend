{"version":3,"sources":["./src/app/page/login/find-mobile/find-password-mobile-result/find-password-mobile-result-routing.module.ts","./src/app/page/login/find-mobile/find-password-mobile-result/find-password-mobile-result.module.ts","./src/app/page/login/find-mobile/find-password-mobile-result/find-password-mobile-result.page.ts","./src/app/page/login/find-mobile/find-password-mobile-result/find-password-mobile-result.page.scss","./src/app/page/login/find-mobile/find-password-mobile-result/find-password-mobile-result.page.html"],"names":[],"mappings":"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","file":"src_app_page_login_find-mobile_find-password-mobile-result_find-password-mobile-result_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FindPasswordMobileResultPage } from './find-password-mobile-result.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FindPasswordMobileResultPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FindPasswordMobileResultPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FindPasswordMobileResultPageRoutingModule } from './find-password-mobile-result-routing.module';\n\nimport { FindPasswordMobileResultPage } from './find-password-mobile-result.page';\nimport { ComponentModule } from 'src/app/component/component.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    FindPasswordMobileResultPageRoutingModule\n  ],\n  declarations: [FindPasswordMobileResultPage]\n})\nexport class FindPasswordMobileResultPageModule {}\n","import { ChangeDetectorRef, Component, ElementRef, OnInit } from '@angular/core';\nimport { Validator, ConnectResult, ConnectService } from 'src/app/basic/service/core/connect.service';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\nimport { AlertService } from 'src/app/basic/service/ionic/alert.service';\nimport { NavService } from 'src/app/basic/service/ionic/nav.service';\nimport { PromiseService } from 'src/app/basic/service/util/promise.service';\nimport { environment } from 'src/environments/environment';\nimport { UpdatePasswordForm, UpdatePasswordFormMock } from '../../login.interface';\n\n@Component({\n  selector: 'app-find-password-mobile-result',\n  templateUrl: './find-password-mobile-result.page.html',\n  styleUrls: ['./find-password-mobile-result.page.scss'],\n})\nexport class FindPasswordMobileResultPage implements OnInit {\n\n  form = new UpdatePasswordForm();\n  validator = new Validator(new UpdatePasswordForm()).validator;\n  res:ConnectResult;\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    private alert: AlertService,\n    private connect: ConnectService,\n    private nav: NavService,\n    private promise: PromiseService,\n    private changeDetector: ChangeDetectorRef,\n    public languagePack: LanguagePackService\n  ) { }\n\n  ngOnInit() {\n    if(!this.checkParams()) return this.nav.navigateBack('/find-password-mobile-type');\n    this.form = history.state.form;\n\n    this.test();\n  }\n\n  private async test() {\n    if(!environment.test.core.test) return;\n    if(!environment.test.FindPassword.test) return;\n\n    const el = this.el.nativeElement;\n    await this.promise.wait();\n\n    const form = new UpdatePasswordFormMock();\n    \n    for(const key in form) {\n      const value = form[key];\n      const input = el.querySelector(`[name=${key}]`);\n      if(input && value) input.dispatchEvent(new CustomEvent('setValue', { detail: value }));\n    }\n    await this.promise.wait();\n\n    el.querySelector('[name=button_submit]').dispatchEvent(new Event('click'));\n    await this.promise.wait(800);\n    document.querySelector('.alert-button').dispatchEvent(new Event('click'));\n  }\n\n\n  private checkParams() {\n    if(history.state?.form) return true;\n    else return false;\n  }\n\n  public async submit() {\n    if(!this.valid()) return;\n    \n    this.res = await this.connect.run('/sign/find/update/account_token', this.form, {\n      loading: true\n    });\n    if(this.res.rsCode === 0) {\n      this.nav.navigateBack('/login-mobile', { force: true });\n      this.alert.present({\n        img: 'assets/basic/img/check-circle-primary.svg',\n        header: '비밀번호가 변경되었습니다.',\n        message: '재 로그인 해주세요.',\n        backdropDismiss: false,\n        buttons: [\n          { text: '확인' }\n        ]\n      });\n    }\n  }\n\n  public async checkPass() {\n    const { account_token } = this.form;\n    if(!account_token) return this.validator.account_token = null;\n    if(account_token?.length < 4) return this.validator.account_token = { valid: false, message: '비밀번호를 4자이상 입력해주세요.' };\n    const res = await this.connect.run('/forSignUp/check/pass', { account_token });\n    this.validator.account_token = { valid: res.rsCode === 0, message: res.rsMsg };\n  }\n  public checkPassConfirm() {\n    const { account_token, account_token_conform } = this.form;\n    if(account_token !== account_token_conform) return this.validator.account_token_conform = { valid: false, message: '비밀번호와 비밀번호 확인이 다릅니다.' };\n    else return this.validator.account_token_conform = { valid: true };\n  }\n\n  private valid():boolean {\n    this.validator.account_id = { valid: true };\n    this.validator.user_name = { valid: true };\n    this.validator.user_phone = { valid: true };\n    this.validator.sms_token = { valid: true };\n\n    if(!this.form.account_token) this.validator.account_token = { message: '비밀번호를 입력해주세요.', valid: false };\n    else if(this.validator.account_token?.valid) \n    this.validator.account_token = { valid: true };\n\n    if(!this.form.account_token_conform) this.validator.account_token_conform = { message: '비밀번호 확인을 입력해주세요.', valid: false };\n    else if(this.validator.account_token_conform?.valid)\n    this.validator.account_token_conform = { valid: true };\n\n    for(let key in this.validator) {\n      if(!this.validator[key]?.valid) return false;\n    }\n    return true;\n  }\n\n}\n","export default \"app-row {\\n  align-items: flex-start;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmQtcGFzc3dvcmQtbW9iaWxlLXJlc3VsdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx1QkFBdUI7QUFDM0IiLCJmaWxlIjoiZmluZC1wYXNzd29yZC1tb2JpbGUtcmVzdWx0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFwcC1yb3cge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/find-password-mobile-type\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ languagePack.getText('비밀번호 재설정') }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <app-container size=\\\"small\\\">\\n    <h4>{{ languagePack.getText('비밀번호 재설정') }}</h4>\\n    <app-card *ngIf=\\\"res && res.rsCode\\\" color=\\\"warning\\\">{{ res.rsMsg }}</app-card>\\n    <h4>{{ languagePack.getText('비밀번호 재설정') }}</h4>\\n    <app-input name=\\\"account_token\\\" [label]=\\\"languagePack.getText('비밀번호')\\\" type=\\\"password\\\"\\n    [placeholder]=\\\"languagePack.getText('영문과 숫자만 입력해주세요.')\\\"\\n    [color]=\\\"validator.account_token?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.account_token\\\" (delayKeyup)=\\\"checkPass()\\\" [required]=\\\"true\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.account_token?.valid === false\\\" color=\\\"warning\\\">{{ validator.account_token?.message }}</app-input-caption>\\n    \\n    <app-input name=\\\"account_token_conform\\\" [label]=\\\"languagePack.getText('비밀번호 확인')\\\" [placeholder]=\\\"languagePack.getText('비밀번호를 재입력 해주세요.')\\\" type=\\\"password\\\"\\n    [color]=\\\"validator.account_token_conform?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.account_token_conform\\\" (delayKeyup)=\\\"checkPassConfirm()\\\" [required]=\\\"true\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.account_token_conform?.valid === false\\\" color=\\\"warning\\\">{{ validator.account_token_conform?.message }}</app-input-caption>\\n\\n  </app-container>\\n</ion-content>\\n<app-button-footer>\\n  <app-button name=\\\"button_submit\\\" (click)=\\\"submit()\\\">{{ languagePack.getText('비밀번호 재설정') }}</app-button>\\n</app-button-footer>\";"],"sourceRoot":"webpack:///"}