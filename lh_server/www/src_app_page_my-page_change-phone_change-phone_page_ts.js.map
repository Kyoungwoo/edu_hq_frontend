{"version":3,"sources":["./src/app/page/my-page/change-phone/change-phone.page.ts","./src/app/page/my-page/change-phone/change-phone.page.scss","./src/app/page/my-page/change-phone/change-phone.page.html"],"names":[],"mappings":"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","file":"src_app_page_my-page_change-phone_change-phone_page_ts.js","sourcesContent":["import { ChangeDetectorRef, Component, ElementRef, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { fadeAnimation } from 'src/app/basic/basic.animation';\nimport { ConnectService, Validator } from 'src/app/basic/service/core/connect.service';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\nimport { AlertService } from 'src/app/basic/service/ionic/alert.service';\nimport { ToastService } from 'src/app/basic/service/ionic/toast.service';\nimport { PromiseService } from 'src/app/basic/service/util/promise.service';\nimport { RegexService } from 'src/app/basic/service/util/regex.service';\nimport { environment } from 'src/environments/environment';\n\nexport class ChangePhoneForm {\n  user_phone:string = null; // 휴대폰 번호\n  sms_token:string = null; // 토큰\n}\n\n@Component({\n  selector: 'app-change-phone',\n  templateUrl: './change-phone.page.html',\n  styleUrls: ['./change-phone.page.scss'],\n  animations: [ fadeAnimation ]\n})\nexport class ChangePhonePage implements OnInit {\n\n  form = new ChangePhoneForm();\n  validator = new Validator(new ChangePhoneForm()).validator;\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    private alert: AlertService,\n    private _modal: ModalController,\n    private connect: ConnectService,\n    private promise: PromiseService,\n    private regex: RegexService,\n    private toast: ToastService,\n    private changeDetector: ChangeDetectorRef,\n    public languagePack: LanguagePackService\n  ) { }\n\n  ngOnInit() {\n    this.test();\n  }\n  private async test() {\n    if(!environment.test.core.test) return;\n\n    const el = this.el.nativeElement;\n    await this.promise.wait();\n\n    // 데이터 입력\n    el.querySelector('[name=user_phone]').dispatchEvent(new CustomEvent('setValue', { detail: this.regex.random.phone() }));\n    await this.promise.wait();\n    \n    // 문자 인증 전송\n    el.querySelector('[name=user_phone]').dispatchEvent(new Event('buttonClick'));\n    await this.promise.wait(1500);\n\n    // 문자 인증번호 가져와서 넣기\n    const { user_phone } = this.form;\n    const res = await this.connect.run('/test/sms/get', { user_phone });\n    el.querySelector('[name=sms_token]').dispatchEvent(new CustomEvent('setValue', { detail: res.rsObj.sms_token }));\n    await this.promise.wait();\n    \n    // 문자 인증\n    el.querySelector('[name=sms_token]').dispatchEvent(new Event('buttonClick'));\n    await this.promise.wait();\n\n    // 변경하기\n    el.querySelector('[name=button_submit]').dispatchEvent(new Event('click'));\n    await this.promise.wait(800);\n\n    document.querySelector('.alert-button').dispatchEvent(new Event('click'));\n  }\n\n  dismiss() {\n    this._modal.dismiss();\n  }\n\n  /** 휴대폰번호 관련 코드 */\n  // user_phone은 overlapPhone 과 aligoSend 두개를 모두 실행해야 valid 된다.\n  async overlapPhone() {\n    const { user_phone } = this.form;\n    if(!user_phone) return this.validator.user_phone = null;\n    if(user_phone?.length < 3) return this.validator.user_phone = { valid: false, message: '휴대폰 번호를 정확히 입력해주세요.' };\n    /** /forSignUp/overlap/phone 이거 사용한거 실수 아님. 내 폰번호 포함 모든 번호를 중복 체크 해야되기 때문에 이렇게 함. */\n    const res = await this.connect.run('/forSignUp/overlap/phone', { user_phone });\n    this.validator.user_phone = res.rsCode === 0 ? null : { valid: res.rsCode === 0, message: res.rsMsg };\n    this.validator.sms_token = null;\n  }\n  async aligoSend() {\n    const { user_phone } = this.form;\n    if(this.validator.user_phone?.valid === false) return;\n    const res = await this.connect.run('/mypage/send/sms', { user_phone });\n    this.validator.user_phone = { valid: res.rsCode === 0, message: res.rsMsg };\n  }\n  \n  async aligoCheck() {\n    const { user_phone, sms_token } = this.form;\n    const res = await this.connect.run('/mypage/check/sms', { user_phone, sms_token });\n    this.validator.sms_token = { valid: res.rsCode === 0, message: res.rsMsg };\n  }\n\n  /** submit */\n  async submit() {\n    if(!this.valid()) return;\n    const res = await this.connect.run('/mypage/phone/update', this.form);\n    if(res.rsCode === 0) {\n      this._modal.dismiss({ update: true });\n      this.alert.present({\n        img: 'assets/basic/img/check-circle-primary.svg',\n        message: '휴대폰 번호가 변경되었습니다.'\n      });\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  private valid() {\n    if(!this.form.user_phone) this.validator.user_phone = { message: '휴대폰번호를 입력해주세요.', valid: false };\n    else if(this.validator.user_phone?.valid) this.validator.user_phone = { valid: true };\n\n    if(!this.form.sms_token) this.validator.sms_token = { message: '문자인증번호를 입력해주세요.', valid: false };\n    else if(!this.validator.sms_token?.valid) this.validator.sms_token = { message: '문자인증번호를 인증해주세요.', valid: false };\n    else this.validator.sms_token = { valid: true };\n\n    for(let key in this.validator) {\n      if(!this.validator[key]?.valid) return false;\n    }\n    return true;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFuZ2UtcGhvbmUucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-title>{{ languagePack.getText('휴대폰 번호 변경') }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-dismiss-button></app-dismiss-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <h4>{{ languagePack.getText('휴대폰 번호 변경') }}</h4>\\n  \\n  <app-input name=\\\"user_phone\\\" [label]=\\\"languagePack.getText('핸드폰')\\\"  [placeholder]=\\\"languagePack.getText('- 없이 숫자만 입력해주세요')\\\" type=\\\"tel\\\" \\n  [color]=\\\"validator.user_phone?.valid === false ? 'warning' \\n  : validator.sms_token?.valid === true && 'success'\\\"\\n  [(ngModel)]=\\\"form.user_phone\\\" (delayKeyup)=\\\"overlapPhone()\\\" (buttonClick)=\\\"aligoSend()\\\" [required]=\\\"true\\\">\\n  {{ languagePack.getText('인증번호 받기') }}\\n  </app-input>\\n  <app-input-caption *ngIf=\\\"validator.user_phone?.valid === false\\\" color=\\\"warning\\\">{{ validator.user_phone?.message }}</app-input-caption>\\n  <app-input-caption *ngIf=\\\"validator.sms_token?.valid\\\" color=\\\"success\\\">인증이 완료되었습니다.</app-input-caption>\\n  \\n  <div @fadeAnimation *ngIf=\\\"validator.user_phone?.valid && !validator.sms_token?.valid\\\">\\n    <app-input\\n    name=\\\"sms_token\\\" [label]=\\\"languagePack.getText('인증번호')\\\" [placeholder]=\\\"languagePack.getText('인증번호를 입력해주세요.')\\\" type=\\\"tel\\\"\\n    [color]=\\\"validator.sms_token?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.sms_token\\\" (buttonClick)=\\\"aligoCheck()\\\" [required]=\\\"true\\\">\\n    {{ languagePack.getText('확인') }}\\n    </app-input>\\n  </div>\\n  <app-input-caption *ngIf=\\\"validator.sms_token?.valid === false\\\" color=\\\"warning\\\">{{ validator.sms_token?.message }}</app-input-caption>\\n\\n</ion-content>\\n\\n<app-button-footer>\\n  <app-button (click)=\\\"dismiss()\\\">{{ languagePack.getText('취소') }}</app-button>\\n  <app-button name=\\\"button_submit\\\" (click)=\\\"submit()\\\">{{ languagePack.getText('휴대폰 번호 변경') }}</app-button>\\n</app-button-footer>\";"],"sourceRoot":"webpack:///"}