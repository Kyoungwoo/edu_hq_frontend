{"version":3,"sources":["./src/app/page/today-work/my-status-situation/my-status-list/my-status-list-routing.module.ts","./src/app/page/today-work/my-status-situation/my-status-list/my-status-list.module.ts","./src/app/page/today-work/my-status-situation/my-status-list/my-status-list.page.ts","./src/app/page/today-work/my-status-situation/my-status-list/my-status-list.page.scss","./src/app/page/today-work/my-status-situation/my-status-list/my-status-list.page.html"],"names":[],"mappings":"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","file":"src_app_page_today-work_my-status-situation_my-status-list_my-status-list_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyStatusListPage } from './my-status-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyStatusListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyStatusListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyStatusListPageRoutingModule } from './my-status-list-routing.module';\n\nimport { MyStatusListPage } from './my-status-list.page';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { BasicComponentModule } from 'src/app/basic/component/basic.component.module';\nimport { StatusSearchModule } from '../../component/status-search.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    BasicComponentModule,\n    MyStatusListPageRoutingModule,\n    StatusSearchModule\n  ],\n  declarations: [MyStatusListPage]\n})\nexport class MyStatusListPageModule {}\n","import { ScannerService } from './../../../../basic/service/util/scanner.service';\nimport { Component, OnInit } from '@angular/core';\nimport { async } from '@angular/core/testing';\nimport { ModalController } from '@ionic/angular';\nimport { ConnectResult, ConnectService } from 'src/app/basic/service/core/connect.service';\nimport { UserService } from 'src/app/basic/service/core/user.service';\nimport { AlertService } from 'src/app/basic/service/ionic/alert.service';\nimport { NavService } from 'src/app/basic/service/ionic/nav.service';\nimport { ToastService } from 'src/app/basic/service/ionic/toast.service';\n// import { NfcService } from 'src/app/basic/service/util/nfc.service';\n// import { QrService } from 'src/app/basic/service/util/qr.service';\nimport { DetailSearchComponent } from '../../component/status-search/detail-search/detail-search.component';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\n\n@Component({\n  selector: 'app-my-status-list',\n  templateUrl: './my-status-list.page.html',\n  styleUrls: ['./my-status-list.page.scss'],\n})\nexport class MyStatusListPage implements OnInit {\n\n  open:boolean = false;\n\n  form = {\n    project_id: this.user.userData.belong_data.project_id,\n    project_name: '',\n    master_company_id: this.user.userData.belong_data.master_company_id\n  }\n\n  resgate:ConnectResult<{\n    area_bottom_name:string,\n    area_risk_id:number,\n    last_state:string,\n    user_id:number,\n    area_middle_name:string,\n    last_time:string,\n    area_top_name:string,\n    inner_data: [{\n      work_state:string,\n      inside_time:string,\n      serial_type:string,\n      area_risk_id:number,\n      outside_time:string,\n      area_top_name:string,\n      area_risk_name:string,\n      area_bottom_name:string,\n      area_middle_name:string,\n    }],\n    area_risk_name:string\n  }>\n\n  resrisk:ConnectResult<{\n    area_bottom_name:string,\n    area_risk_id:number,\n    last_state:string,\n    user_id:number,\n    area_middle_name:string,\n    last_time:string,\n    area_top_name:string,\n    inner_data: [{\n      work_state:string,\n      inside_time:string,\n      serial_type:string,\n      area_risk_id:number,\n      outside_time:string,\n      area_top_name:string,\n      area_risk_name:string,\n      area_bottom_name:string,\n      area_middle_name:string,\n    }],\n    area_risk_name:string\n    checked:boolean;\n  }>\n\n  gateState:boolean = false;\n  gateOpen:boolean = false;\n\n  notWorker:boolean = false;\n  worker:boolean = false;\n  \n  nfcqrForm = {\n      and_uq_id:'test',\n      ios_uq_id:'test',\n      nb_log_state:'',\n      project_id:0,\n      serial_key:''\n  }\n  constructor(\n    private nav: NavService,\n    private modal: ModalController,\n    private connect: ConnectService,\n    // private qr: QrService,\n    // private nfc: NfcService,\n    private alert: AlertService,\n    private toast: ToastService,\n    public user: UserService,\n    private scanner: ScannerService,\n    public languagePack: LanguagePackService\n  ) { }\n\n  ngOnInit() {\n    this.roleCheck();\n  }\n\n  async roleCheck() {\n    const { user_role, user_type } = this.user.userData;\n    if(user_role === 'MASTER_HEAD' ||\n       user_role === 'LH_HEAD'||\n       user_role === 'PARTNER_HEAD' ||\n       user_role === 'MASTER_GENERAL' ||\n       user_role === 'PARTNER_GENERAL') this.notWorker = true;\n    if(user_role === 'MASTER_HEAD' ||\n       user_role === 'PARTNER_HEAD') {\n        //  this.form.master_company_id = this.user.userData.belong_data.company_id;\n       }\n\n    if(user_role === 'PARTNER_WORKER' ||\n       user_type === 'WORKER') this.notWorker = false;\n\n       this.get();\n  }\n\n  async get() {\n      this.resgate = await this.connect.run('/work_project/nfc_beacon/my_gate/list', this.form, {parse: ['inner_data']});\n      if(this.resgate.rsCode === 0) {\n      }\n      else {\n        // this.toast.present({message:'게이트 출역 기록이 없습니다.', color:'warning'});\n      }\n      this.resrisk = await this.connect.run('/work_project/nfc_beacon/my_risk/list',this.form,{parse:['inner_data']});\n      if(this.resrisk.rsCode === 0) {\n      } \n      else {\n        if(!this.resgate) {\n          // this.toast.present({message:'게이트 먼저 입장해주세요.', color:'warning'});\n        }\n      }\n  }\n\n  async detailSearch() {\n    const modal = await this.modal.create({\n      component:DetailSearchComponent,\n      componentProps:{\n        type:'my'\n      }\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if(data) {\n      this.form.master_company_id = data.master_company_id;\n      this.form.project_id = data.project_id;\n      this.get();\n    }\n  }\n\n  status(item) {\n    item.open = !item.open;\n  }\n\n  workerSatus() {\n    if(!this.form.project_id) return this.toast.present({message:'현장을 선택해주세요.',color:'warning'});\n    this.nav.navigateForward('/worker-status-list',{\n      state:\n        {\n          project_id:this.form.project_id,\n          master_company_id:this.form.master_company_id\n        }\n    });\n  }\n\n  async inNfcQr() {\n    this.scanner.init().then((data) => {this.get();});\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJteS1zdGF0dXMtbGlzdC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ languagePack.getText('나의 출입 현황') }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-menu-button></app-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar color=\\\"white\\\">\\n    <app-input-group>\\n      <app-select-scene name=\\\"project_id\\\" [(ngModel)]=\\\"form.project_id\\\" [disabled]=\\\"true\\\"></app-select-scene>\\n      <app-button (click)=\\\"detailSearch()\\\">{{ languagePack.getText('상세검색') }}</app-button>\\n    </app-input-group>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <app-card *ngIf=\\\"resgate?.rsCode === 0\\\" (click)=\\\"gateOpen = !gateOpen\\\">\\n    <app-row>\\n      <app-col>\\n        <!-- <h4>{{ resgate?.rsObj?.area_risk_name }}</h4> -->\\n        <h4>게이트</h4>\\n      </app-col>\\n      <app-col size=\\\"auto\\\">\\n        <ion-chip [color]=\\\"resgate?.rsObj?.last_state === '입장' ? 'primary' : 'medium'\\\">{{ resgate?.rsObj?.last_state }}\\n        </ion-chip>\\n      </app-col>\\n      <app-col size=\\\"auto\\\">\\n        <ion-chip [color]=\\\"resgate?.rsObj?.last_state === '입장' ? 'primary' : 'medium'\\\">{{ resgate?.rsObj?.last_time}}\\n        </ion-chip>\\n      </app-col>\\n    </app-row>\\n  </app-card>\\n  <app-card *ngIf=\\\"gateOpen\\\">\\n    <ng-container *ngFor=\\\"let item of resgate?.rsObj?.inner_data\\\">\\n      <app-row>\\n        <app-col size=\\\"auto\\\">\\n        </app-col>\\n        <app-col>\\n        </app-col>\\n        <app-col size=\\\"auto\\\">\\n          <ion-chip color=\\\"primary\\\">{{ languagePack.getText('입장') }}</ion-chip>\\n        </app-col>\\n        <app-col size=\\\"auto\\\">\\n          <ion-chip color=\\\"primary\\\">{{ item.inside_time }}</ion-chip>\\n        </app-col>\\n      </app-row>\\n\\n      <app-row *ngIf=\\\"item?.work_state === '퇴장'\\\">\\n        <app-col size=\\\"auto\\\">\\n        </app-col>\\n        <app-col>\\n        </app-col>\\n        <app-col size=\\\"auto\\\">\\n          <ion-chip color=\\\"medium\\\">{{ languagePack.getText('퇴장') }}</ion-chip>\\n        </app-col>\\n        <app-col size=\\\"auto\\\">\\n          <ion-chip color=\\\"medium\\\">{{ item.outside_time }}</ion-chip>\\n        </app-col>\\n      </app-row>\\n    </ng-container>\\n  </app-card>\\n\\n  <ng-container *ngFor=\\\"let risk of resrisk?.rsMap\\\">\\n    <app-card *ngIf=\\\"resrisk.rsCode === 0\\\" (click)=\\\"risk.checked = !risk.checked\\\">\\n      <app-row>\\n        <app-col>\\n          <h4>{{ risk.area_top_name }}{{ risk.area_middle_name ? ' '+risk.area_middle_name : '' }}{{ risk.area_bottom_name ? ' '+risk.area_bottom_name : '' }}{{ risk.area_risk_name ? '/'+risk.area_risk_name : '' }}</h4>\\n        </app-col>\\n        <app-col size=\\\"auto\\\">\\n          <ion-chip [color]=\\\"risk.last_state === '입장' ? 'primary' : 'medium'\\\">{{ risk.last_state }}</ion-chip>\\n        </app-col>\\n        <app-col size=\\\"auto\\\">\\n          <ion-chip [color]=\\\"risk.last_state === '입장' ? 'primary' : 'medium'\\\">{{ risk.last_time}}</ion-chip>\\n        </app-col>\\n      </app-row>\\n    </app-card>\\n    <app-card *ngIf=\\\"risk.checked\\\">\\n      <ng-container *ngFor=\\\"let item of risk.inner_data\\\">\\n        <app-row>\\n          <app-col size=\\\"auto\\\">\\n          </app-col>\\n          <app-col>\\n          </app-col>\\n          <app-col size=\\\"auto\\\">\\n            <ion-chip color=\\\"primary\\\">{{ languagePack.getText('입장') }}</ion-chip>\\n          </app-col>\\n          <app-col size=\\\"auto\\\">\\n            <ion-chip color=\\\"primary\\\">{{ item.inside_time }}</ion-chip>\\n          </app-col>\\n        </app-row>\\n  \\n        <app-row *ngIf=\\\"item?.work_state === '퇴장'\\\">\\n          <app-col size=\\\"auto\\\">\\n          </app-col>\\n          <app-col>\\n          </app-col>\\n          <app-col size=\\\"auto\\\">\\n            <ion-chip color=\\\"medium\\\">{{ languagePack.getText('퇴장') }}</ion-chip>\\n          </app-col>\\n          <app-col size=\\\"auto\\\">\\n            <ion-chip color=\\\"medium\\\">{{ item.outside_time }}</ion-chip>\\n          </app-col>\\n        </app-row>\\n      </ng-container>\\n    </app-card>\\n  </ng-container>\\n</ion-content>\\n\\n<app-button-footer>\\n  <app-button *ngIf=\\\"notWorker\\\" (click)=\\\"workerSatus()\\\">{{ languagePack.getText('근로자 출입 관리') }}</app-button>\\n  <app-button (click)=\\\"inNfcQr()\\\">{{ languagePack.getText('출입(QR / NFC)') }}</app-button>\\n</app-button-footer>\";"],"sourceRoot":"webpack:///"}