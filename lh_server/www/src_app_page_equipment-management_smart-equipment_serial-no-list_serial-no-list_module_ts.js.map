{"version":3,"sources":["./src/app/basic/service/util/date.service.ts","./src/app/page/equipment-management/smart-equipment/serial-no-list/serial-no-list-routing.module.ts","./src/app/page/equipment-management/smart-equipment/serial-no-list/serial-no-list.module.ts","./src/app/page/equipment-management/smart-equipment/serial-no-list/serial-no-list.page.ts","./src/app/page/equipment-management/smart-equipment/serial-no-list/serial-no-list.page.scss","./src/app/page/equipment-management/smart-equipment/serial-no-list/serial-no-list.page.html"],"names":[],"mappings":"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","file":"src_app_page_equipment-management_smart-equipment_serial-no-list_serial-no-list_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RegexService } from './regex.service';\n\nexport interface DateStringOptions {\n  day?:boolean | DayFormat,\n  format?:DateStringFormat\n}\nexport type DateStringFormat = '-' | '.' | '/' | 'Ko';\nexport type DayFormat = [string, string, string, string, string, string, string];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  constructor(\n    private regex: RegexService\n  ) { }\n\n  /** 오늘날짜, 혹은 오늘날짜를 기준으로 하는 다른 날짜들을 구한다. */\n  today(opts:{year?, month?, date?} = {year: 0, month: 0, date: 0}, type: 'DATE' | 'MINUTE' | 'SECOND' = 'DATE') {\n    const resDate = new Date();\n    if (opts.year) resDate.setFullYear(resDate.getFullYear() + opts.year);\n    if (opts.month) resDate.setMonth(resDate.getMonth() + opts.month);\n    if (opts.date) resDate.setDate(resDate.getDate() + opts.date);\n    switch(type) {\n      case 'DATE':\n        return resDate.getFullYear() + '-' + this.regex.replace.fix(resDate.getMonth() + 1, 2) + '-' + this.regex.replace.fix(resDate.getDate(), 2);\n      case 'MINUTE':\n        return resDate.getFullYear() + '-' + this.regex.replace.fix(resDate.getMonth() + 1, 2) + '-' + this.regex.replace.fix(resDate.getDate(), 2) +  ' ' + this.regex.replace.fix(resDate.getHours(), 2) + ':' + this.regex.replace.fix(resDate.getMinutes(), 2);\n      case 'SECOND':\n        return resDate.getFullYear() + '-' + this.regex.replace.fix(resDate.getMonth() + 1, 2) + '-' + this.regex.replace.fix(resDate.getDate(), 2) +  ' ' + this.regex.replace.fix(resDate.getHours(), 2) + ':' + this.regex.replace.fix(resDate.getMinutes(), 2) + ':' + this.regex.replace.fix(resDate.getSeconds(), 2);\n    }\n  }\n  /** Date 타입의 형태를 바꾼다. 요일 속성(day)를 활용하여 요일을 구할 수도 있다.. ex) 2021-01-01, 2021년 01월 01일 수요일 */\n  string(date:Date | string, opts?:DateStringOptions) {\n    date = typeof date === 'string' ? new Date(date) : date;\n    let dayString = \"\";\n    let formatList = [];\n    switch(opts?.format) {\n      case 'Ko':\n        formatList = ['년 ', '월 ', '일'];\n        break;\n      default:\n        formatList = [opts?.format, opts?.format, opts?.format];\n        break;\n    }\n    if(opts?.day) {\n      const dayList = opts?.day === true ? ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'] : opts?.day;\n      dayString = ' ' + dayList[new Date(date).getDay()];\n    }\n    return date.getFullYear() + formatList[0] + this.regex.replace.fix(date.getMonth() + 1, 2) + formatList[1] + this.regex.replace.fix(date.getDate(), 2) + formatList[2] + dayString;\n  }\n  /** 요일만 구한다. */\n  day(date:Date | string, dayFormat:DayFormat = null) {\n    date = typeof date === 'string' ? new Date(date) : date;\n    var week = dayFormat || ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'];\n    var dayOfWeek = week[new Date(date).getDay()];\n    return dayOfWeek;\n  }\n  /** 날짜를 기준으로 나이를 구한다. 기준은 한국 나이이다. */\n  age(date:Date | string) {\n    date = typeof date === 'string' ? new Date(date) : date;\n    return new Date().getFullYear() - date.getFullYear() + 1;\n  }\n  /** 두 날짜간의 차이를 구한다. 앞의 날짜가 크면 음수, 작으면 양수로 나온다. */\n  dirrerence(date1:string, date2:string, type:'Year'|'Month'|'Date'|'Hour' =\"Date\") {\n    const date_1 = new Date(date1);\n    const date_2 = new Date(date2);\n    const def_time = date_2.getTime() - date_1.getTime();\n    const def_days = def_time / (1000 * 3600 * 24);\n    const def_hours = def_time / (1000 * 3600);\n    switch(type) {\n        case 'Year':\n            return Math.floor(def_days / 365);\n        case 'Date':\n            return def_days;\n        case 'Hour':\n            return def_hours;\n        default:\n            return def_time;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SerialNoListPage } from './serial-no-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SerialNoListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SerialNoListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SerialNoListPageRoutingModule } from './serial-no-list-routing.module';\n\nimport { SerialNoListPage } from './serial-no-list.page';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { BasicComponentModule } from 'src/app/basic/component/basic.component.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    BasicComponentModule,\n    SerialNoListPageRoutingModule\n  ],\n  declarations: [SerialNoListPage]\n})\nexport class SerialNoListPageModule {}\n","import { LoadingService } from './../../../../basic/service/ionic/loading.service';\nimport { async } from '@angular/core/testing';\nimport { AlertService } from './../../../../basic/service/ionic/alert.service';\nimport { UserService } from './../../../../basic/service/core/user.service';\nimport { DateService } from './../../../../basic/service/util/date.service';\nimport { ConnectService, ConnectResult } from './../../../../basic/service/core/connect.service';\nimport { ToastService } from './../../../../basic/service/ionic/toast.service';\nimport { ModalController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\n\nclass SearialInfo {\n  create_date:string;\n  ctgo_machine_serial_id:number;\n  ctgo_machine_serial_name:string;\n  master_company_id:number;\n  master_company_name:string;\n  project_id:number;\n  serial_bicon:string;\n  serial_id:number;\n  serial_nfc:string;\n  serial_no:string;\n  serial_type:string;\n  serial_use_state:number;\n  serial_value:string;\n  update_date:string;\n  assign_data:any;\n  user_id:number;\n  index:number;\n  row_count:number;\n}\n\nclass SearialInfoInsertItem {\n  ctgo_machine_serial_id: number = 0;\n  master_company_id: number = 0;\n  project_id: number = 0;\n  serial_bicon: string = '';\n  serial_nfc: string = '';\n  serial_use_state: number = 0;\n  serial_value: string = '';\n  serial_id:number = 0;\n}\n\nclass SearialCtgo {\n  serial_type: string;\n  ctgo_machine_serial_name: string;\n  ctgo_machine_serial_id: number;\n}\n\n@Component({\n  selector: 'app-serial-no-list',\n  templateUrl: './serial-no-list.page.html',\n  styleUrls: ['./serial-no-list.page.scss'],\n})\nexport class SerialNoListPage implements OnInit {\n  /** @param allState - 원청사와 업체를 전체를 검색할수 있는지 여부 */\n  allState:boolean = (this.user.userData.user_type == 'LH' || this.user.userData.user_type == 'SUPER') ? true : false;\n\n  /** @param serial_type - 등록 타입입니다. ('개인' | '중장비' | '위험지역') */\n  serial_type: '개인' | '중장비' | '위험지역' = '개인';\n\n  /** @param update_state - 현재 업데이트중인지 여부 */\n  update_state = false;\n\n  /** @param method_type - serial_type에따라 메서드가 변경됨 */\n  method_type = '';\n\n  form = {\n    ctgo_machine_serial_id: 0,\n    company_id: (this.user.userData.user_type == 'LH' || this.user.userData.user_type == 'SUPER') ? 0 : this.user.userData.belong_data.company_id,\n    project_id: this.user.userData.belong_data.project_id,\n    search_text: ''\n  };\n\n  /** @param res_original - 원본 데이터(비교용) */\n  res_original:SearialInfo[] = [];\n\n  /** @param res - 서버에서 받아온 등록 NO 리스트 */\n  res:ConnectResult<SearialInfo>;\n\n  /** @param res_insert - 추가할 리스트 */\n  res_insert:SearialInfoInsertItem[] = [];\n\n  /** @param searial_ctgo_list - 등록 타입별 장비구분 카테고리 */\n  searial_ctgo_list:SearialCtgo[] = [];\n\n  /** @param selectedList - 체크박스로 선택된 목록 */\n  selectedList = [];\n\n  constructor(\n    private modal: ModalController,\n    private toast: ToastService,\n    private connect: ConnectService,\n    private date: DateService,\n    public user: UserService,\n    private alert: AlertService,\n    private loading: LoadingService\n  ) { }\n\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.get();\n    }, 300);\n  }\n\n  async get(){\n    await this.getSearialCtgo();\n    await this.getList();\n  }\n\n  ChangeSearialType(ev){\n    console.log('ChangeSearialType - ', ev);\n    this.get();\n  }\n  \n  /**\n   * @function getList(): 중장비 등록 NO 목록 가져오기\n   */\n   async getList() {\n    let method = await this.TransMethodType();\n    const res = await this.connect.run(method, this.form,{parse: ['user_data']});\n    if(res.rsCode === 0 ) {\n      this.res = {\n        ...this.res,\n        ...res\n      };\n      this.res_original = JSON.parse(JSON.stringify(res.rsMap));\n      this.res.rsMap.map((item, i) => {item.index = res.rsObj.row_count -i;});\n    }\n    else if (res.rsCode === 1008) {\n      this.res = null;\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n    this.resetState();\n  }\n\n  /**\n   * @function resetState(): 선택리스트, 추가리스트, 업데이트 실행여부 등 스테이터스 초기화\n   */\n  resetState(){\n    this.selectedList = [];\n    this.res_insert = [];\n    this.update_state = false;\n  }\n\n  /**\n   * @function TransMethodType(): searial_type에 따라서 메서드 URL을 반환해주는 메서드\n   */\n   TransMethodType(){\n    let method = '';\n    switch(this.serial_type){\n      case '개인':\n        method = '/serial/user/list';\n        break;\n      case '중장비':\n        method = '/serial/machine/list';\n        break;\n      case '위험지역':\n        method = '/serial/risk/list';\n        break;\n    }\n    return method;\n  }\n\n  /**\n   * @function getSearialCtgo(): 등록 NO 장비구분 목록 가져오기\n   */\n   async getSearialCtgo() {\n    const res = await this.connect.run('/serial/ctgo/list', { serial_type: '전체' });\n    if(res.rsCode === 0 ) {\n      this.searial_ctgo_list = res.rsMap;\n      this.form.ctgo_machine_serial_id = 0;\n    }\n    else if (res.rsCode === 1008) {\n      this.res = null;\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  /**\n   * @function addButton(): \"추가\" 버튼 클릭시 목록에 ITEM ROW가 추가됩니다\n   */\n   addButton(){\n     this.res_insert.push({\n      ctgo_machine_serial_id: this.form.ctgo_machine_serial_id,\n      master_company_id: this.form.company_id,\n      project_id: this.form.project_id,\n      serial_bicon: '',\n      serial_nfc: '',\n      serial_use_state: 0,\n      serial_value: '',\n      serial_id: 0\n     });\n   }\n\n  /**\n   * @function SearialDelete(): 선택목록 삭제하기 메서드\n   */\n  async SearialDelete() {\n    const alert = await this.alert.present({\n      message: '삭제 하시겠습니까?',\n      buttons: [\n        { text: '아니요' },\n        {\n          text: '예',\n          handler: async () => {\n            let insert_item = [];\n            let update_item = [];\n\n            this.selectedList.map((item) => {\n              if(!item.serial_id) insert_item.push(item);\n              if(item.serial_id) update_item.push(item.serial_id);\n            });\n\n            // insert item이 있으면 삭제\n            if(insert_item.length){\n              insert_item.map((item) => {if(this.res_insert.indexOf(item) != -1) this.res_insert.splice(this.res_insert.indexOf(item),1);});\n            }\n\n            // update item이 있으면 삭제\n            if(update_item.length){\n              const res = await this.connect.run('/serial/delete', {\n                serial_ids : update_item\n              });\n              if (res.rsCode === 0) {\n                this.getList();\n              } else {\n                this.toast.present({ color: 'warning', message: res.rsMsg });\n              }\n            }\n          }\n        }\n      ]\n    });\n  }\n\n  /**\n   * @function SearialSave(): \"저장\" 버튼을 클릭하면 실행되는 메서드\n   */\n   async SearialSave() {\n    const alert = await this.alert.present({\n      message: '저장 하시겠습니까?',\n      buttons: [\n        { text: '아니요' },\n        {\n          text: '예',\n          handler: async () => {\n            let case_1 = false; // 원청사를 하나라도 선택 안했을때\n            let case_2 = false; // 장비구분을 하나라도 선택 안했을때\n\n            let insert_promise = null;\n            let update_promise = null;\n\n            // 추가한 리스트 인서트\n            let loadingCus = await this.loading.present();\n            if(this.res_insert.length){\n              this.res_insert.map((item, index) => {\n                if(!item.master_company_id) case_1 = true;\n                if(!item.ctgo_machine_serial_id) case_2 = true;\n              });\n\n              if(case_1) {\n                await loadingCus.dismiss();\n                return this.toast.present({ color: 'warning', message: '원청사를 선택해주세요.' });\n              }\n              if(case_2) {\n                await loadingCus.dismiss();\n                return this.toast.present({ color: 'warning', message: '장비구분을 선택해주세요.' });\n              }\n              console.log(this.res_insert);\n              // 예외처리 후 하나씩 리스트에 추가해준다. - 모든 api가 호출될때까지 기다린다\n              insert_promise = await Promise.all(this.res_insert.map((item) => { return this.SearialSaveMethod(item, 'insert')}));\n              \n              // 추가할 아이템만 있을경우 실행\n              // insert_promise.then(() => {if(this.res_insert.length && !this.res) this.getList();});\n            }\n\n            // 수정된 아이템 찾기\n            let changeed_itemIndex = [];\n            if(this.res){\n              console.log(this.res);\n              for(let i = 0; i < this.res.rsMap.length; i++){\n                if(\n                  this.res.rsMap[i].master_company_id != this.res_original[i].master_company_id ||\n                  this.res.rsMap[i].ctgo_machine_serial_id != this.res_original[i].ctgo_machine_serial_id ||\n                  this.res.rsMap[i].serial_bicon != this.res_original[i].serial_bicon ||\n                  this.res.rsMap[i].serial_nfc != this.res_original[i].serial_nfc ||\n                  this.res.rsMap[i].serial_value != this.res_original[i].serial_value ||\n                  this.res.rsMap[i].serial_use_state != this.res_original[i].serial_use_state\n                  ) changeed_itemIndex.push(this.res.rsMap[i]);\n              }\n            }\n\n            // 한개라도 바뀐 아이템이 있으면 수정 실행\n            if(changeed_itemIndex.length){\n              // 수정된 아이템들 업데이트하기 - 모든 api를 호출할때까지 기다린다\n              update_promise = await Promise.all(changeed_itemIndex.map((item) => { return this.SearialSaveMethod(item, 'update')}));\n              \n              // 모든 api를 호출 후 리스트 다시 갱신\n              // update_promise.then(() => {this.getList();});\n            }\n            const all_promise = Promise.all([insert_promise,update_promise]);\n            await all_promise.then(() => {if(changeed_itemIndex.length || this.res_insert.length) this.getList();});\n\n            if(!changeed_itemIndex.length && !this.res_insert.length) this.resetState(); \n\n            await loadingCus.dismiss();\n          }\n        }\n      ]\n    });\n  }\n\n  /**\n   * @function SeariaSaveMethod(): Promise가 적용된 insert/update api 호출메서드 입니다.\n   * @param item - insert/update 아이템\n   * @param type - 메서드 타입('insert' | 'update')\n   * @returns resolve(true)\n   */\n  SearialSaveMethod(item, type: 'insert' | 'update'){\n    return new Promise(async(resolve, reject) => {\n      const res = await this.connect.run('/serial/'+type, item);\n      if (res.rsCode === 0) {\n  \n      } else {\n        this.toast.present({ color: 'warning', message: res.rsMsg });\n      }\n      resolve(true);\n    });\n  }\n\n  /**\n   * @function btnPromise(): 권한에 따른 버튼활성화 메서드\n   * @param type - 버튼의 type\n   * @param user_id - 체크박스가 있는 목록 해당 아이템을 등록한 사람의 user_id\n   * @returns true or false\n   */\n   btnPromise(type, user_id = null){\n    let state = false;\n    switch(type){\n      case 'insert':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n      case 'update':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n      case 'delete':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n      case 'delete_check':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n    }\n    return state;\n  }\n}\n","export default \".center-class {\\n  text-align: center;\\n}\\n\\ntd {\\n  vertical-align: middle !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcmlhbC1uby1saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtFQUNJLGlDQUFnQztBQUNwQyIsImZpbGUiOiJzZXJpYWwtbm8tbGlzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyLWNsYXNze1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGR7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZSFpbXBvcnRhbnQ7XG59Il19 */\";","export default \"<app-header-admin></app-header-admin>\\n\\n<ion-content [scrollX]=\\\"true\\\">\\n  <app-container>\\n    <app-row style=\\\"align-items: flex-start;\\\">\\n      <app-col size=\\\"280px\\\">\\n        <app-table type=\\\"card\\\">\\n          <ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n            <app-row style=\\\"justify-content: space-between;\\\">\\n              <app-col size=\\\"auto\\\"><h5>필터</h5></app-col>\\n              <app-col size=\\\"auto\\\"><app-button fill=\\\"translucent\\\" style=\\\"width: 100px;\\\" (click)=\\\"getList()\\\">검색</app-button></app-col>\\n            </app-row>\\n          </ion-toolbar>\\n          <tbody>\\n            <tr>\\n              <td>\\n               <app-select-scene name=\\\"project_id\\\" [(ngModel)]=\\\"form.project_id\\\"></app-select-scene>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-select-contractor [project_id]=\\\"form.project_id\\\" [(ngModel)]=\\\"form.company_id\\\"></app-select-contractor>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-select label=\\\"스마트장비\\\" [(ngModel)]=\\\"form.ctgo_machine_serial_id\\\">\\n                  <app-select-option [value]=\\\"0\\\">전체</app-select-option>\\n                  <app-select-option *ngFor=\\\"let item of searial_ctgo_list\\\" [value]=\\\"item.ctgo_machine_serial_id\\\">{{ item.ctgo_machine_serial_name }}</app-select-option>\\n                </app-select>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-input label=\\\"검색어\\\" [(ngModel)]=\\\"form.search_text\\\" placeholder=\\\"검색어를 입력해 주세요.\\\" [(ngModel)]=\\\"this.form.search_text\\\"></app-input>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </app-table>\\n      </app-col>\\n      <app-col>\\n        <ion-toolbar color=\\\"white\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n            <app-button *ngIf=\\\"btnPromise('insert')\\\" fill=\\\"translucent\\\" (click)=\\\"addButton()\\\">추가</app-button>\\n            <app-button *ngIf=\\\"btnPromise('update')\\\" [disabled]=\\\"update_state\\\" fill=\\\"translucent\\\" (click)=\\\"update_state = true\\\">수정</app-button>\\n            <app-button *ngIf=\\\"btnPromise('delete')\\\" fill=\\\"translucent\\\" color=\\\"danger\\\" (click)=\\\"SearialDelete()\\\">삭제</app-button>\\n            <app-button *ngIf=\\\"btnPromise('update')\\\" [disabled]=\\\"!update_state && !res_insert.length\\\" fill=\\\"translucent\\\" (click)=\\\"SearialSave()\\\">저장</app-button>\\n          </ion-buttons>\\n          <!-- <ion-buttons slot=\\\"end\\\">\\n            <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"this.serial_type\\\" (ngModelChange)=\\\"ChangeSearialType($event)\\\">\\n              <ion-segment-button value=\\\"개인\\\">개인용</ion-segment-button>\\n              <ion-segment-button value=\\\"중장비\\\">중장비용</ion-segment-button>\\n              <ion-segment-button value=\\\"위험지역\\\">장소용</ion-segment-button>\\n            </ion-segment>\\n          </ion-buttons> -->\\n        </ion-toolbar>\\n        <ion-toolbar color=\\\"white\\\">\\n          <h5>장비 목록 (총 {{res?.rsObj?.row_count || 0 }}건)</h5>\\n        </ion-toolbar>\\n        <app-check-group [(ngModel)]=\\\"selectedList\\\">\\n          <app-table>\\n            <thead>\\n              <tr>\\n                <th *ngIf=\\\"btnPromise('delete_check')\\\" style=\\\"width: 40px;\\\" rowspan=\\\"2\\\"><app-check type=\\\"all\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check></th>\\n                <th>업체명</th>\\n                <th>스마트장비</th>\\n                <th>관리번호</th>\\n                <th>기기식별번호</th>\\n                <th>NFC NO</th>\\n                <!-- <th>기준값</th> -->\\n                <th>사용여부</th>\\n                <!-- <th>배정현황</th> -->\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <!-- 추가된 ITEM 영역 -->\\n              <tr *ngFor=\\\"let item of res_insert\\\">\\n                <td *ngIf=\\\"btnPromise('delete_check')\\\" style=\\\"width: 40px;\\\"><app-check [on]=\\\"item\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check></td>\\n                <td>\\n                  <app-select-contractor label=\\\"\\\" [disabled]=\\\"user.userData.user_type == 'LH' ? false : true\\\" [project_id]=\\\"item.project_id\\\" [(ngModel)]=\\\"item.master_company_id\\\"></app-select-contractor>\\n                </td>\\n                <td>\\n                  <app-select label=\\\"장비구분\\\" [(ngModel)]=\\\"item.ctgo_machine_serial_id\\\" label=\\\"\\\">\\n                    <app-select-option *ngFor=\\\"let item of searial_ctgo_list\\\" [value]=\\\"item.ctgo_machine_serial_id\\\">{{ item.ctgo_machine_serial_name }}</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td class=\\\"center-class\\\"> - </td>\\n                <td><app-input placeholder=\\\"입력해주세요\\\" [(ngModel)]=\\\"item.serial_bicon\\\"></app-input></td>\\n                <td><app-input placeholder=\\\"입력해주세요\\\" [(ngModel)]=\\\"item.serial_nfc\\\"></app-input></td>\\n                <!-- <td><app-input placeholder=\\\"입력해주세요\\\" [(ngModel)]=\\\"item.serial_value\\\"></app-input></td> -->\\n                <td>\\n                  <app-select [(ngModel)]=\\\"item.serial_use_state\\\">\\n                    <app-select-option [value]=\\\"1\\\">Y</app-select-option>\\n                    <app-select-option [value]=\\\"0\\\">N</app-select-option>\\n                  </app-select>\\n                </td>\\n                <!-- <td class=\\\"center-class\\\"> - </td> -->\\n              </tr>\\n    \\n              <tr *ngFor=\\\"let item of res?.rsMap\\\">\\n                <td style=\\\"width: 40px;\\\"><app-check [on]=\\\"item\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check></td>\\n                <td>\\n                  <app-select-contractor label=\\\"\\\" [disabled]=\\\"(user.userData.user_type == 'LH' && update_state) ? false : true\\\" [project_id]=\\\"item.project_id\\\" [(ngModel)]=\\\"item.master_company_id\\\"></app-select-contractor>\\n                </td>\\n                <td>\\n                  <app-select label=\\\"장비구분\\\" [(ngModel)]=\\\"item.ctgo_machine_serial_id\\\" label=\\\"\\\" [disabled]=\\\"!update_state\\\">\\n                    <app-select-option *ngFor=\\\"let item of searial_ctgo_list\\\" [value]=\\\"item.ctgo_machine_serial_id\\\">{{ item.ctgo_machine_serial_name }}</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td [class.center-class]=\\\"!item.serial_no\\\">{{ item.serial_no }}</td>\\n                <td><app-input [disabled]=\\\"!update_state\\\" [(ngModel)]=\\\"item.serial_bicon\\\"></app-input></td>\\n                <td><app-input [disabled]=\\\"!update_state\\\" [(ngModel)]=\\\"item.serial_nfc\\\"></app-input></td>\\n                <!-- <td><app-input [disabled]=\\\"!update_state\\\" [(ngModel)]=\\\"item.serial_value\\\"></app-input></td> -->\\n                <td>\\n                  <app-select [(ngModel)]=\\\"item.serial_use_state\\\" [disabled]=\\\"!update_state\\\">\\n                    <app-select-option [value]=\\\"1\\\">Y</app-select-option>\\n                    <app-select-option [value]=\\\"0\\\">N</app-select-option>\\n                  </app-select>\\n                </td>\\n                <!-- <td [class.center-class]=\\\"!item.assign_data\\\">{{ item.assign_data ? item.assign_data : ' - ' }}</td> -->\\n              </tr>\\n            </tbody>\\n          </app-table>\\n        </app-check-group>\\n      </app-col>\\n    </app-row>\\n\\n  </app-container>\\n\\n  </ion-content>\\n\";"],"sourceRoot":"webpack:///"}