{"version":3,"sources":["./src/app/page/today-work/my-status-situation/worker-status-list/worker-status-list-routing.module.ts","./src/app/page/today-work/my-status-situation/worker-status-list/worker-status-list.module.ts","./src/app/page/today-work/my-status-situation/worker-status-list/worker-status-list.page.ts","./src/app/page/today-work/my-status-situation/worker-status-list/worker-status-list.page.scss","./src/app/page/today-work/my-status-situation/worker-status-list/worker-status-list.page.html"],"names":[],"mappings":"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","file":"src_app_page_today-work_my-status-situation_worker-status-list_worker-status-list_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WorkerStatusListPage } from './worker-status-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WorkerStatusListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WorkerStatusListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WorkerStatusListPageRoutingModule } from './worker-status-list-routing.module';\n\nimport { WorkerStatusListPage } from './worker-status-list.page';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { BasicComponentModule } from 'src/app/basic/component/basic.component.module';\nimport { WorkerStatusAddPageModule } from '../worker-status-add/worker-status-add.module';\nimport { StatusSearchModule } from '../../component/status-search.module';\nimport { QrService } from 'src/app/basic/service/util/qr.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    BasicComponentModule,\n    WorkerStatusListPageRoutingModule,\n    WorkerStatusAddPageModule,\n    StatusSearchModule\n  ],\n  declarations: [WorkerStatusListPage],\n  providers:[\n    QrService\n  ]\n})\nexport class WorkerStatusListPageModule {}\n","import { ScannerService } from './../../../../basic/service/util/scanner.service';\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ConnectResult, ConnectService } from 'src/app/basic/service/core/connect.service';\nimport { ToastService } from 'src/app/basic/service/ionic/toast.service';\nimport { AreaDate } from 'src/app/component/select/select-dangerous-area/select-dangerous-area.component';\nimport { DetailSearchComponent } from '../../component/status-search/detail-search/detail-search.component';\nimport { WorkerStatusAddPage } from '../worker-status-add/worker-status-add.page';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\n\n\nexport type CtgoNative = 'ch' | 'en' | 'kr' | 'vi';\n\n@Component({\n  selector: 'app-worker-status-list',\n  templateUrl: './worker-status-list.page.html',\n  styleUrls: ['./worker-status-list.page.scss'],\n})\nexport class WorkerStatusListPage implements OnInit {\n\n  menuCount:'gate' | 'risk' = 'gate';\n\n  gateList:ConnectResult<{\n    outside_time: string,\n    manual_state: number,\n    nb_log_id: number,\n    user_name: string,\n    ctgo_occupation_name: CtgoNative,\n    ctgo_job_position_name: CtgoNative,\n    inside_state: number,\n    user_id: number,\n    outside_state: number,\n    company_name: string,\n    inside_type: string,\n    outside_type: string,\n    inner_data:{\n      nb_log_id: number;\n      inside_time: string;\n      inside_state: number;\n      outside_time: string;\n      outside_state: number;\n      inside_type: string;\n      outside_type: string;\n    }[],\n    ctgo_safe_job_name: CtgoNative,\n    inside_time: string,\n    checked:boolean\n  }>;\n\n  areadata = new AreaDate();\n  form = {\n    master_company_id:0,\n    project_id:history.state.project_id,\n    search_text:'',\n    area_risk_id:0,\n  }\n\n  form_risk = {\n    master_company_id:0,\n    project_id:history.state.project_id,\n    search_text:'',\n    area_risk_id:0,\n  }\n\n  nfcqrForm = {\n    and_uq_id:0,\n    ios_uq_id:0,\n    nb_log_state:'',\n    project_id:0,\n    serial_key:0\n}\n\n  riskAreaList:ConnectResult<{\n    outside_time: null,\n    manual_state: 1,\n    nb_log_id: null,\n    user_name: null,\n    ctgo_occupation_name: null,\n    ctgo_job_position_name: null,\n    inside_state: null,\n    inside_type: null,\n    outside_type: null,\n    user_id: null,\n    outside_state: null,\n    company_name: null,\n    inner_data:{\n      nb_log_id: number;\n      inside_time: string;\n      inside_state: number;\n      outside_time: string;\n      outside_state: number;\n      inside_type: string;\n      outside_type: string;\n    }[],\n    ctgo_safe_job_name: null,\n    inside_time: null,\n    checked:boolean\n  }>\n\n  nfcIn:boolean = true;\n\n  constructor(\n    private modal: ModalController,\n    private connect: ConnectService,\n    private toast: ToastService,\n    private scanner: ScannerService,\n    private changeDetector: ChangeDetectorRef,\n    public languagePack: LanguagePackService\n  ) { }\n\n  async ngOnInit() {\n    this.form.project_id = history.state.project_id;\n    this.form.master_company_id = history.state.master_company_id | 0;\n    this.form_risk.project_id = history.state.project_id;\n    this.form_risk.master_company_id = history.state.master_company_id | 0;\n\n    await this.getGate();\n  }\n\n  async getGate() {\n   const res = await this.connect.run('/work_project/nfc_beacon/gate/list',this.form,{\n      parse:['inner_data', 'ctgo_job_position_name','ctgo_occupation_name','ctgo_safe_job_name']\n    });\n    if(res.rsCode === 0) {\n      this.gateList = {\n        ...this.gateList,\n        ...res\n      }\n    } else {\n      // this.toast.present({ color: 'warning', message: this.gateList.rsMsg }); \n    }\n  }\n  \n  async getRiskArea() {\n    console.log('getRiskArea()', this.form_risk);\n    console.log('getRiskArea()', this.areadata);\n    this.nfcIn = false;\n    // if(!this.form_risk.area_risk_id) return;  // await this.toast.present({message:'위험지역을 선택해 주세요.', color:'warning'});\n    // this.form.area_risk_id = this.areadata.area_risk_id;\n    const res = await this.connect.run('/work_project/nfc_beacon/risk/list',this.form_risk,{\n      parse:['inner_data']\n    });\n    if(res.rsCode === 0) {\n\n      this.riskAreaList = {\n        ...this.riskAreaList,\n        ...res\n      }\n    } else {\n      // this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  dataChange(ev)  {\n    // this.areadata = ev.data;\n    console.log('dataChange_1',ev);\n    if(ev?.area_risk_id) this.form_risk.area_risk_id = ev.area_risk_id;\n    this.areadata = {\n      ...this.areadata,\n      ...ev\n    };\n    console.log('this.areadata - ',this.areadata);\n    this.getRiskArea();\n  }\n\n  async work_edit(type) {\n    let method = '';\n    if(this.menuCount === 'gate') method = 'gate';\n    else method = 'risk';\n    const modal = await this.modal.create({\n      component:WorkerStatusAddPage,\n      componentProps: {\n        project_id: this.menuCount === 'gate' ? this.form.project_id : this.form_risk.project_id,\n        select_type:type,\n        area_risk_id: this.menuCount === 'gate' ? this.form.area_risk_id : this.form_risk.area_risk_id,\n        areadata:this.areadata,\n        master_company_id: this.menuCount === 'gate' ? this.form.master_company_id : this.form_risk.master_company_id,\n        method: method\n      }\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if(data){\n      if(method === 'gate') this.getGate();\n      else {\n        this.areadata.area_risk_id = data.data;\n        this.getRiskArea();\n      }\n    }\n  }\n\n  async detailSearch() {\n    const modal = await this.modal.create({\n      component:DetailSearchComponent\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if(data) this.getGate();\n  }\n\n  async inNfcQr() {\n    this.scanner.init(true).then((data) => {\n      // this.form.area_risk_id = data.data;\n      this.areadata.area_risk_id = data.data;\n      this.getRiskArea();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3b3JrZXItc3RhdHVzLWxpc3QucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>근로자 출입 관리</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n  <app-row>\\n    <app-col>\\n      <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"menuCount\\\">\\n        <ion-segment-button value=\\\"gate\\\">게이트</ion-segment-button>\\n        <ion-segment-button value=\\\"risk\\\">위험지역</ion-segment-button>\\n      </ion-segment>\\n    </app-col>\\n  </app-row>\\n</ion-toolbar>\\n<app-row *ngIf=\\\"menuCount === 'gate'\\\">\\n  <app-col>\\n    <app-input label=\\\"\\\" [placeholder]=\\\"languagePack.getText('검색어를 입력해 주세요')\\\" [(ngModel)]=\\\"form.search_text\\\"></app-input>\\n  </app-col>\\n  <app-col size=\\\"auto\\\">\\n    <app-button (click)=\\\"getGate()\\\">{{ languagePack.getText('검색') }}</app-button>\\n  </app-col>\\n</app-row>\\n<ng-container *ngIf=\\\"menuCount === 'risk'\\\">\\n  <app-row>\\n    <app-col>\\n      <app-select-dangerous-area (ngModelChange)=\\\"dataChange($event)\\\" [project_id]=\\\"form_risk.project_id\\\" [(ngModel)]=\\\"areadata\\\"></app-select-dangerous-area>\\n    </app-col>\\n  </app-row>\\n  <app-row>\\n    <app-col>\\n      <app-input label=\\\"\\\" [placeholder]=\\\"languagePack.getText('검색어를 입력해 주세요')\\\" [(ngModel)]=\\\"form_risk.search_text\\\"></app-input>\\n    </app-col>\\n    <app-col size=\\\"auto\\\">\\n      <app-button (click)=\\\"getRiskArea()\\\">{{ languagePack.getText('검색') }}</app-button>\\n    </app-col>\\n  </app-row>\\n</ng-container>\\n<ion-content>\\n  <ng-container *ngIf=\\\"menuCount === 'gate'\\\">\\n      <ng-container *ngFor=\\\"let gate of gateList?.rsMap\\\" >\\n        <app-card (click)=\\\"gate.checked= !gate.checked\\\">\\n          <app-row>\\n            <app-col size=\\\"auto\\\">\\n            </app-col>\\n            <app-col>\\n              <h5>{{ gate.user_name }}</h5>\\n              <p>{{ gate.company_name }} | {{ gate.ctgo_job_position_name }} | {{ gate.outside_state ? gate.outside_time : gate.inside_time }}</p>\\n            </app-col>\\n            <app-col size=\\\"auto\\\">\\n              <ion-chip [color]=\\\"gate.outside_state ? 'medium' : 'primary'\\\">{{ gate.outside_state ? languagePack.getText('퇴장') : languagePack.getText('입장') }}\\n              </ion-chip>\\n            </app-col>\\n            <app-col size=\\\"auto\\\">\\n              <ion-chip [color]=\\\"gate.outside_state ? 'medium' : 'primary' \\\"><div>{{ gate.outside_state ? gate.outside_time : gate.inside_time }}</div><div>{{ gate.outside_state ? (gate.outside_type === 'MANUAL' ? '(수동)':'') : (gate.inside_type === 'MANUAL' ? '(수동)':'')}}</div></ion-chip>\\n            </app-col>\\n          </app-row>\\n        </app-card>\\n        <ng-container *ngIf=\\\"gate.checked\\\">\\n          <app-card>\\n            <ng-container *ngFor=\\\"let item of gate?.inner_data\\\">\\n              <app-row *ngIf=\\\"item.inside_state\\\">\\n                <app-col size=\\\"auto\\\">\\n                </app-col>\\n                <app-col>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"primary\\\">{{ languagePack.getText('입장') }}</ion-chip>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"primary\\\"><div>{{ item.inside_time }}</div><div>{{ item.inside_type === 'MANUAL' ? '(수동)':'' }}</div></ion-chip>\\n                </app-col>\\n              </app-row>\\n  \\n              <app-row *ngIf=\\\"item.outside_state\\\">\\n                <app-col size=\\\"auto\\\">\\n                </app-col>\\n                <app-col>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"medium\\\">{{ languagePack.getText('퇴장') }}</ion-chip>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"medium\\\"><div>{{ item.outside_time }}</div><div>{{ item.outside_type === 'MANUAL' ? '(수동)':''}}</div></ion-chip>\\n                </app-col>\\n              </app-row>\\n            </ng-container>\\n          </app-card>\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n\\n  <ng-container *ngIf=\\\"menuCount === 'risk'\\\">\\n      <ng-container *ngFor=\\\"let risk of riskAreaList?.rsMap\\\" >\\n        <app-card (click)=\\\"risk.checked= !risk.checked\\\">\\n          <app-row>\\n            <app-col size=\\\"auto\\\">\\n            </app-col>\\n            <app-col>\\n              <h5>{{ risk.user_name }}</h5>\\n              <p>{{ risk.company_name }} | {{ risk.ctgo_job_position_name }} | {{ risk.inside_time }}</p>\\n            </app-col>\\n            <app-col size=\\\"auto\\\">\\n              <ion-chip [color]=\\\"risk.outside_state ? 'medium' : 'primary'\\\">{{ risk.outside_state ? languagePack.getText('퇴장') : languagePack.getText('입장') }}</ion-chip>\\n            </app-col>\\n            <app-col size=\\\"auto\\\">\\n              <ion-chip [color]=\\\"risk.outside_state ? 'medium' : 'primary' \\\"><div>{{ risk.outside_state ? risk.outside_time : risk.inside_time }}</div><div>{{ risk.outside_state ? (risk.outside_type === 'MANUAL' ? '(수동)':'') : (risk.inside_type === 'MANUAL' ? '(수동)':'')}}</div></ion-chip>\\n            </app-col>\\n          </app-row>\\n        </app-card>\\n        <ng-container *ngIf=\\\"risk.checked\\\">\\n          <app-card>\\n            <ng-container *ngFor=\\\"let item of risk?.inner_data\\\">\\n              <app-row>\\n                <app-col size=\\\"auto\\\">\\n                </app-col>\\n                <app-col>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"primary\\\">{{ languagePack.getText('입장') }}</ion-chip>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"primary\\\"><div>{{ item.inside_time }}</div><div>{{ item.inside_type === 'MANUAL' ? '(수동)':'' }}</div></ion-chip>\\n                </app-col>\\n              </app-row>\\n  \\n              <app-row *ngIf=\\\"item.outside_state\\\">\\n                <app-col size=\\\"auto\\\">\\n                </app-col>\\n                <app-col>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"medium\\\">{{ languagePack.getText('퇴장') }}</ion-chip>\\n                </app-col>\\n                <app-col size=\\\"auto\\\">\\n                  <ion-chip color=\\\"medium\\\"><div>{{ item.outside_time }}</div><div>{{ item.outside_type === 'MANUAL' ? '(수동)':''}}</div></ion-chip>\\n                </app-col>\\n              </app-row>\\n            </ng-container>\\n          </app-card>\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n  </ion-content>\\n  <app-button *ngIf=\\\"menuCount === 'risk' && nfcIn\\\" (click)=\\\"inNfcQr()\\\">장소 스캔(NFC/QR)</app-button>\\n  <!-- *ngIf=\\\"menuCount === 1 || !nfcIn\\\" -->\\n  <app-button-footer *ngIf=\\\"menuCount === 'gate' || (menuCount === 'risk' && !nfcIn)\\\">\\n  <app-button (click)=\\\"work_edit('IN')\\\">근로자 입장 등록</app-button>\\n  <app-button (click)=\\\"work_edit('OUT')\\\" >근로자 퇴장 등록</app-button>\\n</app-button-footer>\\n\";"],"sourceRoot":"webpack:///"}