{"version":3,"sources":["./src/app/page/monitor/monitor-cctv-edit/monitor-cctv-edit.page.ts","./src/app/page/monitor/monitor-cctv-list/monitor-cctv-list-routing.module.ts","./src/app/page/monitor/monitor-cctv-list/monitor-cctv-list.module.ts","./src/app/page/monitor/monitor-cctv-list/monitor-cctv-list.page.ts","./src/app/page/monitor/monitor-cctv-edit/monitor-cctv-edit.page.scss","./src/app/page/monitor/monitor-cctv-list/monitor-cctv-list.page.scss","./src/app/page/monitor/monitor-cctv-edit/monitor-cctv-edit.page.html","./src/app/page/monitor/monitor-cctv-list/monitor-cctv-list.page.html"],"names":[],"mappings":"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","file":"default-src_app_page_monitor_monitor-cctv-list_monitor-cctv-list_module_ts.js","sourcesContent":["import { CCTVInfo } from './../monitor-cctv-list/monitor-cctv-list.page';\nimport { AlertService } from './../../../basic/service/ionic/alert.service';\nimport { ModalController } from '@ionic/angular';\nimport { ConnectService, ConnectResult } from './../../../basic/service/core/connect.service';\nimport { UserService } from './../../../basic/service/core/user.service';\nimport { ToastService } from './../../../basic/service/ionic/toast.service';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-monitor-cctv-edit',\n  templateUrl: './monitor-cctv-edit.page.html',\n  styleUrls: ['./monitor-cctv-edit.page.scss'],\n})\nexport class MonitorCctvEditPage implements OnInit {\n  @Input() cctv_id:number = null;\n  @Input() type:string = '';\n  @Input() item:any;\n\n  form = {\n    cctv_id: 0,\n    cctv_alias: '',\n    cctv_area_name: '',\n    cctv_channel_no: '',\n    cctv_ip: '',\n    cctv_nvr_id: '',\n    cctv_nvr_password: '',\n    cctv_port: '',\n    cctv_use_state: 0,\n    master_company_id: 0,\n    master_company_name: '',\n    project_id: 0,\n    project_name: ''\n  }\n\n  permission = {\n    edit_btn: false,\n    input_disabled: false\n  }\n\n  constructor(\n    private alert: AlertService,\n    private _modal: ModalController,\n    private connect: ConnectService,\n    public user: UserService,\n    private toast: ToastService\n  ) { }\n\n  ngOnInit() {\n    if(this.cctv_id){\n      this.get();\n    } else {\n      this.form.project_id = this.item.project_id;\n      this.form.master_company_id = this.item.master_company_id;\n    }\n\n    if(this.type === 'update') this.permission.edit_btn = true;\n    else this.permission.input_disabled = true;\n  }\n\n  /**\n   * @function get(): CCTV상세정보를 가져옵니다.\n   */\n   async get() {\n    const res = await this.connect.run('/cctv/detail', {cctv_id: this.cctv_id});\n    if(res.rsCode === 0 ) {\n      this.form = res.rsObj;\n    }\n    else if (res.rsCode === 1008) {\n      // this.res = null;\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  /**\n   * @function save(): CCTV정보등록 OR 수정\n   */\n  async save(){\n    let msg:string = this.validation();\n    if(msg) return this.toast.present({message: msg, color: 'warning'});\n\n    const alert = await this.alert.present({\n      message:'저장 하시겠습니까?',\n      buttons:[\n        {text:'아니요'},\n        {text:'예',\n          handler:async() => {\n            // console.log(this.form);\n            const res = await this.connect.run(`/cctv/${this.type}`, this.form);\n            if(res.rsCode === 0 ) {\n              this._modal.dismiss(true);\n            }\n            else if (res.rsCode === 1008) {\n              // this.res = null;\n            }\n            else {\n              this.toast.present({ color: 'warning', message: res.rsMsg });\n            }\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  /**\n   * @function delete(): CCTV정보등록 OR 삭제\n   */\n   async delete(){\n    const alert = await this.alert.present({\n      message:'삭제 하시겠습니까?',\n      buttons:[\n        {text:'아니요'},\n        {text:'예',\n          handler:async() => {\n            const res = await this.connect.run('/cctv/delete', {cctv_ids: [this.cctv_id]});\n            if(res.rsCode === 0 ) {\n              this._modal.dismiss(true);\n            }\n            else if (res.rsCode === 1008) {\n              // this.res = null;\n            }\n            else {\n              this.toast.present({ color: 'warning', message: res.rsMsg });\n            }\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  /**\n   * @function validation(): CCTV상세정보 유효성검사\n   */\n  validation(){\n    if(!this.form.project_id) return '현장을 선택해주세요.';\n    if(!this.form.master_company_id) return '원청사를 선택해주세요.';\n    if(!this.form.cctv_area_name) return '설치장소명을 입력해주세요.';\n    if(!this.form.cctv_ip) return 'CCTV IP를 입력해주세요.';\n    if(!this.form.cctv_alias) return 'Alias를 입력해주세요.';\n    if(!this.form.cctv_port) return 'Port를 입력해주세요.';\n    if(!this.form.cctv_channel_no) return 'Channel No.를 입력해주세요.';\n    if(!this.form.cctv_nvr_id) return 'NVR ID를 입력해주세요.';\n    if(!this.form.cctv_nvr_password) return 'NVR PW를 입력해주세요.';\n    return null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MonitorCctvListPage } from './monitor-cctv-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MonitorCctvListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MonitorCctvListPageRoutingModule {}\n","import { ComponentModule } from './../../../component/component.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MonitorCctvListPageRoutingModule } from './monitor-cctv-list-routing.module';\n\nimport { MonitorCctvListPage } from './monitor-cctv-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    MonitorCctvListPageRoutingModule\n  ],\n  declarations: [MonitorCctvListPage]\n})\nexport class MonitorCctvListPageModule {}\n","import { MonitorCctvEditPage } from './../monitor-cctv-edit/monitor-cctv-edit.page';\nimport { ConnectService, ConnectResult } from './../../../basic/service/core/connect.service';\nimport { UserService } from './../../../basic/service/core/user.service';\nimport { ToastService } from './../../../basic/service/ionic/toast.service';\nimport { ModalController } from '@ionic/angular';\nimport { AlertService } from './../../../basic/service/ionic/alert.service';\nimport { Component, OnInit } from '@angular/core';\n\nexport class CCTVInfo {\n  cctv_id:number;\n  cctv_alias:string;\n  cctv_area_name:string;\n  cctv_channel_no:string;\n  cctv_ip:string;\n  cctv_nvr_id:string;\n  cctv_nvr_password:string;\n  cctv_port:string;\n  cctv_use_state:number;\n  master_company_id:number;\n  master_company_name:string;\n  row_count: number;\n}\n\n@Component({\n  selector: 'app-monitor-cctv-list',\n  templateUrl: './monitor-cctv-list.page.html',\n  styleUrls: ['./monitor-cctv-list.page.scss'],\n})\nexport class MonitorCctvListPage implements OnInit {\n  form = {\n    project_id: this.user.userData.belong_data.project_id,\n    master_company_id: this.user.userData.belong_data.master_company_id ? this.user.userData.belong_data.master_company_id : 0,\n    search_text: '',\n    limit_no: 0\n  }\n  res:ConnectResult<CCTVInfo>;\n\n  permission = {\n    company_id: false\n  }\n\n  selectedList = [];\n  constructor(\n    private alert: AlertService,\n    private _modal: ModalController,\n    private connect: ConnectService,\n    public user: UserService,\n    private toast: ToastService\n  ) { }\n\n  ngOnInit() {\n    const { belong_data } = this.user.userData;\n\n    this.form.project_id = belong_data.project_id;\n\n    if(belong_data.company_contract_type === 'LH'\n    || belong_data.company_contract_type === '감리사') {\n      this.permission.company_id = true;\n      this.form.master_company_id = 0;\n    } else {\n      this.permission.company_id = false;\n      this.form.master_company_id = belong_data.master_company_id;\n    }\n\n    this.get();\n  }\n\n  /**\n   * @function edit(): CCTV살세정보 OR 수정하기\n   */\n  async edit(method = '', cctv_id = null) {\n    const modal = await this._modal.create({\n      component:MonitorCctvEditPage,\n      componentProps: {\n        cctv_id: cctv_id || 0,\n        type: method,\n        item: this.form\n      }\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if(data) {\n      // 모바일은 편집이 없어서 이렇게해도 충분함. 있으면 추가 코드 작성을 해야함.\n      this.get();\n    }\n  }\n\n  /**\n   * @function delete(): CCTV정보등록 OR 삭제\n   */\n   async delete(){\n    let delete_arr =[];\n    this.selectedList.map((item) => {delete_arr.push(item.cctv_id);});\n\n    const alert = await this.alert.present({\n      message:'삭제 하시겠습니까?',\n      buttons:[\n        {text:'아니요'},\n        {text:'예',\n          handler:async() => {\n            const res = await this.connect.run('/cctv/delete', {cctv_ids: delete_arr});\n            if(res.rsCode === 0 ) {\n              this.get();\n            }\n            else if (res.rsCode === 1008) {\n              // this.res = null;\n            }\n            else {\n              this.toast.present({ color: 'warning', message: res.rsMsg });\n            }\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  /**\n   * @function get(): CCTV목록정보를 가져옵니다.\n   */\n  async get() {\n    const res = await this.connect.run('/cctv/list', this.form);\n    if(res.rsCode === 0 ) {\n      this.res = res;\n    }\n    else if (res.rsCode === 1008) {\n      this.res = null;\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  /**\n   * @function changeUse(): CCTV표출정보를 변경합니다.\n   */\n  async changeUse(item){\n    const res = await this.connect.run('/cctv/usestate/update', item);\n    if(res.rsCode === 0) {\n      \n    } else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb25pdG9yLWNjdHYtZWRpdC5wYWdlLnNjc3MifQ== */\";","export default \"td {\\n  vertical-align: baseline !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbml0b3ItY2N0di1saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFHLG1DQUFrQztBQUVyQyIsImZpbGUiOiJtb25pdG9yLWNjdHYtbGlzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZHt2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmUhaW1wb3J0YW50O30iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-title>CCTV 상세보기</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-buttons slot=\\\"end\\\">\\n        <app-dismiss-button></app-dismiss-button>\\n      </ion-buttons>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <app-row mobileBreak>\\n    <app-col>\\n      <app-select-scene [required]=\\\"true\\\" label=\\\"현장명\\\" [(ngModel)]=\\\"form.project_id\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-select-scene>\\n    </app-col>\\n    <app-col>\\n      <app-select-contractor *ngIf=\\\"!cctv_id\\\" [required]=\\\"true\\\" label=\\\"원청사명\\\" [project_id]=\\\"form.project_id\\\" [(ngModel)]=\\\"form.master_company_id\\\" [disabled]=\\\"true\\\"></app-select-contractor>\\n      <app-input *ngIf=\\\"cctv_id\\\" [required]=\\\"true\\\" label=\\\"원청사명\\\" [(ngModel)]=\\\"form.master_company_name\\\" [disabled]=\\\"true\\\"></app-input>\\n    </app-col>\\n  </app-row>\\n\\n  <app-row mobileBreak>\\n    <app-col>\\n      <app-input [required]=\\\"true\\\" label=\\\"설치장소명\\\" [(ngModel)]=\\\"form.cctv_area_name\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-input>\\n    </app-col>\\n    <app-col>\\n      <app-input [required]=\\\"true\\\" label=\\\"CCTV IP\\\" [(ngModel)]=\\\"form.cctv_ip\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-input>\\n    </app-col>\\n  </app-row>\\n\\n  <app-row mobileBreak>\\n    <app-col>\\n      <app-input [required]=\\\"true\\\" label=\\\"Port\\\" [(ngModel)]=\\\"form.cctv_port\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-input>\\n    </app-col>\\n    <app-col>\\n      <app-input [required]=\\\"true\\\" label=\\\"Channel No.\\\" [(ngModel)]=\\\"form.cctv_channel_no\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-input>\\n    </app-col>\\n  </app-row>\\n\\n  <app-row mobileBreak>\\n    <app-col>\\n      <app-input [required]=\\\"true\\\" label=\\\"NVR ID\\\" [(ngModel)]=\\\"form.cctv_nvr_id\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-input>\\n    </app-col>\\n    <app-col>\\n      <app-input [required]=\\\"true\\\" label=\\\"NVR PW\\\" [(ngModel)]=\\\"form.cctv_nvr_password\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-input>\\n    </app-col>\\n  </app-row>\\n\\n  <app-row mobileBreak>\\n    <app-col>\\n      <app-input [required]=\\\"true\\\" label=\\\"Alias\\\" [(ngModel)]=\\\"form.cctv_alias\\\" [disabled]=\\\"!permission.input_disabled\\\"></app-input>\\n    </app-col>\\n  </app-row>\\n</ion-content>\\n<app-button-footer *ngIf=\\\"type === 'update'\\\">\\n  <app-button fill=\\\"translucent\\\" *ngIf=\\\"!permission.input_disabled\\\" (click)=\\\"this.permission.input_disabled = true\\\">수정</app-button>\\n  <app-button fill=\\\"translucent\\\" (click)=\\\"delete()\\\" color=\\\"danger\\\">삭제</app-button>\\n  <app-button fill=\\\"translucent\\\" *ngIf=\\\"permission.input_disabled\\\" (click)=\\\"save()\\\">저장</app-button>\\n</app-button-footer>\\n<app-button-footer *ngIf=\\\"type === 'insert'\\\">\\n  <app-button name=\\\"submit\\\" (click)=\\\"save()\\\">저장</app-button>\\n</app-button-footer>\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-title>CCTV 목록</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-buttons slot=\\\"end\\\">\\n        <app-dismiss-button></app-dismiss-button>\\n      </ion-buttons>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ng-container *mobileHidden>\\n    <app-row style=\\\"align-items: flex-start;\\\">\\n      <app-col size=\\\"280px\\\">\\n        <app-table type=\\\"card\\\">\\n          <ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n            <app-row style=\\\"justify-content: space-between;\\\">\\n              <app-col size=\\\"auto\\\"><h5>필터</h5></app-col>\\n              <app-col size=\\\"auto\\\">\\n                <app-button fill=\\\"translucent\\\" style=\\\"width: 100px;\\\" (click)=\\\"get()\\\">검색</app-button>\\n              </app-col>\\n            </app-row>\\n          </ion-toolbar>\\n          <tbody>\\n            <tr>\\n              <td>\\n                <app-select-scene name=\\\"project_id\\\" [(ngModel)]=\\\"form.project_id\\\"></app-select-scene>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-select-contractor [project_id]=\\\"form.project_id\\\" [(ngModel)]=\\\"form.master_company_id\\\" [disabled]=\\\"!permission.company_id\\\" [allState]=\\\"permission.company_id\\\"></app-select-contractor>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-input label=\\\"검색어\\\" [(ngModel)]=\\\"form.search_text\\\" placeholder=\\\"검색어를 입력해 주세요.\\\"></app-input>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </app-table>\\n      </app-col>\\n      <app-col>\\n        <ion-toolbar color=\\\"white\\\" *ngIf=\\\"user.userData.user_type !== 'LH' && user.userData.user_type !== 'SUPER'\\\">   \\n          <ion-buttons slot=\\\"start\\\">\\n            <app-button fill=\\\"translucent\\\" (click)=\\\"edit('insert')\\\">등록</app-button>\\n            <app-button fill=\\\"translucent\\\" (click)=\\\"delete()\\\" color=\\\"warning\\\">삭제</app-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n        <ion-toolbar color=\\\"white\\\">\\n          <h5>CCTV 목록 (총 {{res?.rsObj?.row_count || 0 }}건)</h5>\\n        </ion-toolbar>\\n        <ng-container *ngIf=\\\"res\\\">\\n          <ng-container *ngIf=\\\"res.rsCode === 0 else tempFail\\\">\\n            <app-check-group [(ngModel)]=\\\"selectedList\\\">\\n              <app-table>\\n                <thead>\\n                  <tr>\\n                    <th style=\\\"width: 40px;\\\" *ngIf=\\\"user.userData.user_type !== 'LH' && user.userData.user_type !== 'SUPER'\\\">\\n                      <app-check type=\\\"all\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check>\\n                    </th>\\n                    <th>CCTV ID</th>\\n                    <th>Alias</th>\\n                    <th>원청사명</th>\\n                    <th>설치장소명</th>\\n                    <th>CCTV IP</th>\\n                    <th>Port</th>\\n                    <th>Channel No.</th>\\n                    <th>NVR ID</th>\\n                    <th>NVR PW</th>\\n                    <th>통합관제 표출</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr class=\\\"button\\\" *ngFor=\\\"let item of res?.rsMap\\\" (click)=\\\"edit('update', item.cctv_id)\\\">\\n                    <td *ngIf=\\\"user.userData.user_type !== 'LH' && user.userData.user_type !== 'SUPER'\\\">\\n                      <app-check (click)=\\\"$event.stopPropagation()\\\" [on]=\\\"item\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check>\\n                    </td>\\n                    <td>{{ item.cctv_id }}</td>\\n                    <td>{{ item.cctv_alias }}</td>\\n                    <td>{{ item.master_company_name }}</td>\\n                    <td>{{ item.cctv_area_name }}</td>\\n                    <td>{{ item.cctv_ip }}</td>\\n                    <td>{{ item.cctv_port }}</td>\\n                    <td>{{ item.cctv_channel_no }}</td>\\n                    <td>{{ item.cctv_nvr_id }}</td>\\n                    <td>{{ item.cctv_nvr_password }}</td>\\n                    <td *ngIf=\\\"user.userData.user_role === 'MASTER_HEAD' || user.userData.user_role === 'MASTER_GENERAL' || user.userData.user_type === 'LH'\\\">\\n                      <app-select (change)=\\\"changeUse(item)\\\" (click)=\\\"$event.stopPropagation()\\\" [(ngModel)]=\\\"item.cctv_use_state\\\">\\n                        <app-select-option [value]=\\\"1\\\">Y</app-select-option>\\n                        <app-select-option [value]=\\\"0\\\">N</app-select-option>\\n                      </app-select>\\n                    </td>\\n                    <td *ngIf=\\\"user.userData.user_role === 'SUPER_HEAD'\\\">\\n                      {{ item.cctv_use_state ? 'Y' : 'N' }}\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </app-table>\\n            </app-check-group>\\n\\n            <!-- <app-pager [totalCount]=\\\"res?.rsObj.row_count\\\" [limitNo]=\\\"form.limit_no\\\" (pagerChange)=\\\"get($event)\\\"></app-pager> -->\\n          </ng-container>\\n          <ng-template #tempFail>\\n            <app-card>{{ res.rsMsg }}</app-card>\\n          </ng-template>\\n        </ng-container>\\n      </app-col>\\n    </app-row>\\n  </ng-container>\\n  \\n  <!-- <ng-container *mobileShow>\\n    <ion-header>\\n      <ion-toolbar color=\\\"white\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>공지사항</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n          <app-menu-button></app-menu-button>\\n        </ion-buttons>\\n      </ion-toolbar>\\n      <ion-toolbar color=\\\"white\\\">\\n        <app-input-group>\\n          <app-select-scene name=\\\"project_id\\\" [(ngModel)]=\\\"form.project_id\\\" [readonly]=\\\"true\\\"></app-select-scene>\\n          <app-button (click)=\\\"detailSearch()\\\">상세검색</app-button>\\n        </app-input-group>\\n      </ion-toolbar>\\n    </ion-header>\\n    <ion-content>\\n      <app-card *ngFor=\\\"let item of res?.rsMap\\\" (click)=\\\"edit(item.notice_id)\\\">\\n        <app-row style=\\\"align-items: flex-start;\\\">\\n          <app-col>\\n            <p>{{ item.notice_title }}</p>\\n            <p>{{ item.company_name }}/{{ item.user_name }}</p>\\n            <p>작성일: {{ item.create_date }}</p>\\n          </app-col>\\n        </app-row>\\n        <ion-badge color=\\\"success\\\">{{ item.notice_type }}</ion-badge>\\n      </app-card>\\n  \\n      <ion-infinite-scroll threshold=\\\"100px\\\" id=\\\"infinite-scroll\\\" (ionInfinite)=\\\"getMobile($event)\\\">\\n        <ion-infinite-scroll-content loading-spinner=\\\"dots\\\">\\n        </ion-infinite-scroll-content>\\n      </ion-infinite-scroll>\\n    </ion-content>\\n  </ng-container> -->\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}