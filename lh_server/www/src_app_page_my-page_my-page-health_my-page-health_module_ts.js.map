{"version":3,"sources":["./src/app/page/my-page/my-page-health/my-page-health-routing.module.ts","./src/app/page/my-page/my-page-health/my-page-health.module.ts","./src/app/page/my-page/my-page-health/my-page-health.page.ts","./src/app/page/my-page/my-page-health/my-page-health.page.scss","./src/app/page/my-page/my-page-health/my-page-health.page.html"],"names":[],"mappings":"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","file":"src_app_page_my-page_my-page-health_my-page-health_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyPageHealthPage } from './my-page-health.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyPageHealthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyPageHealthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyPageHealthPageRoutingModule } from './my-page-health-routing.module';\n\nimport { MyPageHealthPage } from './my-page-health.page';\nimport { ComponentModule } from 'src/app/component/component.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    MyPageHealthPageRoutingModule\n  ],\n  declarations: [MyPageHealthPage]\n})\nexport class MyPageHealthPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { fadeInAnimation } from 'src/app/basic/basic.animation';\nimport { ConnectService, Validator } from 'src/app/basic/service/core/connect.service';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\nimport { UserService } from 'src/app/basic/service/core/user.service';\nimport { AlertService } from 'src/app/basic/service/ionic/alert.service';\nimport { LoadingService } from 'src/app/basic/service/ionic/loading.service';\nimport { NavService } from 'src/app/basic/service/ionic/nav.service';\nimport { ToastService } from 'src/app/basic/service/ionic/toast.service';\n\nclass WorkerHealth {\n  use_drugs_state:0|1 = null; //약물복용여부 (false - 없다, 미접종, 미동의 / true - 있다, 접종, 동의)\n  use_drugs_content:string = null; //약물명\n  brain_cure_state:0|1 = null; //심혈관질환 치료여부\n  brain_cure_content:string[] = []; //심혈관질환명 / 없을시 빈배열\n  vomiting_state:0|1 = null; //가슴통증 여부\n  vomiting_content:string = null; //가슴통증 내용\n  pain_head_state:0|1 = null; //두통, 어지러운 증상 여부\n  pain_head_content:string = null; //두통, 어지러운 증상 내용\n  etc_disease_state:0|1 = null; //기타질환 치료여부\n  etc_disease_content:string = null; //기타질환 내용\n  covid_nineteen_state:0|1 = null; //코로나 증상여부\n  covid_nineteen_content:string = null; //코로나 증상내용\n  covid_vaccine_state:0|1 = null; //코로나 백신접종 여부\n  health_terms_state:0|1 = null; //문진표 작성동의 여부\n  create_date:string = '';\n  update_date:string = '';\n}\n@Component({\n  selector: 'app-my-page-health',\n  templateUrl: './my-page-health.page.html',\n  styleUrls: ['./my-page-health.page.scss'],\n  animations: [ fadeInAnimation ]\n})\nexport class MyPageHealthPage implements OnInit {\n\n  editable:boolean = false;\n\n  healthForm = new WorkerHealth();\n  healthValidator = new Validator(new WorkerHealth()).validator;\n\n  constructor(\n    private connect: ConnectService,\n    private _modal: ModalController,\n    private toast: ToastService,\n    private alert: AlertService,\n    private loading: LoadingService,\n    public user: UserService,\n    private nav: NavService,\n    public languagePack: LanguagePackService\n  ) { }\n\n  ngOnInit() {\n    this.get();\n  }\n\n  /**\n   * 데이터 구성 파트\n   */\n  /** 모두 가져오기 */\n  async get() {\n    const loading = await this.loading.present();\n    await Promise.all([\n      this.getHealth()\n    ])\n    loading.dismiss();\n  }\n\n  /** 건강문진정보 가져오기 */\n  private async getHealth() {\n    const res = await this.connect.run('/mypage/health/detail', {}, { parse: ['brain_cure_content'] });\n    if(res.rsCode === 0) {\n      this.healthForm = {\n        ...this.healthForm,\n        ...res.rsObj\n      }\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  /**\n   * 데이터 입력 파트\n   */\n\n  /** 전체 입력 */\n  public async submit() {\n    if(!this.healthValid()) return;\n\n    const loading = await this.loading.present();\n\n    const resAll = await Promise.all([\n      this.healthSubmit()\n    ]);\n\n    await loading.dismiss();\n\n    /** 모든 데이터가 성공적으로 전송되었다면, 모든 반환값이 true임 */\n    if(!resAll.includes(false)) {\n      this.nav.back({ force: true });\n      this.alert.present({\n        message: '회원정보가 변경되었습니다.'\n      });\n    }\n  }\n  /** 건강문진정보 입력 */\n  private async healthSubmit() {\n    const res = await this.connect.run('/mypage/health/update', this.healthForm);\n    if(res.rsCode === 0) {\n      return true;\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n      return false;\n    }\n  }\n\n\n  /**\n   * 데이터 체크\n   */\n  private healthValid() {\n    if(this.healthForm.use_drugs_state == null) this.healthValidator.use_drugs_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.use_drugs_state = { valid: true };\n\n    if(this.healthForm.use_drugs_state === 1\n    && !this.healthForm.use_drugs_content) this.healthValidator.use_drugs_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.use_drugs_content = { valid: true };\n\n    if(this.healthForm.brain_cure_state == null) this.healthValidator.brain_cure_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.brain_cure_state = { valid: true };\n\n    if(this.healthForm.brain_cure_state === 1\n    && !this.healthForm.brain_cure_content.length) this.healthValidator.brain_cure_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.brain_cure_content = { valid: true };\n\n    if(this.healthForm.vomiting_state == null) this.healthValidator.vomiting_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.vomiting_state = { valid: true };\n\n    if(this.healthForm.vomiting_state === 1\n    && !this.healthForm.vomiting_content) this.healthValidator.vomiting_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.vomiting_content = { valid: true };\n\n    if(this.healthForm.pain_head_state == null) this.healthValidator.pain_head_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.pain_head_state = { valid: true };\n\n    if(this.healthForm.pain_head_state === 1\n    && !this.healthForm.pain_head_content) this.healthValidator.pain_head_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.pain_head_content = { valid: true };\n\n    if(this.healthForm.etc_disease_state == null) this.healthValidator.etc_disease_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.etc_disease_state = { valid: true };\n\n    if(this.healthForm.etc_disease_state === 1\n    && !this.healthForm.etc_disease_content) this.healthValidator.etc_disease_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.etc_disease_content = { valid: true };\n\n    if(this.healthForm.covid_nineteen_state == null) this.healthValidator.covid_nineteen_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.covid_nineteen_state = { valid: true };\n\n    if(this.healthForm.covid_nineteen_state === 1\n    && !this.healthForm.covid_nineteen_content) this.healthValidator.covid_nineteen_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.covid_nineteen_content = { valid: true };\n\n    if(this.healthForm.covid_vaccine_state == null) this.healthValidator.covid_vaccine_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.healthValidator.covid_vaccine_state = { valid: true };\n\n    if(this.healthForm.health_terms_state !== 1) this.healthValidator.health_terms_state = { valid: false, message: '항목에 동의해주세요.' };\n    else this.healthValidator.health_terms_state = { valid: true };\n\n    for(let key in this.healthValidator) {\n      if(!this.healthValidator[key]?.valid) return false;\n    }\n    return true;\n  }\n}\n","export default \"app-row {\\n  align-items: flex-start;\\n}\\n\\napp-input-caption + app-input-caption {\\n  margin-top: 0;\\n}\\n\\n.update-date-class {\\n  display: flex;\\n  font-size: var(--font-size-h6);\\n  justify-content: end;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15LXBhZ2UtaGVhbHRoLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUF1QjtBQUMzQjs7QUFDQTtFQUNJLGFBQWE7QUFFakI7O0FBQ0E7RUFDSSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG9CQUFvQjtBQUV4QiIsImZpbGUiOiJteS1wYWdlLWhlYWx0aC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhcHAtcm93IHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cbmFwcC1pbnB1dC1jYXB0aW9uICsgYXBwLWlucHV0LWNhcHRpb24ge1xuICAgIG1hcmdpbi10b3A6IDA7XG59XG5cbi51cGRhdGUtZGF0ZS1jbGFzc3tcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWg2KTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/my-page-type\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ languagePack.getText('건강 문진 작성') }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <app-container size=\\\"small\\\">\\n    <div class=\\\"update-date-class\\\">\\n      <div>{{ languagePack.getText('작성일') }} : {{healthForm.create_date}}</div>\\n      <ng-container *ngIf=\\\"healthForm.update_date\\\">\\n        <div style=\\\"margin: 0 6px;\\\"> / </div>\\n        <div>{{ languagePack.getText('수정') }} : {{healthForm.update_date}}</div>\\n      </ng-container>\\n    </div>\\n    <h4>1. {{ languagePack.getText('현재 복용하고 있는 약물이 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"use_drugs_state\\\" \\n    [color]=\\\"healthValidator.use_drugs_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"healthForm.use_drugs_state\\\" (change)=\\\"healthForm.use_drugs_content = ''\\\" [disabled]=\\\"!editable\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.use_drugs_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.use_drugs_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"healthForm.use_drugs_state\\\"\\n    [color]=\\\"healthValidator.use_drugs_content?.valid === false && 'warning'\\\"\\n    name=\\\"use_drugs_content\\\" [placeholder]=\\\"languagePack.getText('약물명을 입력해주세요.')\\\" \\n    [(ngModel)]=\\\"healthForm.use_drugs_content\\\" [disabled]=\\\"!editable\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.use_drugs_content?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.use_drugs_content.message }}</app-input-caption>\\n    \\n\\n    <h4>2. {{ languagePack.getText('과거나 현재 뇌, 심혈관질환으로 치료를 받았거나 받고 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"brain_cure_state\\\"\\n    [color]=\\\"healthValidator.brain_cure_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"healthForm.brain_cure_state\\\" (change)=\\\"!healthForm.brain_cure_state && healthForm.brain_cure_content = []\\\" [disabled]=\\\"!editable\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.brain_cure_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.brain_cure_state.message }}</app-input-caption>\\n\\n    <div @fadeInAnimation *ngIf=\\\"healthForm.brain_cure_state\\\">\\n       {{ languagePack.getText('해당하는 항목에 체크해주세요') }}\\n      <app-input-template [color]=\\\"healthValidator.brain_cure_content?.valid === false && 'warning'\\\" [disabled]=\\\"!editable\\\">\\n        <app-check-group slot=\\\"input\\\" name=\\\"brain_cure_content\\\" \\n        [(ngModel)]=\\\"healthForm.brain_cure_content\\\">\\n          <app-check on=\\\"뇌졸중\\\">{{ languagePack.getText('뇌졸중') }}</app-check>\\n          <app-check on=\\\"뇌출혈\\\">{{ languagePack.getText('뇌출혈') }}</app-check>\\n          <app-check on=\\\"협심증\\\">{{ languagePack.getText('협심증') }}</app-check>\\n          <app-check on=\\\"심근경색\\\">{{ languagePack.getText('심근경색') }}</app-check>\\n          <app-check on=\\\"간질발작\\\">{{ languagePack.getText('간질발작') }}</app-check>\\n        </app-check-group>\\n      </app-input-template>\\n    </div>\\n    <app-input-caption *ngIf=\\\"healthValidator.brain_cure_content?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.brain_cure_content.message }}</app-input-caption>\\n\\n\\n    <h4>3. {{ languagePack.getText('최근 가슴을 쥐어짜는 통증,오심,구토 증상을 겪은 적이 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"vomiting_state\\\" \\n    [color]=\\\"healthValidator.vomiting_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"healthForm.vomiting_state\\\" (change)=\\\"healthForm.vomiting_content = ''\\\" [disabled]=\\\"!editable\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.vomiting_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.vomiting_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"healthForm.vomiting_state\\\" \\n    [color]=\\\"healthValidator.vomiting_content?.valid === false && 'warning'\\\"\\n    name=\\\"vomiting_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\"\\n    [(ngModel)]=\\\"healthForm.vomiting_content\\\" [disabled]=\\\"!editable\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.vomiting_content?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.vomiting_content.message }}</app-input-caption>\\n\\n\\n    <h4>4. {{ languagePack.getText('최근 갑자기 한쪽 팔, 다리에 힘이 빠지거나 말이 어눌하게 나오거나 두통, 어지러운 증상을 겪은 적이 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"pain_head_state\\\" \\n    [color]=\\\"healthValidator.pain_head_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"healthForm.pain_head_state\\\" (change)=\\\"healthForm.pain_head_content = ''\\\" [disabled]=\\\"!editable\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.pain_head_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.pain_head_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"healthForm.pain_head_content\\\" \\n    [color]=\\\"healthValidator.pain_head_content?.valid === false && 'warning'\\\"\\n    name=\\\"pain_head_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\" \\n    [(ngModel)]=\\\"healthForm.pain_head_content\\\" [disabled]=\\\"!editable\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.pain_head_content?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.pain_head_content.message }}</app-input-caption>\\n\\n\\n    <h4>5. {{ languagePack.getText('현재 기타 질병(당뇨, 간장질환, 폐질환 등) 으로 치료를 받고 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"etc_disease_state\\\" \\n    [color]=\\\"healthValidator.etc_disease_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"healthForm.etc_disease_state\\\" (change)=\\\"healthForm.etc_disease_content = ''\\\" [disabled]=\\\"!editable\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.etc_disease_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.etc_disease_state.message }}</app-input-caption>\\n    <app-input @fadeInAnimation *ngIf=\\\"healthForm.etc_disease_state\\\" \\n    [color]=\\\"healthValidator.etc_disease_content?.valid === false && 'warning'\\\"\\n    name=\\\"etc_disease_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\"\\n    [(ngModel)]=\\\"healthForm.etc_disease_content\\\" [disabled]=\\\"!editable\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.etc_disease_content?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.etc_disease_content.message }}</app-input-caption>\\n\\n    <h4>6. {{ languagePack.getText('본인이 코로나19가 의심되는 아래의 임상 증상이 있습니까? (*주요 임상증상)체온 37.5℃ 이상, 기침, 호흡곤란, 오한, 근육통, 두통, 인후통, 후각미각 소실 또는 폐렴 (단, 코로나19와 관게없이 평소의 기저질환으로 인한 증상인 경우는 제외)') }}\\n    </h4>\\n    <app-radio-input name=\\\"covid_nineteen_state\\\" \\n    [color]=\\\"healthValidator.covid_nineteen_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"healthForm.covid_nineteen_state\\\" (change)=\\\"healthForm.covid_nineteen_content = ''\\\" [disabled]=\\\"!editable\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.covid_nineteen_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.covid_nineteen_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"healthForm.covid_nineteen_state\\\" \\n    [color]=\\\"healthValidator.covid_nineteen_state?.valid === false && 'warning'\\\"\\n    name=\\\"covid_nineteen_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\"\\n    [(ngModel)]=\\\"healthForm.covid_nineteen_content\\\" [disabled]=\\\"!editable\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.covid_nineteen_content?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.covid_nineteen_content.message }}</app-input-caption>\\n\\n\\n    <h4>7. {{ languagePack.getText('코로나 백신 접종을 하셨습니까?') }}</h4>\\n    <app-radio-input name=\\\"covid_vaccine_state\\\" \\n    [color]=\\\"healthValidator.covid_vaccine_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"healthForm.covid_vaccine_state\\\" [disabled]=\\\"!editable\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('미접종') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('접종') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"healthValidator.covid_vaccine_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.covid_vaccine_state.message }}</app-input-caption>\\n\\n\\n    <app-check name=\\\"health_terms_state\\\" [on]=\\\"1\\\" [off]=\\\"0\\\" [(ngModel)]=\\\"healthForm.health_terms_state\\\" [disabled]=\\\"!editable\\\">{{ languagePack.getText('본인은 질병예방과 안전한 작업을 위하여 문진자료를 사업창에 제공하는것에 동의합니다.') }}</app-check>\\n    <app-input-caption *ngIf=\\\"healthValidator.health_terms_state?.valid === false\\\" color=\\\"warning\\\">{{ healthValidator.health_terms_state.message }}</app-input-caption> \\n\\n  </app-container>\\n</ion-content>\\n\\n<!-- 상세보기 footer -->\\n<app-button-footer *ngIf=\\\"!editable; else tempEditFooter\\\">\\n  <app-button name=\\\"button_edit\\\" fill=\\\"translucent\\\" (click)=\\\"editable = true\\\">{{ languagePack.getText('수정') }}</app-button>\\n</app-button-footer>\\n<!-- 수정 footer -->\\n<ng-template #tempEditFooter>\\n  <app-button-footer>\\n    <app-button name=\\\"submit\\\" (click)=\\\"submit()\\\">{{ languagePack.getText('모두 저장') }}</app-button>\\n  </app-button-footer>\\n</ng-template> \";"],"sourceRoot":"webpack:///"}