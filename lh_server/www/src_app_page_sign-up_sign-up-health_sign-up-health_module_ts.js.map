{"version":3,"sources":["./src/app/page/sign-up/sign-up-health/sign-up-health-routing.module.ts","./src/app/page/sign-up/sign-up-health/sign-up-health.module.ts","./src/app/page/sign-up/sign-up-health/sign-up-health.page.ts","./src/app/page/sign-up/sign-up-health/sign-up-health.page.scss","./src/app/page/sign-up/sign-up-health/sign-up-health.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEE;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACF;AAEA;AAEmC;AAEvB;AACY;AACS;IAajE,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAXlC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAe;YACf,sFAAqB;YACrB,yFAA6B;SAC9B;QACD,YAAY,EAAE,CAAC,kEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB2B;AACE;AACO;AACgB;AAClB;AACO;AACjB;AAC+D;IAS7G,gBAAgB,SAAhB,gBAAgB;IAQ3B,YACU,EAA2B,EAC3B,GAAe,EACf,OAAuB,EACxB,YAAiC;QAHhC,OAAE,GAAF,EAAE,CAAyB;QAC3B,QAAG,GAAH,GAAG,CAAY;QACf,YAAO,GAAP,OAAO,CAAgB;QACxB,iBAAY,GAAZ,YAAY,CAAqB;QAT1C,qBAAgB,GAAG,IAAI,sFAAgB,EAAE,CAAC;QAE1C,SAAI,GAAG,IAAI,wFAAkB,EAAE,CAAC;QAChC,cAAS,GAAG,IAAI,iFAAS,CAAC,IAAI,wFAAkB,EAAE,CAAC,CAAC,SAAS,CAAC;IAO1D,CAAC;IAEL,QAAQ;QACN,IAAG,CAAC,IAAI,CAAC,WAAW,EAAE;YAAE,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,kBAAkB,EAAE,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;QAClH,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC;QAEvD,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEY,IAAI;;YACf,IAAG,CAAC,oFAA0B;gBAAE,OAAO;YACvC,IAAG,CAAC,sFAA4B;gBAAE,OAAO;YAEzC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;YACjC,WAAW;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,4FAAsB,EAAE,CAAC;YACzC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAE1B,UAAU;YACV,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3E,CAAC;KAAA;IAEO,WAAW;;QACjB,IAAG,cAAO,CAAC,KAAK,0CAAE,WAAW;gBAC1B,aAAO,CAAC,KAAK,0CAAE,gBAAgB;YAAE,OAAO,IAAI,CAAC;;YAC3C,OAAO,KAAK,CAAC;IACpB,CAAC;IAGM,IAAI;QACT,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IACM,IAAI;QACT,IAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO;QAEzB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,gBAAgB,EAAE;YACzC,KAAK,EAAE;gBACL,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,kBAAkB,EAAE,IAAI,CAAC,IAAI;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;IACO,KAAK;;QACX,IAAG,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YAC7G,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAEtD,IAAG,IAAI,CAAC,IAAI,CAAC,eAAe,KAAK,CAAC;eAC/B,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB;YAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YAC1G,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAExD,IAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YAC/G,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAEvD,IAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,CAAC;eAChC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YACnH,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAEzD,IAAG,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YAC3G,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAErD,IAAG,IAAI,CAAC,IAAI,CAAC,cAAc,KAAK,CAAC;eAC9B,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB;YAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YACxG,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAEvD,IAAG,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YAC7G,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAEtD,IAAG,IAAI,CAAC,IAAI,CAAC,eAAe,KAAK,CAAC;eAC/B,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB;YAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YAC1G,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAExD,IAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YACjH,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAExD,IAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC;eACjC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB;YAAE,IAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YAC9G,IAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAE1D,IAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YACvH,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAE3D,IAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,KAAK,CAAC;eACpC,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB;YAAE,IAAI,CAAC,SAAS,CAAC,sBAAsB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YACpH,IAAI,CAAC,SAAS,CAAC,sBAAsB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAE7D,IAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI;YAAE,IAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;;YACrH,IAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAE1D,IAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,KAAK,CAAC;YAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC;;YAC/G,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAEzD,KAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YAC7B,IAAG,CAAC,WAAI,CAAC,SAAS,CAAC,GAAG,CAAC,0CAAE,KAAK;gBAAE,OAAO,KAAK,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;;YA/HmB,sDAAU;YAIrB,+EAAU;YACV,sFAAc;YAFd,iGAAmB;;AAaf,gBAAgB;IAN5B,yDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,mFAAyC;QAEzC,UAAU,EAAE,CAAE,0EAAe,CAAE;;KAChC,CAAC;GACW,gBAAgB,CA+G5B;AA/G4B;;;;;;;;;;;;;;;;AChB7B,iEAAe,8CAA8C,+HAA+H,E;;;;;;;;;;;;;;;ACA5L,iEAAe,mNAAmN,oCAAoC,mMAAmM,gDAAgD,qPAAqP,8BAA8B,+CAA+C,8BAA8B,sIAAsI,qCAAqC,qZAAqZ,uCAAuC,2CAA2C,+DAA+D,kRAAkR,8BAA8B,+CAA+C,8BAA8B,uIAAuI,sCAAsC,4FAA4F,6CAA6C,+PAA+P,+BAA+B,gDAAgD,+BAA+B,gDAAgD,+BAA+B,iDAAiD,gCAAgC,iDAAiD,gCAAgC,sLAAsL,wCAAwC,uCAAuC,gEAAgE,iPAAiP,8BAA8B,+CAA+C,8BAA8B,qIAAqI,oCAAoC,gZAAgZ,sCAAsC,uCAAuC,0FAA0F,qPAAqP,8BAA8B,+CAA+C,8BAA8B,sIAAsI,qCAAqC,qZAAqZ,uCAAuC,uCAAuC,qEAAqE,6PAA6P,8BAA8B,+CAA+C,8BAA8B,wIAAwI,uCAAuC,8ZAA8Z,yCAAyC,wCAAwC,uKAAuK,+QAA+Q,8BAA8B,+CAA+C,8BAA8B,2IAA2I,0CAA0C,2aAA2a,4CAA4C,uCAAuC,6CAA6C,wNAAwN,+BAA+B,+CAA+C,8BAA8B,0IAA0I,yCAAyC,sIAAsI,0EAA0E,iHAAiH,wCAAwC,iIAAiI,8BAA8B,uEAAuE,8BAA8B,sCAAsC,E","file":"src_app_page_sign-up_sign-up-health_sign-up-health_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignUpHealthPage } from './sign-up-health.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpHealthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignUpHealthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignUpHealthPageRoutingModule } from './sign-up-health-routing.module';\n\nimport { SignUpHealthPage } from './sign-up-health.page';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { SignUpComponentModule } from '../component/sign-up.component.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    SignUpComponentModule,\n    SignUpHealthPageRoutingModule\n  ],\n  declarations: [SignUpHealthPage]\n})\nexport class SignUpHealthPageModule {}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { fadeInAnimation } from 'src/app/basic/basic.animation';\nimport { Validator } from 'src/app/basic/service/core/connect.service';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\nimport { NavService } from 'src/app/basic/service/ionic/nav.service';\nimport { PromiseService } from 'src/app/basic/service/util/promise.service';\nimport { environment } from 'src/environments/environment';\nimport { signUpWorkerInfo, SignUpWorkerHealth, SignUpWorkerHealthMock } from '../sign-up-worker/sign-up-worker.interface';\nimport { SignUpCompanyInfo } from '../sign-up.interface';\n\n@Component({\n  selector: 'app-sign-up-health',\n  templateUrl: './sign-up-health.page.html',\n  styleUrls: ['./sign-up-health.page.scss'],\n  animations: [ fadeInAnimation ]\n})\nexport class SignUpHealthPage implements OnInit {\n\n  companyInfo:SignUpCompanyInfo;\n  signUpWorkerInfo = new signUpWorkerInfo();\n\n  form = new SignUpWorkerHealth();\n  validator = new Validator(new SignUpWorkerHealth()).validator;\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    private nav: NavService,\n    private promise: PromiseService,\n    public languagePack: LanguagePackService\n  ) { }\n\n  ngOnInit() {\n    if(!this.checkParams()) return this.nav.navigateBack('/sign-up-company', { queryParams: { userType: 'WORKER' } });\n    this.companyInfo = history.state.companyInfo;\n    this.signUpWorkerInfo = history.state.signUpWorkerInfo;\n\n    this.test();\n  }\n\n  public async test() {\n    if(!environment.test.core.test) return;\n    if(!environment.test.SignUp.test) return;\n    \n    const el = this.el.nativeElement;\n    // 가짜 정보 입력\n    this.form = new SignUpWorkerHealthMock();\n    await this.promise.wait();\n\n    // 다음 페이지로\n    el.querySelector('[name=button_next]').dispatchEvent(new Event('click'));\n  }\n\n  private checkParams() {\n    if(history.state?.companyInfo\n    && history.state?.signUpWorkerInfo) return true;\n    else return false;\n  }\n\n\n  public prev() {\n    this.nav.back();\n  }\n  public next() {\n    if(!this.valid()) return;\n\n    this.nav.navigateForward('/sign-up-terms', {\n      state: {\n        companyInfo: this.companyInfo,\n        signUpWorkerInfo: this.signUpWorkerInfo,\n        signUpWorkerHealth: this.form\n      }\n    });\n  }\n  private valid() {\n    if(this.form.use_drugs_state == null) this.validator.use_drugs_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.use_drugs_state = { valid: true };\n\n    if(this.form.use_drugs_state === 1\n    && !this.form.use_drugs_content) this.validator.use_drugs_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.use_drugs_content = { valid: true };\n\n    if(this.form.brain_cure_state == null) this.validator.brain_cure_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.brain_cure_state = { valid: true };\n\n    if(this.form.brain_cure_state === 1\n    && !this.form.brain_cure_content.length) this.validator.brain_cure_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.brain_cure_content = { valid: true };\n\n    if(this.form.vomiting_state == null) this.validator.vomiting_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.vomiting_state = { valid: true };\n\n    if(this.form.vomiting_state === 1\n    && !this.form.vomiting_content) this.validator.vomiting_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.vomiting_content = { valid: true };\n\n    if(this.form.pain_head_state == null) this.validator.pain_head_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.pain_head_state = { valid: true };\n\n    if(this.form.pain_head_state === 1\n    && !this.form.pain_head_content) this.validator.pain_head_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.pain_head_content = { valid: true };\n\n    if(this.form.etc_disease_state == null) this.validator.etc_disease_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.etc_disease_state = { valid: true };\n\n    if(this.form.etc_disease_state === 1\n    && !this.form.etc_disease_content) this.validator.etc_disease_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.etc_disease_content = { valid: true };\n\n    if(this.form.covid_nineteen_state == null) this.validator.covid_nineteen_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.covid_nineteen_state = { valid: true };\n\n    if(this.form.covid_nineteen_state === 1\n    && !this.form.covid_nineteen_content) this.validator.covid_nineteen_content = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.covid_nineteen_content = { valid: true };\n\n    if(this.form.covid_vaccine_state == null) this.validator.covid_vaccine_state = { valid: false, message: '해당 항목에 답해주세요.' };\n    else this.validator.covid_vaccine_state = { valid: true };\n\n    if(this.form.health_terms_state !== 1) this.validator.health_terms_state = { valid: false, message: '항목에 동의해주세요.' };\n    else this.validator.health_terms_state = { valid: true };\n\n    for(let key in this.validator) {\n      if(!this.validator[key]?.valid) return false;\n    }\n    return true;\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaWduLXVwLWhlYWx0aC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/sign-up-company?userType=WORKER\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ languagePack.getText('건강 문진 작성') }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n<app-container size=\\\"small\\\">\\n  <app-sign-up-segment step=\\\"step3\\\" type=\\\"WORKER\\\"></app-sign-up-segment>\\n  <form>\\n    <h4>1. {{ languagePack.getText('현재 복용하고 있는 약물이 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"use_drugs_state\\\" \\n    [color]=\\\"validator.use_drugs_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.use_drugs_state\\\" (change)=\\\"form.use_drugs_content = ''\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"validator.use_drugs_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.use_drugs_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"form.use_drugs_state\\\"\\n    [color]=\\\"validator.use_drugs_content?.valid === false && 'warning'\\\"\\n    name=\\\"use_drugs_content\\\" [placeholder]=\\\"languagePack.getText('약물명을 입력해주세요.')\\\"\\n    [(ngModel)]=\\\"form.use_drugs_content\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.use_drugs_content?.valid === false\\\" color=\\\"warning\\\">{{ validator.use_drugs_content.message }}</app-input-caption>\\n    \\n\\n    <h4>2. {{ languagePack.getText('과거나 현재 뇌, 심혈관질환으로 치료를 받았거나 받고 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"brain_cure_state\\\"\\n    [color]=\\\"validator.brain_cure_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.brain_cure_state\\\" (change)=\\\"!form.brain_cure_state && form.brain_cure_content = []\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"validator.brain_cure_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.brain_cure_state.message }}</app-input-caption>\\n\\n    <div @fadeInAnimation *ngIf=\\\"form.brain_cure_state\\\">\\n      {{ languagePack.getText('* 해당하는 항목에 체크해주세요') }}\\n      <app-input-template [color]=\\\"validator.brain_cure_content?.valid === false && 'warning'\\\">\\n        <app-check-group slot=\\\"input\\\" name=\\\"brain_cure_content\\\" \\n        [(ngModel)]=\\\"form.brain_cure_content\\\">\\n          <app-check on=\\\"뇌졸중\\\">{{ languagePack.getText('뇌졸중') }}</app-check>\\n          <app-check on=\\\"뇌출혈\\\">{{ languagePack.getText('뇌출혈') }}</app-check>\\n          <app-check on=\\\"협심증\\\">{{ languagePack.getText('협심증') }}</app-check>\\n          <app-check on=\\\"심근경색\\\">{{ languagePack.getText('심근경색') }}</app-check>\\n          <app-check on=\\\"간질발작\\\">{{ languagePack.getText('간질발작') }}</app-check>\\n        </app-check-group>\\n      </app-input-template>\\n    </div>\\n    <app-input-caption *ngIf=\\\"validator.brain_cure_content?.valid === false\\\" color=\\\"warning\\\">{{ validator.brain_cure_content.message }}</app-input-caption>\\n\\n\\n    <h4>3. {{ languagePack.getText('최근 가슴을 쥐어짜는 통증,오심,구토 증상을 겪은 적이 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"vomiting_state\\\" \\n    [color]=\\\"validator.vomiting_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.vomiting_state\\\" (change)=\\\"form.vomiting_content = ''\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"validator.vomiting_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.vomiting_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"form.vomiting_state\\\" \\n    [color]=\\\"validator.vomiting_content?.valid === false && 'warning'\\\"\\n    name=\\\"vomiting_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\" \\n    [(ngModel)]=\\\"form.vomiting_content\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.vomiting_content?.valid === false\\\" color=\\\"warning\\\">{{ validator.vomiting_content.message }}</app-input-caption>\\n\\n\\n    <h4>4. {{ languagePack.getText('최근 갑자기 한쪽 팔, 다리에 힘이 빠지거나 말이 어눌하게 나오거나 두통, 어지러운 증상을 겪은 적이 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"pain_head_state\\\" \\n    [color]=\\\"validator.pain_head_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.pain_head_state\\\" (change)=\\\"form.pain_head_content = ''\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"validator.pain_head_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.pain_head_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"form.pain_head_state\\\" \\n    [color]=\\\"validator.pain_head_content?.valid === false && 'warning'\\\"\\n    name=\\\"pain_head_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\" \\n    [(ngModel)]=\\\"form.pain_head_content\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.pain_head_content?.valid === false\\\" color=\\\"warning\\\">{{ validator.pain_head_content.message }}</app-input-caption>\\n\\n\\n    <h4>5. {{ languagePack.getText('현재 기타 질병(당뇨, 간장질환, 폐질환 등) 으로 치료를 받고 있습니까?') }}</h4>\\n    <app-radio-input name=\\\"etc_disease_state\\\" \\n    [color]=\\\"validator.etc_disease_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.etc_disease_state\\\" (change)=\\\"form.etc_disease_content = ''\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"validator.etc_disease_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.etc_disease_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"form.etc_disease_state\\\" \\n    [color]=\\\"validator.etc_disease_content?.valid === false && 'warning'\\\"\\n    name=\\\"etc_disease_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\"\\n    [(ngModel)]=\\\"form.etc_disease_content\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.etc_disease_content?.valid === false\\\" color=\\\"warning\\\">{{ validator.etc_disease_content.message }}</app-input-caption>\\n\\n\\n    <h4> 6. {{ languagePack.getText('본인이 코로나19가 의심되는 아래의 임상 증상이 있습니까? (*주요 임상증상)체온 37.5℃ 이상, 기침, 호흡곤란, 오한, 근육통, 두통, 인후통, 후각미각 소실 또는 폐렴 (단, 코로나19와 관게없이 평소의 기저질환으로 인한 증상인 경우는 제외)') }}\\n    </h4>\\n    <app-radio-input name=\\\"covid_nineteen_state\\\" \\n    [color]=\\\"validator.covid_nineteen_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.covid_nineteen_state\\\" (change)=\\\"form.covid_nineteen_content = ''\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('없다') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('있다') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"validator.covid_nineteen_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.covid_nineteen_state.message }}</app-input-caption>\\n\\n    <app-input @fadeInAnimation *ngIf=\\\"form.covid_nineteen_state\\\" \\n    [color]=\\\"validator.covid_nineteen_state?.valid === false && 'warning'\\\"\\n    name=\\\"covid_nineteen_content\\\" [placeholder]=\\\"languagePack.getText('증상을 적어주세요.')\\\"\\n    [(ngModel)]=\\\"form.covid_nineteen_content\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.covid_nineteen_content?.valid === false\\\" color=\\\"warning\\\">{{ validator.covid_nineteen_content.message }}</app-input-caption>\\n\\n\\n    <h4>7. {{ languagePack.getText('코로나 백신 접종을 하셨습니까?') }}</h4>\\n    <app-radio-input name=\\\"covid_vaccine_state\\\" \\n    [color]=\\\"validator.covid_vaccine_state?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.covid_vaccine_state\\\">\\n      <app-radio [value]=\\\"0\\\">{{ languagePack.getText('미접종') }}</app-radio>\\n      <app-radio [value]=\\\"1\\\">{{ languagePack.getText('접종') }}</app-radio>\\n    </app-radio-input>\\n    <app-input-caption *ngIf=\\\"validator.covid_vaccine_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.covid_vaccine_state.message }}</app-input-caption>\\n\\n\\n    <app-check name=\\\"health_terms_state\\\" [on]=\\\"1\\\" [off]=\\\"0\\\" [(ngModel)]=\\\"form.health_terms_state\\\">{{ languagePack.getText('본인은 질병예방과 안전한 작업을 위하여 문진자료를 사업창에 제공하는것에 동의합니다.') }}</app-check>\\n    <app-input-caption *ngIf=\\\"validator.health_terms_state?.valid === false\\\" color=\\\"warning\\\">{{ validator.health_terms_state.message }}</app-input-caption>\\n    \\n  </form>\\n</app-container>\\n</ion-content>\\n<app-button-footer>\\n  <app-button (click)=\\\"prev()\\\">{{ languagePack.getText('이전') }}</app-button>\\n  <app-button name=\\\"button_next\\\" (click)=\\\"next()\\\">{{ languagePack.getText('다음') }}</app-button>\\n</app-button-footer>\\n\";"],"sourceRoot":"webpack:///"}