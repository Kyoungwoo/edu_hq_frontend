{"version":3,"sources":["./src/app/page/equipment-management/smart-equipment/heavy-device-list/heavy-device-list-routing.module.ts","./src/app/page/equipment-management/smart-equipment/heavy-device-list/heavy-device-list.module.ts","./src/app/page/equipment-management/smart-equipment/heavy-device-list/heavy-device-list.page.ts","./src/app/page/equipment-management/smart-equipment/heavy-device-list/heavy-device-list.page.scss","./src/app/page/equipment-management/smart-equipment/heavy-device-list/heavy-device-list.page.html"],"names":[],"mappings":"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","file":"src_app_page_equipment-management_smart-equipment_heavy-device-list_heavy-device-list_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HeavyDeviceListPage } from './heavy-device-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HeavyDeviceListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HeavyDeviceListPageRoutingModule {}\n","import { HeavyQrViewPageModule } from './../heavy-qr-view/heavy-qr-view.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HeavyDeviceListPageRoutingModule } from './heavy-device-list-routing.module';\n\nimport { HeavyDeviceListPage } from './heavy-device-list.page';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { BasicComponentModule } from 'src/app/basic/component/basic.component.module';\nimport { HeavyDeviceDetailSearchPageModule } from '../heavy-device-detail-search/heavy-device-detail-search.module';\nimport { HeavyDeviceAddPageModule } from '../heavy-device-add/heavy-device-add.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    BasicComponentModule,\n    HeavyDeviceListPageRoutingModule,\n    HeavyDeviceDetailSearchPageModule,\n    HeavyDeviceAddPageModule,\n    HeavyQrViewPageModule\n  ],\n  declarations: [HeavyDeviceListPage]\n})\nexport class HeavyDeviceListPageModule {}\n","import { HeavyQrViewPage } from './../heavy-qr-view/heavy-qr-view.page';\nimport { LoadingService } from './../../../../basic/service/ionic/loading.service';\nimport { AlertService } from './../../../../basic/service/ionic/alert.service';\nimport { UserService } from './../../../../basic/service/core/user.service';\nimport { DateService } from './../../../../basic/service/util/date.service';\nimport { ToastService } from './../../../../basic/service/ionic/toast.service';\nimport { ConnectResult, ConnectService } from './../../../../basic/service/core/connect.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { HeavyDeviceAddPage } from '../heavy-device-add/heavy-device-add.page';\nimport { HeavyDeviceDetailSearchPage } from '../heavy-device-detail-search/heavy-device-detail-search.page';\n\nclass SmartInfo {\n  partner_company_name:string ;\n  create_date:string;\n  create_user_id:number;\n  ctgo_machine_serial_id:number;\n  ctgo_machine_serial_name:string;\n  ctgo_machinery_id:number;\n  ctgo_machinery_name:string;\n  device_id:number;\n  machinery_id:number;\n  machinery_regist_no:string;\n  master_company_id:number;\n  master_company_name:string;\n  partner_company_id:number;\n  project_id:number;\n  project_name:string;\n  return_date:string;\n  return_state:number;\n  serial_id:number;\n  serial_no:string;\n  serial_type:string;\n  serial_use_state:number;\n  update_date:string;\n  update_user_id:number;\n  index:number;\n  row_count:number;\n  rental_price:string;\n  rental_start_date:string;\n  rental_end_date:string;\n  rental_company_name:string;\n}\n\nclass SmartInfoInsertItem {\n  // area_bottom_id: number = 0;\n  // area_middle_id: number = 0;\n  // area_risk_id: number = 0;\n  // area_top_id: number = 0;\n  // assign_user_id: number = 0;\n  partner_company_name:string ;\n  master_company_name:string;\n  machinery_regist_no:string;\n  ctgo_machine_serial_id: number = 0;\n  machinery_id: number = 0;\n  serial_id: number = 0;\n  serial_use_state: number = 0;\n  ctgo_machinery_name: string = '';\n  // assign_user_id: number = 0;\n  // assign_user_name:string = '';\n  serial_no:string = '';\n}\n\nclass SmartCtgo {\n  ctgo_machine_serial_name: string;\n  ctgo_machine_serial_id: number;\n}\n\n@Component({\n  selector: 'app-heavy-device-list',\n  templateUrl: './heavy-device-list.page.html',\n  styleUrls: ['./heavy-device-list.page.scss'],\n})\nexport class HeavyDeviceListPage implements OnInit {\n  /** @param allState - 원청사와 업체를 전체를 검색할수 있는지 여부 */\n  allState:boolean = (this.user.userData.user_type == 'LH' || this.user.userData.user_type == 'SUPER') ? true : false;\n  \n  /** @param serial_type - 등록 타입입니다. ('개인' | '중장비' | '위험지역') */\n  serial_type: '개인' | '중장비' | '위험지역' = '중장비';\n\n  /** @param update_state - 현재 업데이트중인지 여부 */\n  update_state = false;\n\n  /** @param list_state - '전체' or '내 장비' */\n  list_state = '전체';\n\n  /** @param update_state - 현재 업데이트중인지 여부 */\n  // method_type = '';\n\n  form = {\n    ctgo_machine_serial_id: 0,\n    company_id: (this.user.userData.user_type == 'LH' || this.user.userData.user_type == 'SUPER') ? 0 : this.user.userData.belong_data.company_id,\n    project_id: this.user.userData.belong_data.project_id,\n    search_text: '',\n    start_date: this.date.today({ year: -3 }),\n    end_date: this.date.today(),\n    serial_use_state: '전체'\n  };\n\n  /** @param res_original - 원본 데이터(비교용) */\n  res_original:SmartInfo[] = [];\n\n  /** @param res - 서버에서 받아온 등록 NO 리스트 */\n  res:ConnectResult<SmartInfo>;\n\n  /** @param res_insert - 추가할 리스트 */\n  res_insert:SmartInfoInsertItem[] = [];\n\n  /** @param res_my - 서버에서 받아온 나의 등록 NO 리스트 */\n  res_my:ConnectResult<SmartInfo>;\n\n  /** @param searial_ctgo_list - 스마트장비 카테고리 */\n  smart_ctgo_list:SmartCtgo[] = [];\n\n  /** @param selectedList - 체크박스로 선택된 목록 */\n  selectedList = [];\n\n  constructor(\n    private modal: ModalController,\n    private toast: ToastService,\n    private connect: ConnectService,\n    private date: DateService,\n    public user: UserService,\n    private alert: AlertService,\n    private loading: LoadingService\n  ) { }\n\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.get();\n    }, 300);\n  }\n\n  async get(){\n    await this.getSmartCtgo();\n    await this.getList();\n  }\n  \n  /**\n   * @function getList(): 중장비 디바이스 목록 가져오기\n   */\n   async getList() {\n    let method = await this.TransMethodType();\n    await this.resetState();\n    const res = await this.connect.run(method, this.form);\n    if(res.rsCode === 0 ) {\n      \n      this.res = {\n        ...this.res,\n        ...res\n      };\n      this.res_original = JSON.parse(JSON.stringify(res.rsMap));\n      this.res.rsMap.map((item, i) => {item.index = res.rsObj.row_count -i;});\n    }\n    else if (res.rsCode === 1008) {\n      this.res = null;\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  /**\n   * @function resetState(): 선택리스트, 추가리스트, 업데이트 실행여부 등 스테이터스 초기화\n   */\n  resetState(){\n    this.selectedList = [];\n    this.res_insert = [];\n    this.update_state = false;\n    console.log(\"update state - \", this.update_state);\n  }\n\n  /**\n   * @function TransMethodType(): searial_type에 따라서 메서드 URL을 반환해주는 메서드\n   */\n  TransMethodType(){\n    let method = '';\n    switch(this.serial_type){\n      case '개인':\n        method = '/device/user/list';\n        break;\n      case '중장비':\n        method = '/device/machine/list';\n        break;\n      case '위험지역':\n        method = '/device/risk/list';\n        break;\n    }\n    return method;\n  }\n\n  /**\n   * @function getSmartCtgo(): 스마트장비 카테고리 목록 가져오기\n   */\n   async getSmartCtgo() {\n    const res = await this.connect.run('/category/serial/machine/get', { serial_type: this.serial_type });\n    if(res.rsCode === 0 ) {\n      this.smart_ctgo_list = res.rsMap;\n      this.form.ctgo_machine_serial_id = 0;\n    }\n    else if (res.rsCode === 1008) {\n      this.res = null;\n    }\n    else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n  }\n\n  /**\n   * @function addButton(): \"추가\" 버튼 클릭시 목록에 ITEM ROW가 추가됩니다\n   */\n   addButton(){\n     let add_item = new SmartInfoInsertItem();\n     if(this.user.userData.user_role === 'PARTNER_HEAD' || this.user.userData.user_role === 'PARTNER_GENERAL'){\n       add_item.partner_company_name = this.user.userData.belong_data.company_name;\n     } else {\n      add_item.master_company_name = this.user.userData.belong_data.company_name;\n      add_item.partner_company_name = this.user.userData.belong_data.company_name;\n     }\n     this.res_insert.push(add_item);\n   }\n\n  /**\n   * @function SmartDelete(): 선택목록 삭제하기 메서드\n   */\n  async SmartDelete() {\n    const alert = await this.alert.present({\n      message: '삭제 하시겠습니까?',\n      buttons: [\n        { text: '아니요' },\n        {\n          text: '예',\n          handler: async () => {\n            let insert_item = [];\n            let update_item = [];\n\n            this.selectedList.map((item) => {\n              if(!item.device_id) insert_item.push(item);\n              if(item.device_id) update_item.push(item.device_id);\n            });\n\n            // insert item이 있으면 삭제\n            if(insert_item.length){\n              insert_item.map((item) => {if(this.res_insert.indexOf(item) != -1) this.res_insert.splice(this.res_insert.indexOf(item),1);});\n            }\n\n            // update item이 있으면 삭제\n            if(update_item.length){\n              const res = await this.connect.run('/device/delete', {\n                device_ids : update_item\n              });\n              if (res.rsCode === 0) {\n                this.getList();\n              } else {\n                this.toast.present({ color: 'warning', message: res.rsMsg });\n              }\n            }\n          }\n        }\n      ]\n    });\n  }\n\n  /**\n   * @function SmartSave(): \"저장\" 버튼을 클릭하면 실행되는 메서드\n   */\n   async SmartSave() {\n    const alert = await this.alert.present({\n      message: '저장 하시겠습니까?',\n      buttons: [\n        { text: '아니요' },\n        {\n          text: '예',\n          handler: async () => {\n            let case_1 = false; // 장비구분을 하나라도 선택 안했을때\n            let case_2 = false; // serial_id를 하나라도 선택 안했을때\n            let case_3 = false; // 성명을 하나라도 선택 안했을때\n\n            let insert_promise = null;\n            let update_promise = null;\n\n            // 추가한 리스트 인서트\n            let loadingCus = await this.loading.present();\n            if(this.res_insert.length){\n              this.res_insert.map((item, index) => {\n                if(!item.ctgo_machine_serial_id) case_1 = true;\n                if(!item.serial_id) case_2 = true;\n                if(!item.machinery_id) case_3 = true;\n              });\n\n              if(case_1){\n                await loadingCus.dismiss();\n                return this.toast.present({ color: 'warning', message: '장비구분을 선택해주세요.' });\n              }\n              if(case_2){\n                await loadingCus.dismiss();\n                return this.toast.present({ color: 'warning', message: '등록 NO를 선택해주세요.' });\n              }\n              if(case_3){\n                await loadingCus.dismiss();\n                return this.toast.present({ color: 'warning', message: '장비구분을 선택해주세요.' });\n              }\n              console.log(this.res_insert);\n              // 예외처리 후 하나씩 리스트에 추가해준다. - 모든 api가 호출될때까지 기다린다\n              insert_promise = await Promise.all(this.res_insert.map((item) => { return this.SmartSaveMethod(item, 'insert')}));\n            }\n\n            // 수정된 아이템 찾기\n            let changeed_itemIndex = [];\n            if(this.res){\n              console.log(this.res);\n              for(let i = 0; i < this.res.rsMap.length; i++){\n                if(\n                  this.res.rsMap[i].ctgo_machine_serial_id !== this.res_original[i].ctgo_machine_serial_id ||\n                  this.res.rsMap[i].serial_id !== this.res_original[i].serial_id ||\n                  this.res.rsMap[i].machinery_id !== this.res_original[i].machinery_id ||\n                  this.res.rsMap[i].serial_use_state !== this.res_original[i].serial_use_state\n                  ) changeed_itemIndex.push(this.res.rsMap[i]);\n              }\n            }\n\n            // 한개라도 바뀐 아이템이 있으면 수정 실행\n            if(changeed_itemIndex.length){\n              // 수정된 아이템들 업데이트하기 - 모든 api를 호출할때까지 기다린다\n              update_promise = await Promise.all(changeed_itemIndex.map((item) => { return this.SmartSaveMethod(item, 'update')}));\n            }\n\n            const all_promise = Promise.all([\n              insert_promise,\n              update_promise\n            ]);\n            \n            await all_promise.then(() => {\n              if(changeed_itemIndex.length || this.res_insert.length) this.getList();\n              loadingCus.dismiss();\n            });\n          }\n        }\n      ]\n    });\n  }\n\n  /**\n   * @function SeariaSaveMethod(): Promise가 적용된 insert/update api 호출메서드 입니다.\n   * @param item - insert/update 아이템\n   * @param type - 메서드 타입('insert' | 'update')\n   * @returns resolve(true)\n   */\n  async SmartSaveMethod(item, type: 'insert' | 'update'){\n    return new Promise(async(resolve, reject) => {\n      const res = await this.connect.run('/device/'+type, item);\n      if (res.rsCode === 0) {\n        resolve(true);\n      } else {\n        this.toast.present({ color: 'warning', message: res.rsMsg });\n        resolve(true);\n      }\n    });\n  }\n\n  /**\n   * @function openDetailSearch(): 상세검색필터 모달\n   */\n  public async openDetailSearch() {\n    const modal = await this.modal.create({\n      component: HeavyDeviceDetailSearchPage,\n      componentProps: {\n        form: this.form,\n        smart_ctgo_list: this.smart_ctgo_list\n      }\n    })\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    if(data){\n      this.form = data.form;\n      this.get();\n    }\n  }\n\n  /**\n   * @function edit(): 등록 모달\n   */\n  async edit() {\n    const modal = await this.modal.create({\n      component:HeavyDeviceAddPage,\n      componentProps: {\n        form: this.form,\n        item: new SmartInfoInsertItem(),\n        list: this.res_original,\n        ctgo: this.smart_ctgo_list,\n        serial_type: this.serial_type\n      }\n    });\n    modal.present();\n    const { data } = await modal.onDidDismiss();\n    // this.SmartSaveMethod(<SmartInfo>data.item, data.type);\n    if(data) this.getList();\n  }\n\n  async openModal_QR(item){\n    const modal = await this.modal.create({\n      component: HeavyQrViewPage,\n      cssClass: 'danger-qr-view-modal',\n      componentProps: {\n        item: item\n      }\n    });\n    modal.present();\n  }\n\n  /**\n   * @function btnPromise(): 권한에 따른 버튼활성화 메서드\n   * @param type - 버튼의 type\n   * @param user_id - 체크박스가 있는 목록 해당 아이템을 등록한 사람의 user_id\n   * @returns true or false\n   */\n   btnPromise(type, user_id = null){\n    let state = false;\n    switch(type){\n      case 'insert':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n      case 'update':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n      case 'delete':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n      case 'delete_check':\n        if(this.user.userData.user_role == 'LH_HEAD' || this.user.userData.user_type == 'COMPANY') state = true;\n        break;\n    }\n    return state;\n  }\n}\n","export default \".center-class {\\n  text-align: center;\\n}\\n\\ntd {\\n  vertical-align: middle !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYXZ5LWRldmljZS1saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtFQUNJLGlDQUFnQztBQUNwQyIsImZpbGUiOiJoZWF2eS1kZXZpY2UtbGlzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyLWNsYXNze1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGR7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZSFpbXBvcnRhbnQ7XG59Il19 */\";","export default \"<!-- pc -->\\n<ng-container *mobileHidden>\\n  <app-header-admin></app-header-admin>\\n  <ion-content>\\n    <app-row style=\\\"align-items: flex-start;\\\">\\n      <app-col size=\\\"280px\\\">\\n        <app-table type=\\\"card\\\">\\n          <ion-toolbar slot=\\\"top\\\" color=\\\"white\\\">\\n            <app-row style=\\\"justify-content: space-between;\\\">\\n              <app-col size=\\\"auto\\\"><h5>필터</h5></app-col>\\n              <app-col size=\\\"auto\\\"><app-button fill=\\\"translucent\\\" style=\\\"width: 100px;\\\" (click)=\\\"getList()\\\">검색</app-button></app-col>\\n            </app-row>\\n          </ion-toolbar>\\n          <tbody>\\n            <tr>\\n              <td>\\n                <app-select-scene name=\\\"project_id\\\" [(ngModel)]=\\\"form.project_id\\\"></app-select-scene>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-select-contractor [project_id]=\\\"form.project_id\\\" [(ngModel)]=\\\"form.company_id\\\"></app-select-contractor>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-select label=\\\"스마트 장비\\\" [(ngModel)]=\\\"form.ctgo_machine_serial_id\\\">\\n                  <app-select-option [value]=\\\"0\\\">전체</app-select-option>\\n                  <app-select-option *ngFor=\\\"let item of smart_ctgo_list\\\" [value]=\\\"item.ctgo_machine_serial_id\\\">{{ item.ctgo_machine_serial_name }}</app-select-option>\\n                </app-select>\\n              </td> \\n            </tr>\\n            <tr>\\n              <td>\\n                <app-select label=\\\"사용여부\\\" [(ngModel)]=\\\"form.serial_use_state\\\">\\n                  <app-select-option value=\\\"전체\\\">전체</app-select-option>\\n                  <app-select-option value=\\\"Y\\\">사용중</app-select-option>\\n                  <app-select-option value=\\\"N\\\">미사용</app-select-option>\\n                </app-select>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-input-group label=\\\"배정일\\\">\\n                  <app-calendar [(ngModel)]=\\\"form.start_date\\\" [max]=\\\"form.end_date\\\"></app-calendar>\\n                  ~\\n                  <app-calendar [(ngModel)]=\\\"form.end_date\\\" [min]=\\\"form.start_date\\\"></app-calendar>\\n                </app-input-group>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <app-input label=\\\"검색어\\\" placeholder=\\\"검색어를 입력해 주세요.\\\" [(ngModel)]=\\\"form.search_text\\\"></app-input>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </app-table>\\n      </app-col>\\n      <app-col>\\n        <ion-toolbar color=\\\"white\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n            <app-button *ngIf=\\\"btnPromise('insert')\\\" fill=\\\"translucent\\\" (click)=\\\"addButton()\\\">추가</app-button>\\n            <app-button *ngIf=\\\"btnPromise('update')\\\" [disabled]=\\\"update_state\\\" fill=\\\"translucent\\\" (click)=\\\"update_state = true\\\">수정</app-button>\\n            <app-button *ngIf=\\\"btnPromise('delete')\\\" fill=\\\"translucent\\\" color=\\\"danger\\\" (click)=\\\"SmartDelete()\\\">삭제</app-button>\\n            <app-button *ngIf=\\\"btnPromise('update')\\\" [disabled]=\\\"!update_state && !res_insert.length\\\" fill=\\\"translucent\\\" (click)=\\\"SmartSave()\\\">저장</app-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n        <ion-toolbar color=\\\"white\\\">\\n          <h5>장비 목록 (총 {{res?.rsObj?.row_count || 0 }}건)</h5>\\n        </ion-toolbar>\\n        <app-check-group [(ngModel)]=\\\"selectedList\\\">\\n          <app-table>\\n            <thead>\\n              <tr>\\n                <th *ngIf=\\\"btnPromise('delete_check')\\\" style=\\\"width: 40px;\\\"><app-check type=\\\"all\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check></th>\\n                <th>스마트 장비</th>\\n                <th>관리번호</th>\\n                <!-- <th>등록번호</th> -->\\n                <!-- <th>원청사명</th> -->\\n                <th>업체명</th>\\n                <th>건설기계</th>\\n                <!-- <th>QR코드</th> -->\\n                <th>배정일시</th>\\n                <th>사용여부</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of res_insert\\\">\\n                <td *ngIf=\\\"btnPromise('delete_check')\\\" style=\\\"width: 40px;\\\"><app-check [on]=\\\"item\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check></td>\\n                <td>\\n                  <app-select label=\\\"\\\" [(ngModel)]=\\\"item.ctgo_machine_serial_id\\\">\\n                    <app-select-option *ngFor=\\\"let ctgo of smart_ctgo_list\\\" [value]=\\\"ctgo.ctgo_machine_serial_id\\\">{{ ctgo.ctgo_machine_serial_name }}</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td>\\n                  <app-select-serial-number [ctgo_machine_serial_id]=\\\"item.ctgo_machine_serial_id\\\" [project_id]=\\\"form.project_id\\\" [master_company_id]=\\\"form.company_id\\\" [text]=\\\"item.serial_no\\\" [(ngModel)]=\\\"item.serial_id\\\"></app-select-serial-number>\\n                </td>\\n\\n                <!-- <td [class.center-class]=\\\"!item.machinery_regist_no\\\">{{ item.machinery_regist_no ? item.machinery_regist_no : ' - ' }}</td> -->\\n                <!-- <td [class.center-class]=\\\"!item.master_company_name\\\">{{ item.master_company_name ? item.master_company_name : ' - ' }}</td> -->\\n                <td [class.center-class]=\\\"!item.partner_company_name\\\">{{ item.partner_company_name ? item.partner_company_name : ' - ' }}</td>\\n                <td>\\n                  <app-select-heavy [project_id]=\\\"form.project_id\\\" [master_company_id]=\\\"form.company_id\\\" [text]=\\\"item\\\" [(ngModel)]=\\\"item.machinery_id\\\" label=\\\"\\\"></app-select-heavy>\\n                </td>\\n                <!-- <td> - </td> -->\\n                <td class=\\\"center-class\\\"> - </td>\\n                <td>\\n                  <app-select [(ngModel)]=\\\"item.serial_use_state\\\">\\n                    <app-select-option [value]=\\\"1\\\">Y</app-select-option>\\n                    <app-select-option [value]=\\\"0\\\">N</app-select-option>\\n                  </app-select>\\n                </td>\\n              </tr>\\n              \\n              <tr *ngFor=\\\"let item of res?.rsMap\\\">\\n                <td style=\\\"width: 40px;\\\"><app-check [on]=\\\"item\\\" color=\\\"white\\\" size=\\\"small\\\" name=\\\"check\\\"></app-check></td>\\n                <td>\\n                  <app-select label=\\\"\\\" [disabled]=\\\"!update_state\\\" [(ngModel)]=\\\"item.ctgo_machine_serial_id\\\">\\n                    <app-select-option *ngFor=\\\"let ctgo of smart_ctgo_list\\\" [value]=\\\"ctgo.ctgo_machine_serial_id\\\">{{ ctgo.ctgo_machine_serial_name }}</app-select-option>\\n                  </app-select>\\n                </td>\\n                <td [class.center-class]=\\\"!item.serial_id\\\">\\n                  <app-select-serial-number [ctgo_machine_serial_id]=\\\"item.ctgo_machine_serial_id\\\" *ngIf=\\\"item.serial_id || update_state\\\" [disabled]=\\\"!update_state\\\" [project_id]=\\\"form.project_id\\\" [master_company_id]=\\\"form.company_id\\\" [text]=\\\"item.serial_no\\\" [(ngModel)]=\\\"item.serial_id\\\"></app-select-serial-number>\\n                  {{ (item.serial_id || (!item.serial_id && update_state)) ? '' : ' - ' }}\\n                </td>\\n\\n                <!-- <td [class.center-class]=\\\"!item.machinery_regist_no\\\">{{ item.machinery_regist_no ? item.machinery_regist_no : ' - ' }}</td> -->\\n                <!-- <td [class.center-class]=\\\"!item.master_company_name\\\">{{ item.master_company_name ? item.master_company_name : ' - ' }}</td> -->\\n                <td [class.center-class]=\\\"!item.partner_company_name\\\">{{ item.partner_company_name ? item.partner_company_name : ' - ' }}</td>\\n                <td [class.center-class]=\\\"!item.machinery_id\\\">\\n                  <app-select-heavy *ngIf=\\\"item.machinery_id || update_state\\\" [disabled]=\\\"!update_state\\\" [project_id]=\\\"form.project_id\\\" [master_company_id]=\\\"form.company_id\\\" [text]=\\\"item\\\" [(ngModel)]=\\\"item.machinery_id\\\" label=\\\"\\\"></app-select-heavy>\\n                  {{ (item.machinery_id || (!item.machinery_id && update_state)) ? '' : ' - ' }}\\n                </td>\\n                <!-- <td class=\\\"center-class\\\">\\n                  <app-button size=\\\"small\\\" fill=\\\"clear\\\" style=\\\"width:100%;\\\" (click)=\\\"openModal_QR(item)\\\">\\n                    <app-img name=\\\"search\\\"></app-img>\\n                  </app-button>\\n                </td> -->\\n                <td [class.center-class]=\\\"!item.create_date\\\">{{ item.create_date ? item.create_date : ' - ' }}</td>\\n                <td>\\n                  <app-select [(ngModel)]=\\\"item.serial_use_state\\\" [disabled]=\\\"!update_state\\\">\\n                    <app-select-option [value]=\\\"1\\\">Y</app-select-option>\\n                    <app-select-option [value]=\\\"0\\\">N</app-select-option>\\n                  </app-select>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </app-table>\\n        </app-check-group>\\n      </app-col>\\n    </app-row> \\n  </ion-content>\\n</ng-container>\\n\\n  <!-- 모바일 -->\\n  <ng-container *mobileShow>\\n  <ion-header>\\n    <ion-toolbar color=\\\"white\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>중장비 디바이스</ion-title>\\n      <ion-buttons slot=\\\"end\\\">\\n        <app-menu-button></app-menu-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n    <ion-toolbar color=\\\"white\\\">\\n      <app-input-group>\\n        <app-select-scene [disabled]=\\\"true\\\" name=\\\"project_id\\\" [(ngModel)]=\\\"form.project_id\\\"></app-select-scene>\\n        <app-button (click)=\\\"openDetailSearch()\\\">상세검색</app-button>\\n      </app-input-group>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content>\\n    <ng-container>\\n      <app-card *ngFor=\\\"let item of res?.rsMap\\\">\\n        <app-row style=\\\"align-items: flex-start;\\\">\\n          <app-col>\\n            <p>{{ item.partner_company_name }}/{{ item.ctgo_machinery_name }}/{{ item.machinery_regist_no }}</p>\\n            <p>{{ item.serial_no }}/{{ item.create_date }}</p>\\n          </app-col>\\n          <app-col size=\\\"auto\\\">\\n          </app-col>\\n        </app-row>\\n        <app-row style=\\\"align-items: flex-start;\\\">\\n          <app-col><ion-badge color=\\\"success\\\">{{ item.ctgo_machine_serial_name }}</ion-badge></app-col>\\n        </app-row>\\n      </app-card>\\n    </ng-container>\\n  </ion-content>\\n  <app-button-footer *ngIf=\\\"btnPromise('insert')\\\">\\n    <app-button (click)=\\\"edit()\\\">신규배정</app-button>\\n  </app-button-footer>\\n</ng-container>\\n\";"],"sourceRoot":"webpack:///"}