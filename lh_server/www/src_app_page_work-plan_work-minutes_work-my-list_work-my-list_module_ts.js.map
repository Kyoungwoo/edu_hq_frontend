{"version":3,"sources":["./src/app/basic/service/util/date.service.ts","./src/app/page/work-plan/work-minutes/work-my-list/work-my-list-routing.module.ts","./src/app/page/work-plan/work-minutes/work-my-list/work-my-list.module.ts","./src/app/page/work-plan/work-minutes/work-my-list/work-my-list.page.ts","./src/app/page/work-plan/work-minutes/work-my-list/work-my-list.page.scss","./src/app/page/work-plan/work-minutes/work-my-list/work-my-list.page.html"],"names":[],"mappings":"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","file":"src_app_page_work-plan_work-minutes_work-my-list_work-my-list_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RegexService } from './regex.service';\n\nexport interface DateStringOptions {\n  day?:boolean | DayFormat,\n  format?:DateStringFormat\n}\nexport type DateStringFormat = '-' | '.' | '/' | 'Ko';\nexport type DayFormat = [string, string, string, string, string, string, string];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  constructor(\n    private regex: RegexService\n  ) { }\n\n  /** 오늘날짜, 혹은 오늘날짜를 기준으로 하는 다른 날짜들을 구한다. */\n  today(opts:{year?, month?, date?} = {year: 0, month: 0, date: 0}, type: 'DATE' | 'MINUTE' | 'SECOND' = 'DATE') {\n    const resDate = new Date();\n    if (opts.year) resDate.setFullYear(resDate.getFullYear() + opts.year);\n    if (opts.month) resDate.setMonth(resDate.getMonth() + opts.month);\n    if (opts.date) resDate.setDate(resDate.getDate() + opts.date);\n    switch(type) {\n      case 'DATE':\n        return resDate.getFullYear() + '-' + this.regex.replace.fix(resDate.getMonth() + 1, 2) + '-' + this.regex.replace.fix(resDate.getDate(), 2);\n      case 'MINUTE':\n        return resDate.getFullYear() + '-' + this.regex.replace.fix(resDate.getMonth() + 1, 2) + '-' + this.regex.replace.fix(resDate.getDate(), 2) +  ' ' + this.regex.replace.fix(resDate.getHours(), 2) + ':' + this.regex.replace.fix(resDate.getMinutes(), 2);\n      case 'SECOND':\n        return resDate.getFullYear() + '-' + this.regex.replace.fix(resDate.getMonth() + 1, 2) + '-' + this.regex.replace.fix(resDate.getDate(), 2) +  ' ' + this.regex.replace.fix(resDate.getHours(), 2) + ':' + this.regex.replace.fix(resDate.getMinutes(), 2) + ':' + this.regex.replace.fix(resDate.getSeconds(), 2);\n    }\n  }\n  /** Date 타입의 형태를 바꾼다. 요일 속성(day)를 활용하여 요일을 구할 수도 있다.. ex) 2021-01-01, 2021년 01월 01일 수요일 */\n  string(date:Date | string, opts?:DateStringOptions) {\n    date = typeof date === 'string' ? new Date(date) : date;\n    let dayString = \"\";\n    let formatList = [];\n    switch(opts?.format) {\n      case 'Ko':\n        formatList = ['년 ', '월 ', '일'];\n        break;\n      default:\n        formatList = [opts?.format, opts?.format, opts?.format];\n        break;\n    }\n    if(opts?.day) {\n      const dayList = opts?.day === true ? ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'] : opts?.day;\n      dayString = ' ' + dayList[new Date(date).getDay()];\n    }\n    return date.getFullYear() + formatList[0] + this.regex.replace.fix(date.getMonth() + 1, 2) + formatList[1] + this.regex.replace.fix(date.getDate(), 2) + formatList[2] + dayString;\n  }\n  /** 요일만 구한다. */\n  day(date:Date | string, dayFormat:DayFormat = null) {\n    date = typeof date === 'string' ? new Date(date) : date;\n    var week = dayFormat || ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'];\n    var dayOfWeek = week[new Date(date).getDay()];\n    return dayOfWeek;\n  }\n  /** 날짜를 기준으로 나이를 구한다. 기준은 한국 나이이다. */\n  age(date:Date | string) {\n    date = typeof date === 'string' ? new Date(date) : date;\n    return new Date().getFullYear() - date.getFullYear() + 1;\n  }\n  /** 두 날짜간의 차이를 구한다. 앞의 날짜가 크면 음수, 작으면 양수로 나온다. */\n  dirrerence(date1:string, date2:string, type:'Year'|'Month'|'Date'|'Hour' =\"Date\") {\n    const date_1 = new Date(date1);\n    const date_2 = new Date(date2);\n    const def_time = date_2.getTime() - date_1.getTime();\n    const def_days = def_time / (1000 * 3600 * 24);\n    const def_hours = def_time / (1000 * 3600);\n    switch(type) {\n        case 'Year':\n            return Math.floor(def_days / 365);\n        case 'Date':\n            return def_days;\n        case 'Hour':\n            return def_hours;\n        default:\n            return def_time;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WorkMyListPage } from './work-my-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WorkMyListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WorkMyListPageRoutingModule {}\n","import { WorkMyDetailPageModule } from './../work-my-detail/work-my-detail.module';\nimport { BasicComponentModule } from 'src/app/basic/component/basic.component.module';\nimport { ComponentModule } from 'src/app/component/component.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WorkMyListPageRoutingModule } from './work-my-list-routing.module';\n\nimport { WorkMyListPage } from './work-my-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    BasicComponentModule,\n    WorkMyListPageRoutingModule,\n    WorkMyDetailPageModule\n  ],\n  declarations: [WorkMyListPage]\n})\nexport class WorkMyListPageModule {}\n","import { WorkMyDetailPage } from './../work-my-detail/work-my-detail.page';\nimport { ScannerService } from './../../../../basic/service/util/scanner.service';\nimport { SafetyMeetingInfo } from 'src/app/page/work-plan/work-minutes/worker-minutes-list/worker-minutes-list.page';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\nimport { UserService } from 'src/app/basic/service/core/user.service';\nimport { DateService } from 'src/app/basic/service/util/date.service';\nimport { ToastService } from 'src/app/basic/service/ionic/toast.service';\nimport { ConnectService, ConnectResult } from 'src/app/basic/service/core/connect.service';\nimport { ModalController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-work-my-list',\n  templateUrl: './work-my-list.page.html',\n  styleUrls: ['./work-my-list.page.scss'],\n})\nexport class WorkMyListPage implements OnInit {\n  form = { \n    project_id: null,\n    // master_company_id: null,\n    // safety_meeting_type: '전체',\n    // start_date: this.date.today({ month: -1 }),\n    // end_date: this.date.today(),\n    // search_text: '',\n    // approval_cnt_answer: '전체',\n    limit_no: 0\n    // safety_meeting_state: '전체' as SafetyStateType\n  }\n\n  res:ConnectResult<SafetyMeetingInfo>;\n  // resFavorite:ConnectResult;\n\n  permission = {\n    company_id: false,\n    add: false\n  }\n\n  event = {\n    get: null\n  }\n\n  constructor(\n    private modal: ModalController,\n    private connect: ConnectService,\n    private toast: ToastService,\n    private date: DateService,\n    public user: UserService,\n    // private nav: NavService,\n    // private popover: PopoverController,\n    public languagePack: LanguagePackService,\n    private scanner: ScannerService\n  ) { }\n\n  async ngOnInit() {\n    // await this.getForm();\n    const { belong_data } = this.user.userData;\n    this.form.project_id = belong_data.project_id;\n\n    this.get();\n\n    // event 물리기\n    this.event.get = this.getEvent.bind(this);\n    window.addEventListener('worker-minutes-list:get()', this.event.get);\n  }\n  ngOnDestroy() {\n    window.removeEventListener('worker-minutes-list:get()', this.event.get);\n  }\n\n  /** event 파트 */\n  getEvent() {\n    this.get(0);\n  }\n\n  /** \n   * permission 과 form 을 가져옴.\n   */\n  // async getForm() {\n  //   const { user_role, belong_data } = this.user.userData;\n\n  //   this.form.project_id = belong_data.project_id;\n  //   this.form.master_company_id = belong_data.master_company_id;\n\n  //   if(belong_data.company_contract_type === 'LH'\n  //   || belong_data.company_contract_type === '감리사') {\n\n  //     this.permission.company_id = true;\n  //     this.permission.add = false;\n  //     this.form.master_company_id = 0;\n\n  //   }\n  //   else if(belong_data.company_contract_type === '원청사') {\n\n  //     this.permission.company_id = false;\n  //     // 원청사 관리자에게만 보이는 버튼. LH,감리,협력사의 경우 회의 진행 버튼이 없다.(회의록 기획서 9p)\n  //     this.permission.add = true;\n\n  //   }\n  //   else if(belong_data.company_contract_type === '협력사') {\n\n  //     this.permission.company_id = false;\n  //     this.permission.add = false;\n\n  //   }\n  // }\n\n  /**\n   * web, mobile 둘다 검색 시작할 때는 이걸 쓴다.\n   * 이유는 limit_no를 초기화할 필요성이 있기 떄문 + 1008 예외처리가 다르다.\n   */\n  async get(limit_no = this.form.limit_no) {\n    this.form.limit_no = limit_no;\n    \n    // let trans_form = JSON.parse(JSON.stringify(this.form));\n    // trans_form.project_id = trans_form.project_id ? [trans_form.project_id] : [];\n    this.res = await this.connect.run('/board/safety_meeting/my_list', {}, { loading: true });\n    if(this.res.rsCode === 0 ) {\n      this.res.rsMap.forEach((item, i) => {\n        switch(item.safety_meeting_type){\n          case '노사':\n            item.safety_meeting_type = '노사 협의체';\n          break;\n          case '안전':\n            item.safety_meeting_type = '안전 및 보건의 관한 협의체';\n          break;\n          case '산업':\n            item.safety_meeting_type = '산업안전보건보건위원회';\n          break;\n        }\n        item.index = this.res.rsObj.row_count - this.form.limit_no - i;\n      });\n    }\n    else if (this.res.rsCode === 1008) {\n      // 암것도 안함.\n    }\n    else {\n      this.toast.present({ color: 'warning', message: this.res.rsMsg });\n    }\n  }\n\n  /**\n   * 모바일 무한스크롤 시, 사용된다.\n   */\n  public async getMobile($event) {\n    this.form.limit_no = this.res.rsMap.length;\n\n    const res = await this.connect.run('/board/safety_meeting/my_list', {}, {\n    });\n    if(res.rsCode === 0 ) {\n      /**\n       * 모바일은 res를 대체하는 것이 아니라, 데이터를 스크롤 하단에 이어붙여야 함.\n       */\n      res.rsMap.forEach((item, i) => {\n        item.index = res.rsObj.row_count - this.form.limit_no - i;\n        this.res.rsMap.push(item);\n      });\n\n    } else if(res.rsCode === 1008) {\n      /** \n       * 더 로딩할 데이터가 없음. 게시판 형식과는 다르게, 데이터를 떼면, 데이터가 다 날아가기 때문에 데이터를 떼면 안됨.\n       * 아무것도 안하거나, 마지막 리스트라고 알려주기만 하면 됨.\n       */\n    } else {\n      this.toast.present({ color: 'warning', message: res.rsMsg });\n    }\n    setTimeout(() => {\n      $event.target.complete();\n    }, 50);\n  }\n\n  async edit(item:SafetyMeetingInfo) {\n    const modal = await this.modal.create({\n      component: WorkMyDetailPage,\n      componentProps: {\n        safety_meeting_id: item.safety_meeting_id\n      }\n    });\n    modal.present();\n  }\n\n  async inNfcQr() {\n    this.scanner.init().then((data) => {this.get(0)});\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3b3JrLW15LWxpc3QucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>나의 회의</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <app-menu-button></app-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar color=\\\"white\\\">\\n    <app-input-group>\\n      <!-- <app-input label=\\\"현장\\\" value=\\\"수원 당수 현장\\\" [readonly]=\\\"true\\\"></app-input> -->\\n      <app-select-scene name=\\\"project_id\\\" [all]=\\\"true\\\" [(ngModel)]=\\\"form.project_id\\\" [disabled]=\\\"true\\\"></app-select-scene>\\n      <!-- <app-button (click)=\\\"detailSearch()\\\">{{ languagePack.getText('상세검색') }}</app-button> -->\\n    </app-input-group>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <!-- <app-row>\\n    <app-col></app-col>\\n    <app-col size=\\\"auto\\\">\\n      <app-button fill=\\\"translucent\\\" (click)=\\\"pending()\\\">미결문서</app-button>\\n    </app-col>\\n  </app-row> -->\\n  \\n  <app-card *ngFor=\\\"let item of res?.rsMap\\\" (click)=\\\"edit(item)\\\">\\n    <app-row style=\\\"align-items: flex-start;\\\">\\n      <app-col>\\n        <h5>{{ item.safety_meeting_type }}</h5>\\n\\n      </app-col>\\n      <app-col size=\\\"auto\\\">\\n        <chip-safety-state [safety_meeting_state]=\\\"item.safety_meeting_state\\\"></chip-safety-state>\\n      </app-col>\\n    </app-row>\\n    <app-row>\\n      <app-col>\\n        <p>{{ item.master_company_name }} / {{ item.safety_meeting_place }} / {{ item.user_name }}</p>\\n        <p>회의일: {{ item.safety_meeting_date }} / {{ item.safety_meeting_time+'('+item.safety_meeting_date_week_day+')' }}</p>\\n        <!-- <ion-badge color=\\\"success\\\">{{ item.safety_meeting_state }}</ion-badge> -->\\n      </app-col>\\n    </app-row>\\n  </app-card>\\n  \\n  <ion-infinite-scroll threshold=\\\"100px\\\" id=\\\"infinite-scroll\\\" (ionInfinite)=\\\"getMobile($event)\\\">\\n    <ion-infinite-scroll-content loading-spinner=\\\"dots\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\\n\\n<app-button-footer>\\n  <div style=\\\"color: var(--ion-color-dark);\\\">\\n    회의 출석을 위해 회의진행자와<br>\\n    QR 코드 인식을 진행해주세요\\n  </div>\\n  <app-button (click)=\\\"inNfcQr()\\\">회의 출석(QR)</app-button>\\n</app-button-footer>\";"],"sourceRoot":"webpack:///"}