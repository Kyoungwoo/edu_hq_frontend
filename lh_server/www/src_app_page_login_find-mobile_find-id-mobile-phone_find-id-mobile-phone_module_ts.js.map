{"version":3,"sources":["./src/app/page/login/find-mobile/find-id-mobile-phone/find-id-mobile-phone-routing.module.ts","./src/app/page/login/find-mobile/find-id-mobile-phone/find-id-mobile-phone.module.ts","./src/app/page/login/find-mobile/find-id-mobile-phone/find-id-mobile-phone.page.ts","./src/app/page/login/find-mobile/find-id-mobile-phone/find-id-mobile-phone.page.scss","./src/app/page/login/find-mobile/find-id-mobile-phone/find-id-mobile-phone.page.html"],"names":[],"mappings":"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","file":"src_app_page_login_find-mobile_find-id-mobile-phone_find-id-mobile-phone_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FindIdMobilePhonePage } from './find-id-mobile-phone.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FindIdMobilePhonePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FindIdMobilePhonePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FindIdMobilePhonePageRoutingModule } from './find-id-mobile-phone-routing.module';\n\nimport { FindIdMobilePhonePage } from './find-id-mobile-phone.page';\nimport { ComponentModule } from 'src/app/component/component.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    FindIdMobilePhonePageRoutingModule\n  ],\n  declarations: [FindIdMobilePhonePage]\n})\nexport class FindIdMobilePhonePageModule {}\n","import { ChangeDetectorRef, Component, ElementRef, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { fadeAnimation } from 'src/app/basic/basic.animation';\nimport { Validator, ConnectResult, ConnectService } from 'src/app/basic/service/core/connect.service';\nimport { LanguagePackService } from 'src/app/basic/service/core/language-pack.service';\nimport { NavService } from 'src/app/basic/service/ionic/nav.service';\nimport { PromiseService } from 'src/app/basic/service/util/promise.service';\nimport { RegexService } from 'src/app/basic/service/util/regex.service';\nimport { environment } from 'src/environments/environment';\nimport { FindIdForm, FindIdFormMock } from '../../login.interface';\n\n@Component({\n  selector: 'app-find-id-mobile-phone',\n  templateUrl: './find-id-mobile-phone.page.html',\n  styleUrls: ['./find-id-mobile-phone.page.scss'],\n  animations: [ fadeAnimation ]\n})\nexport class FindIdMobilePhonePage implements OnInit {\n\n  form = new FindIdForm();\n  validator = new Validator(new FindIdForm()).validator;\n  res:ConnectResult;\n\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    private connect: ConnectService,\n    private activedRoute: ActivatedRoute,\n    private nav: NavService,\n    public regex: RegexService,\n    private promise: PromiseService,\n    private changeDetector: ChangeDetectorRef,\n    public languagePack: LanguagePackService\n  ) { }\n\n  ngOnInit() {\n    this.test();\n  }\n\n  private async test() {\n    if(!environment.test.core.test) return;\n    if(!environment.test.FindId.test) return;\n\n    const el = this.el.nativeElement;\n    await this.promise.wait();\n\n    // 입력 데이터 삽입\n    const form = new FindIdFormMock();\n    for(const key in form) {\n      const value = form[key];\n      const input = el.querySelector(`[name=${key}]`);\n      if(input && value) input.dispatchEvent(new CustomEvent('setValue', { detail: value }));\n\n    }\n    await this.promise.wait();\n\n    // 문자 인증 전송\n    el.querySelector('[name=user_phone]').dispatchEvent(new Event('buttonClick'));\n    await this.promise.wait(1500);\n\n    // 문자 인증번호 가져와서 넣기\n    const { user_phone } = this.form;\n    const res = await this.connect.run('/test/sms/get', { user_phone });\n    this.form.sms_token = res.rsObj.sms_token;\n    await this.promise.wait();\n\n    // 문자 인증\n    this.changeDetector.detectChanges();\n    el.querySelector('[name=sms_token]').dispatchEvent(new Event('buttonClick'));\n    await this.promise.wait();\n\n    // 다음 프로세스\n    el.querySelector('[name=button_next]').dispatchEvent(new Event('click'));\n  }\n\n  public prev() {\n    this.nav.navigateBack('/find-id-mobile-type');\n  }\n  public async next() {\n    if(!this.valid()) return;\n\n    this.res = await this.connect.run('/sign/find/account_id', this.form, { loading: true });\n    if(this.res.rsCode === 0) {\n      this.nav.navigateForward('/find-id-mobile-result', {\n        state: {\n          result: {\n            account_id: this.res.rsObj.account_id,\n            user_name: this.form.user_name\n          }\n        }\n      });\n    }\n  }\n\n  public async aligoSend() {\n    const { user_phone } = this.form;\n    if(this.validator.user_phone?.valid === false) return;\n    const res = await this.connect.run('/aligo/send', { user_phone });\n    this.validator.user_phone = { valid: res.rsCode === 0, message: res.rsMsg };\n  }\n  public async aligoCheck() {\n    const { user_phone, sms_token } = this.form;\n    const res = await this.connect.run('/aligo/check', { user_phone, sms_token });\n    this.validator.sms_token = { valid: res.rsCode === 0, message: res.rsMsg };\n  }\n\n  private valid():boolean {\n    if(!this.form.user_name) this.validator.user_name = { message: '이름을 입력해주세요.', valid: false };\n    else this.validator.user_name = { valid: true };\n\n    if(!this.form.user_phone) this.validator.user_phone = { message: '휴대폰번호를 입력해주세요.', valid: false };\n    else if(this.validator.user_phone?.valid)\n    this.validator.user_phone = { valid: true };\n\n    if(!this.form.sms_token) this.validator.sms_token = { message: '문자인증번호를 입력해주세요.', valid: false };\n    else if(this.validator.sms_token?.valid)\n    this.validator.sms_token = { valid: true };\n\n    for(let key in this.validator) {\n      if(!this.validator[key]?.valid) return false;\n    }\n    return true;\n  }\n\n}","export default \"app-row {\\n  align-items: flex-start;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmQtaWQtbW9iaWxlLXBob25lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJmaW5kLWlkLW1vYmlsZS1waG9uZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhcHAtcm93IHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/find-id-mobile-type\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ languagePack.getText('아이디 찾기') }} </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <app-container size=\\\"small\\\">\\n    <h4>{{ languagePack.getText('등록한 휴대폰으로 찾기') }} </h4>\\n    <app-card *ngIf=\\\"res && res.rsCode\\\" color=\\\"warning\\\">{{ res.rsMsg }}</app-card>\\n    <app-input\\n    name=\\\"user_name\\\" [label]=\\\"languagePack.getText('성명')\\\"\\n    [placeholder]=\\\"languagePack.getText('이름을 입력해주세요')\\\"\\n    [color]=\\\"validator.user_name?.valid === false && 'warning'\\\"\\n    [(ngModel)]=\\\"form.user_name\\\" [required]=\\\"true\\\"></app-input>\\n    <app-input-caption *ngIf=\\\"validator.user_name?.valid === false\\\" color=\\\"warning\\\">{{ validator.user_name?.message }}</app-input-caption>\\n    <app-input name=\\\"user_phone\\\" [label]=\\\"languagePack.getText('휴대폰')\\\" [placeholder]=\\\"languagePack.getText('- 없이 숫자만 입력해주세요')\\\" type=\\\"tel\\\" \\n    [color]=\\\"validator.user_phone?.valid === false ? 'warning' \\n    : validator.sms_token?.valid === true && 'success'\\\"\\n    [(ngModel)]=\\\"form.user_phone\\\" (delayKeyup)=\\\"validator.user_phone = null\\\" (buttonClick)=\\\"aligoSend()\\\" [required]=\\\"true\\\">\\n    {{ languagePack.getText('인증번호 받기') }}\\n    </app-input>\\n    <app-input-caption *ngIf=\\\"validator.user_phone?.valid === false\\\" color=\\\"warning\\\">{{ validator.user_phone?.message }}</app-input-caption>\\n    <app-input-caption *ngIf=\\\"validator.sms_token?.valid\\\" color=\\\"success\\\">인증이 완료되었습니다.</app-input-caption>\\n    <div @fadeAnimation *ngIf=\\\"validator.user_phone?.valid && !validator.sms_token?.valid\\\">\\n      <app-input\\n      name=\\\"sms_token\\\" [label]=\\\"languagePack.getText('인증번호')\\\" [placeholder]=\\\"languagePack.getText('인증번호를 입력해주세요')\\\" type=\\\"tel\\\"\\n      [color]=\\\"validator.sms_token?.valid === false && 'warning'\\\"\\n      [(ngModel)]=\\\"form.sms_token\\\" (delayKeyup)=\\\"validator.sms_token = null\\\" (buttonClick)=\\\"aligoCheck()\\\" [required]=\\\"true\\\">\\n      {{ languagePack.getText('확인') }}\\n      </app-input>\\n      <app-input-caption *ngIf=\\\"validator.sms_token?.valid === false\\\" color=\\\"warning\\\">{{ validator.sms_token?.message }}</app-input-caption>\\n    </div>\\n  </app-container>\\n</ion-content>\\n<app-button-footer>\\n  <app-button (click)=\\\"prev()\\\">{{ languagePack.getText('이전') }}</app-button>\\n  <app-button name=\\\"button_next\\\" (click)=\\\"next()\\\">{{ languagePack.getText('다음') }}</app-button>\\n</app-button-footer>\";"],"sourceRoot":"webpack:///"}